;; ============================================================================
;;                  	REARDEN COMMERCE, INC.
;;                  	Dining Ontology
;; ============================================================================

;; Created by: Karen Joy Nomorosa (karen.nomorosa [at] reardencommerce [dot] com)
;; Created on: March 8, 2011
;; Last modified: April 1, 2011
;; Modified by: Karen Joy Nomorosa (karen.nomorosa [at] reardencommerce [dot] com)

;; Description:  This ontology describes different concepts related to Dining

;; Ontology dependencies for Dining.kif: Merge.kif, Mid-level-ontology.kif

;; Access to and use of these products is governed by the GNU General Public 
;; License <http://www.gnu.org/copyleft/gpl.html>. 
;; By using these products, you agree to be bound by the terms 
;; of the GPL.

;; We ask the people using or referencing this work cite our primary paper:

;; Niles, I., and Pease, A.  2001.  Towards a Standard Upper Ontology.  In 
;; Proceedings of the 2nd International Conference on Formal Ontology in 
;; Information Systems (FOIS-2001), Chris Welty and Barry Smith, eds, 
;; Ogunquit, Maine, October 17-19, 2001.  See also http://www.ontologyportal.org

;; ----------------------------------------------------------------------------
;; Restaurant Subclasses
;; ----------------------------------------------------------------------------

      
(subclass Coffeeshop Cafeteria)
(documentation Coffeeshop EnglishLanguage "a type of &%Cafeteria that 
specializes in serving &%Coffee")
(termFormat EnglishLanguage Coffeeshop "coffee shop")

(=>
  (instance ?COMPANY Coffeeshop)
  (exists (?SERVICE ?BEVERAGE)
    (and
      (instance ?SERVICE CommercialService)
      (agent ?SERVICE ?COMPANY)
      (instance ?SERVICE Selling)
      (patient ?SERVICE ?BEVERAGE)
      (instance ?BEVERAGE Coffee))))

(subclass Brewpub Tavern)
(documentation Brewpub EnglishLanguage "a type of &%Tavern that brews 
&%Beer and whose primary service is selling that &%Beer to customers")
(termFormat EnglishLanguage Brewpub "Brewpub")

(=>
  (instance ?PUB Brewpub)
  (exists (?SERVICE ?BEER ?BREW)
    (and
      (instance ?BREW Making)
      (result ?BREW ?BEER)
      (instance ?BEER Beer)
      (agent ?BREW ?PUB)
      (instance ?SERVICE CommercialService)
      (agent ?SERVICE ?PUB)
      (instance ?SERVICE Selling)
      (patient ?SERVICE ?BEER))))

(subclass Bakery CommercialAgent)
(documentation Bakery EnglishLanguage "a type of &%Business that specializes 
in the production and selling of the &%result of the process &%Baking")
(termFormat EnglishLanguage Bakery "bakery")

(=> 
  (instance ?BAKERY Bakery)
  (exists (?SERVICE ?FOOD ?BAKE)
    (and
      (instance ?BAKE Baking)
      (result ?BAKE ?FOOD)
      (instance ?FOOD (FoodForFn Human))
      (agent ?BAKE ?BAKERY)
      (instance ?SERVICE CommercialService)
      (agent ?SERVICE ?BAKERY)
      (instance ?SERVICE Selling)
      (patient ?SERVICE ?FOOD))))

(subclass Steakhouse Restaurant)
(documentation Steakhouse EnglishLanguage "a type of &%Restaurant that 
specializes in serving steak, which is cooked &%Beef")
(termFormat EnglishLanguage Steakhouse "steakhouse")

(=>
  (instance ?STEAKHOUSE Steakhouse)
  (exists (?SERVICE ?STEAK ?BEEF)
    (and
      (instance ?COOK Cooking)
      (instance ?BEEF Beef)
      (resource ?COOK ?BEEF)
      (result ?COOK ?STEAK)
      (instance ?SERVICE CommercialService)
      (agent ?SERVICE ?STEAKHOUSE)
      (instance ?SERVICE Selling)
      (patient ?SERVICE ?STEAK))))


;; ----------------------------------------------------------------------------
;; Dining Concepts
;; ----------------------------------------------------------------------------
(subclass Corkage ChargingAFee)
(documentation Corkage EnglishLanguage "&%Corkage is a &%FinancialTransaction imposed
by an &%Agent to a customer for bringing items not purchased from &%Agent")
(termFormat EnglishLanguage Corkage "corkage")

(=>
  (instance ?C Corkage)
  (exists (?AMT)
    (amountCharged ?C ?AMT)))

(instance corkageFee TernaryPredicate)
(documentation corkageFee EnglishLanguage "(&%corkageFee ?AMT ?ITEM ?AGENT) refers to 
the amount ?AMT that ?AGENT charges during a &%Corkage when a customer brings in ?ITEM")
(termFormat EnglishLanguage corkageFee "corkage fee")
(domain corkageFee 1 CurrencyMeasure)
(domainSubclass corkageFee 2 Object)
(domain corkageFee 3 Agent)

  
;; if an agent charges corkage for a particular class of items, and customer brings
;; instances of said items not purchased from agent and consumed while at agent's location,
;; then an instance of corkage occurs

;; Note: This is still problematic as IntentionalProcess can include something like 
;; Carrying in which case corkage may not be charged even if ?ITEM is brought in
(=>
  (and
    (customer ?CUST ?AGENT)
    (corkageFee ?AMT ?ITEM ?AGENT)
    (instance ?X ?ITEM)
    (not (exists (?B)
      (and
        (instance ?B Buying)
        (patient ?B ?X)
        (destination ?B ?CUST)
        (origin ?B ?AGENT))))
    (holdsDuring (WhenFn (located ?CUST ?LOC))
      (and
        (instance ?P IntentionalProcess)
        (or
          (patient ?P ?X)
          (resource ?P ?X)
          (instrument ?P ?X))
        (agent ?P ?CUST))))
  (exists (?C)
    (and
      (instance ?C Corkage)
      (agent ?C ?CUST)
      (destination ?C ?AGENT))))

;; Outdoor Dining 
(subclass OutdoorDiningArea DiningArea)
(documentation OutdoorDiningArea EnglishLanguage "&%OutdoorDiningArea 
refers to a place for eating that is not inside a building")
(termFormat EnglishLanguage OutdoorDiningArea "outdoor dining")
(disjoint OutdoorDiningArea DiningRoom)

(=>
  (instance ?D OutdoorDiningArea)
  (exists (?O)
    (and
      (instance ?O Outdoors)
      (located ?D ?O))))

    
;; ----------------------------------------------------------------------------
;; Menu / Food Concepts
;; ----------------------------------------------------------------------------


;; Catalog
(subclass Catalog Proposition)
(documentation Catalog EnglishLanguage "a &%Catalog is a &%Proposition of the 
classes of resources that an agent provides or offers")
(termFormat EnglishLanguage Catalog "catalog")

(=>
  (instance ?CATALOG Catalog)
  (exists (?X)
    (and
      (subclass ?X Agent)
      (offers ?AGENT ?CATALOG))))

;; (catalogItem ?OBJ ?CATALOG)
(instance catalogItem BinaryRelation)
(documentation catalogItem EnglishLanguage "(&%catalogItem ?OBJ ?CATALOG) means that 
an instance of ?OBJ is a member of ?CATALOG")
(domainSubclass catalogItem 1 Physical)
(domain catalogItem 2 Catalog)

(=>
  (catalogItem ?OBJ ?CATALOG)
  (exists (?X)
    (and
      (instance ?X ?OBJ)
      (abstractCounterpart ?PROP ?X)
      (instance ?PROP Proposition)
      (subProposition ?PROP ?CATALOG))))
      
;; (offers ?AGENT ?CATALOG)
(documentation offers EnglishLanguage "(&%offers ?AGENT ?CATALOG) means that 
?AGENT offers items of ?CATALOG to its customers")
(instance offers BinaryPredicate)
(domain offers 1 Agent)
(domain offers 2 Catalog)
(termFormat EnglishLanguage offers "offers")

;; if an agent offers a process as a catalog item, then that agent is capable of
;; being an agent in that process
(=>
  (and
    (offers ?AGENT ?CATALOG)
    (catalogItem ?CLASS ?CATALOG)
    (subclass ?CLASS Process))
  (capability ?CLASS agent ?AGENT))

;; if an agent offers an object as a catalog item, then that agent is capable of being
;; an agent in a process that has that object as the patient (such as selling or
;; cooking or serving)
(=>
  (and
    (offers ?AGENT ?CATALOG)
    (catalogItem ?CLASS ?CATALOG)
    (subclass ?CLASS Object)
    (instance ?PROCESSINST ?PROCESS)
    (subclass ?PROCESS Process)
    (instance ?OBJ ?CLASS)
    (patient ?PROCESSINST ?OBJ))
  (capability ?PROCESS agent ?AGENT))

;; (offersAtTime ?AGENT ?CATALOG ?TIMEINT)
(documentation offersAtTime EnglishLanguage "(%&offersAtTime ?AGENT ?CATALOG ?TIMEINT) 
means that ?AGENT offers items of ?CATALOG to its customer only during the specified 
?TIMEINT")      
(instance offersAtTime TernaryPredicate)
(domain offers 1 Agent)
(domain offers 2 Catalog)
(domain offers 3 TimeInterval)

(=>
  (and
    (offersAtTime ?AGENT ?CATALOG ?TIMEINT)
    (catalogItem ?CLASS ?CATALOG)
    (subclass ?CLASS Process))
  (capabilityDuring ?CLASS agent ?AGENT ?TIMEINT))

(=>
  (and
    (offersAtTime ?AGENT ?CATALOG ?TIMEINT)
    (catalogItem ?CLASS ?CATALOG)
    (subclass ?CLASS Object)
    (instance ?PROCESSINSTANCE ?PROCESS)
    (subclass ?PROCESS Process)
    (instance ?OBJ ?CLASS)
    (patient ?PROCESSINSTANCE ?OBJ))
  (capabilityDuring ?PROCESS agent ?AGENT ?TIMEINT))
      
;; Menu
(subclass Menu Catalog)
(documentation Menu EnglishLanguage "a &%Menu is a type of &%Catalog that specifically
contains the classes of food that is expected to be or proposed to be cooked and 
served")
(termFormat EnglishLanguage Menu "menu")

(=>
  (instance ?MENU Menu)
  (forall (?X)
    (=>
      (catalogItem ?X ?MENU)
      (subclass ?X (FoodForFn Human)))))

(subclass SetMenu Menu)
(documentation SetMenu EnglishLanguage "a &%SetMenu is a type of &%Menu that contains
a specific set of prepared food which is all served and is given one price")
(termFormat EnglishLanguage SetMenu "set menu")

(=>
  (and
    (instance ?MENU SetMenu)
    (offers ?AGENT ?MENU))
  (price ?MENU ?PRICE ?AGENT))
            
  
(subclass BeverageMenu Menu)
(documentation BeverageMenu EnglishLanguage "a &%BeverageMenu is a &%Menu 
of &%Beverages")
(termFormat EnglishLanguage BeverageMenu "drinks menu")

(=>
  (instance ?MENU BeverageMenu)
  (forall (?X)
    (=>
      (catalogItem ?X ?MENU)
      (subclass ?MEMB Beverage))))

(subclass AlcoholMenu BeverageMenu)
(documentation AlcoholMenu EnglishLanguage "an &%AlcoholMenu is a &%Menu 
of &%AlcoholicBeverage")
(termFormat EnglishLanguage AlcoholMenu "cocktail menu")

(=>
  (instance ?MENU AlcoholMenu)
  (forall(?X)
    (=>
      (catalogItem ?X ?MENU)
      (subclass ?MEMB AlcoholicBeverage))))


(subclass WineMenu AlcoholMenu)
(documentation WineMenu EnglishLanguage "a &%WineMenu is a &%Menu of &%Wine")
(termFormat EnglishLanguage WineMenu "wine list")

(=>
  (instance ?MENU WineMenu)
  (forall(?X)
    (=>
      (catalogItem ?X ?MENU)
      (subclass ?MEMB WineMenu))))
 
;; Braille
(instance Braille PerceptualAttribute)
(documentation Braille EnglishLanguage "&%Braille is an &%Attribute that 
describes &%ContentBearingObject that can be interpreted by a &%Blind &%Human")
  
(=>
  (attribute ?X Braille)
  (instance ?X ContentBearingObject))

(=>
  (and
    (instance ?X ContentBearingObject)
    (attribute ?X Braille))
  (exists (?H)
    (and
      (instance ?H Human)
      (attribute ?H Blind)
      (capability Interpreting agent ?H)
      (capability Interpreting patient ?X))))
      
(subclass Meal Collection)
(documentation Meal EnglishLanguage "&%Meal refers to a &%Collection of (%&FoodForFn 
&%Human) that is eaten at one time")
(termFormat EnglishLanguage Meal "meal")

(=>
  (instance ?X Meal)
  (forall (?ITEM)
    (=>
      (member ?ITEM ?X)
      (instance ?ITEM (FoodForFn Human)))))

;; a meal is meant to be eaten 
(=>
  (instance ?X Meal)
  (hasPurpose ?X
    (exists (?E)
      (and
        (instance ?E Eating)
        (patient ?E ?X)))))

;; decided to make breakfast, etc. an attribute because the same instances of food,
;; for instance, can be breakfast, lunch, or dinner, depending on what time you eat it
;; also, it allows us to attach the attribute to food instances (such as 'breakfast food')
;; or to a menu (such as 'breakfast menu'), or to a buffet (such as 'brunch buffet')            
(instance Breakfast RelationalAttribute)
(documentation Breakfast EnglishLanguage "&%Breakfast describes food that is 
usually the first meal of the day, eaten during the morning")
(termFormat EnglishLanguage Breakfast "breakfast")

;; breakfast meal is typically eaten in the morning
(=>
  (and
    (instance ?X Meal)
    (attribute ?X Breakfast)
    (instance ?E Eating)
    (patient ?E ?X)
    (time ?E ?TIME)
    (equal ?PROB1
      (ProbabilityFn 
        (and
          (instance ?MORNING Morning)
          (during ?TIME ?MORNING))))
    (equal ?PROB2
      (ProbabilityFn 
        (and
          (not (instance ?NOTMORNING Morning))
          (during ?TIME ?NOTMORNING)))))
  (greaterThan ?PROB1 ?PROB2))

(instance Lunch RelationalAttribute)
(documentation Lunch EnglishLanguage "&%Lunch refers to something that is usually eaten
mid-day")
(termFormat EnglishLanguage Lunch "lunch")

;; lunch is typically eaten in the afternoon
(=>
  (and
    (instance ?X Meal)
    (attribute ?X Lunch)
    (instance ?E Eating)
    (patient ?E ?X)
    (time ?E ?TIME)
    (equal ?PROB1
      (ProbabilityFn 
        (and
          (instance ?PM Afternoon)
          (during ?TIME ?PM))))
    (equal ?PROB2
      (ProbabilityFn 
        (and
          (not (instance ?PM Afternoon))
          (during ?TIME ?PM)))))
  (greaterThan ?PROB1 ?PROB2))
  
(instance Dinner RelationalAttribute)
(documentation Dinner EnglishLanguage "&%Dinner refers to something that is typically
eaten during the evening")
(termFormat EnglishLanguage Dinner "dinner")

(=>
  (and
    (instance ?X Meal)
    (attribute ?X Dinner)
    (instance ?E Eating)
    (patient ?E ?X)
    (time ?E ?TIME)
    (equal ?PROB1
      (ProbabilityFn 
        (and
          (instance ?PM NightTime)
          (during ?TIME ?PM))))
    (equal ?PROB2
      (ProbabilityFn 
        (and
          (not (instance ?PM NightTime))
          (during ?TIME ?PM)))))
  (greaterThan ?PROB1 ?PROB2))

(instance HighTea RelationalAttribute)
(documentation HighTea EnglishLanguage "&%HighTea refers to something eaten mid-day that
consists of light snacks and tea")
(termFormat EnglishLanguage HighTea "high tea")

(=>
  (and
    (instance ?X Meal)
    (attribute ?X HighTea))
  (exists (?TEA)
    (and
      (instance ?TEA Tea)
      (member ?TEA ?X))))
      
(instance Brunch RelationalAttribute)
(documentation Brunch EnglishLanguage "&%Brunch refers the combination of breakfast 
and lunch")
(termFormat EnglishLanguage Brunch "brunch")

;; brunch is normally eaten in place of both breakfast and lunch
(=>
  (and
    (instance ?X Meal)
    (attribute ?X Brunch)
    (member ?FOOD ?X)
    (instance ?E Eating)
    (patient ?E ?FOOD)
    (agent ?E ?AGENT)
    (time ?E ?TIME)
    (during ?TIME ?DAY)
    (instance ?DAY Day))
  (and
    (ProbabilityFn ?PROB1
      (not
        (exists (?LUNCH1 ?BFAST1 ?E1 ?E2 ?TIME1 ?TIME2)
          (and
            (instance ?LUNCH1 Meal)
            (attribute ?LUNCH1 Lunch)
            (instance ?BFAST1 Meal)
            (attribute ?BFAST1 Breakfast)
            (instance ?E1 Eating)
            (instance ?E2 Eating)
            (patient ?E1 ?LUNCH1)
            (patient ?E2 ?BFAST1)
            (time ?E1 ?TIME1)
            (time ?E2 ?TIME2)
            (agent ?E1 ?AGENT)
            (agent ?E2 ?AGENT)
            (during ?TIME1 ?DAY)
            (during ?TIME2 ?DAY)))))
    (ProbabilityFn ?PROB2
      (exists (?LUNCH2 ?BFAST2 ?E3 ?E4 ?TIME3 ?TIME4)
        (and
          (instance ?LUNCH2 Meal)
          (attribute ?LUNCH2 Lunch)
          (instance ?BFAST2 Meal)
          (attribute ?BFAST2 Breakfast)
          (instance ?E3 Eating)
          (instance ?E4 Eating)
          (patient ?E3 ?LUNCH2)
          (patient ?E4 ?BFAST2)
          (time ?E3 ?TIME3)
          (time ?E4 ?TIME4)
          (agent ?E3 ?AGENT)
          (agent ?E4 ?AGENT)
          (during ?TIME3 ?DAY)
          (during ?TIME4 ?DAY))))
    (greaterThan ?PROB1 ?PROB2)))
            
(subclass Buffet Collection)
(documentation Buffet EnglishLanguage "&%Buffet refers to a &%Collection of food that
is served in a central location where guests can get their own servings")
(termFormat EnglishLanguage Buffet "buffet")

(=>
  (instance ?X Buffet)
  (forall (?ITEM)
    (=>
      (member ?ITEM ?X)
      (instance ?ITEM (FoodForFn Human)))))

(=>
  (instance ?X Buffet)
  (attribute ?X CommunalAttribute))
  
;; if a person is eating something from a buffet, then the person getting the food 
;; from the buffet's location occurs before the agent eating the food at another 
;; location  
(=>
  (and
    (instance ?X Buffet)
    (member ?ITEM ?X)
    (located ?X ?LOC1)
    (instance ?E Eating)
    (agent ?E ?AGENT)
    (located ?E ?LOC2)
    (patient ?E ?ITEM))
  (and
    (not (equal ?LOC1 ?LOC2))
    (exists (?G)
      (and
        (instance ?G Getting)
        (patient ?G ?ITEM)
        (origin ?G ?LOC1)
        (agent ?G ?AGENT)
        (before (WhenFn ?G) (WhenFn ?E))))))

  
;; ----------------------------------------------------------------------------
;; Restaurant Properties
;; ----------------------------------------------------------------------------

;; (subjectiveAttribute ?ENTITY ?ATTRIBUTE ?AGENT)
(documentation subjectiveAttribute EnglishLanguage "(&%subjectiveAttribute 
?ENTITY ?ATTR ?AGENT) means that ?AGENT attaches ?ATTR to ?ENTITY")
(instance subjectiveAttribute TernaryPredicate)
(domain subjectiveAttribute 1 Entity)
(domain subjectiveAttribute 2 Attribute)
(domain subjectiveAttribute 3 Agent)
(termFormat EnglishLanguage subjectiveAttribute "subjective attribute")

(=> 
  (subjectiveAttribute ?ENTITY ?ATTR ?AGENT)
  (exists (?RATE)
    (and
      (instance ?RATE Classifying)
      (agent ?RATE ?AGENT)
      (patient ?RATE ?ATTR)
      (destination ?RATE ?ENTITY))))				

(instance facility BinaryPredicate)
(documentation facility EnglishLanguage "(&%facility ?AGENT ?OBJ) means 
that an ?AGENT provides some ?OBJ to fulfill some goal or need")
(domain facility 2 Object)
(domain facility 1 Agent)
(termFormat EnglishLanguage facility "facility")

;; if an AGENT provides some OBJECT, and there exists a customer who wants 
;; to use that object, then AGENT allows the customer to use that OBJECT
(=>
  (and
    (facility ?AGENT ?OBJ)
    (customer ?CUST ?AGENT)
    (instance ?X ?OBJ)
    (exists (?PROC)
      (and
        (instance ?PROC IntentionalProcess)
        (patient ?PROC ?X)
        (agent ?PROC ?CUST))))
  (confersRight
    (uses ?CUST ?X) ?AGENT))
      
;; NOTE: You can use RecurrentTimeIntervalFn(HourFn HourFn) to come up with
;; ?TIMEINT
(businessHours ?TIMEINT ?AGENT)
(instance businessHours BinaryPredicate)
(documentation businessHours EnglishLanguage "(&%businessHours ?TIMEINT 
?AGENT) means that an ?AGENT conducts business-related activities during 
?TIMEINT")
(domainSubclass businessHours 1 TimeInterval)
(domain businessHours 2 Agent)
(termFormat EnglishLanguage businessHours "business hours")

;; (standardRetailHours ?TIMEINT ?AGENT)
(subrelation standardRetailHours businessHours)
(documentation standardRetailHours EnglishLanguage "(%&standardRetailHours 
?TIMEINT ?AGENT) means that an ?AGENT initiates face-to-face processes with 
customers only within the time specified by ?TIMEINT")
(domainSubclass standardRetailHours 1 TimeInterval)
(domain standardRetailHours 2 Agent)
(termFormat EnglishLanguage standardRetailHours "standard retail hours")

;; the probability that a customer can be served is higher if it is within
;; standardRetailHours
(=>
  (and
    (standardRetailHours ?TIMEINT ?AGENT)
    (exists (?C ?P ?START)
      (and
        (potentialCustomer ?C ?AGENT)
        (instance ?P IntentionalProcess)
        (destination ?P ?C)
        (instance ?START (StartFn ?P))
        (conditionalProbability 
          (during (WhenFn(?START) ?TIMEINT)) (agent ?P ?AGENT) ?NUMBER1)
        (conditionalProbability 
          (not (during (WhenFn(?START) ?TIMEINT))) (agent ?P ?AGENT) ?NUMBER2))))
  (lessThan ?NUMBER2 ?NUMBER1))
  
;; payment with a credit card
(subclass BankCardPayment Payment)
(documentation BankCardPayment EnglishLanguage "a &%BankCardPayment is a 
type of &%Payment where a &%CreditCard or a &%DebitCard is used as the 
&%FinancialInstrument in the transaction.")
(termFormat EnglishLanguage BankCardPayment "bank card payment")

;; if a process for BankCardPayment is undergone, then the instrument in 
;; that payment should be a ValidCard
(=>
  (and
    (instance ?P BankCardPayment)
    (destination ?P ?AGENT))
  (capability BankCardPayment destination ?AGENT))

(=>
  (instance ?P BankCardPayment)
  (and
    (instrument ?P ?C)
    (instance ?C BankCard)))
  
;; payment with cash
(subclass CashPayment Payment)
(documentation CashPayment EnglishLanguage "a &%CashPayment is a type of 
&%Payment where &%Cash is used as the &%FinancialInstrument in the 
transaction")
(termFormat EnglishLanguage CashPayment "cash payment")

(=>
  (instance ?P CashPayment)
  (and
    (instrument ?P ?C)
    (instance ?C Cash)))

(subclass Outfit Collection)
(documentation Outfit EnglishLanguage "&%Outfit describes the set of 
clothes worn by a person")
(termFormat EnglishLanguage Outfit "outfit")

(=>
  (and
    (instance ?X Outfit)
    (member ?ITEM1 ?X)
    (holdsDuring ?TIME
      (wears ?PERSON ?ITEM1)))
  (forall (?ITEM2)
    (=>
      (member ?ITEM2 ?X)
      (holdsDuring ?TIME
        (wears ?PERSON ?ITEM2)))))

;; (dressCode ?CODE ?AGENT)
(instance dressCode BinaryPredicate)
(documentation dressCode EnglishLanguage "(&%dressCode ?CODE ?AGENT) 
means that ?AGENT obligates his customers to wear at the minimum clothes 
that fulfill ?CODE")
(domain dressCode 1 AmbienceAttribute)
(domain dressCode 2 Agent)

;; if an agent has a dresscode, then the agent requires the customer to wear an 
;; outfit that conform to that dress code.
(=>
  (dressCode ?CODE ?AGENT)
  (modalAttribute
    (and
      (subjectiveAttribute ?OUTFIT ?CODE ?AGENT)
      (instance ?OUTFIT Outfit)
      (customer ?CUST ?AGENT)
      (holdsDuring (WhenFn (located ?CUST ?AGENT))
        (forall (?ITEM)
          (=>
            (member ?ITEM ?OUTFIT)
            (wears ?CUST ?ITEM))))) Obligation))
            
            
;; ----------------------------------------------------------------------------
;; Restaurant Services
;; ----------------------------------------------------------------------------


(subclass DeliveryService Transfer)
(documentation DeliveryService EnglishLanguage "&%DeliveryService refers to 
the &%Transfer of an &%Agent bringing objects purchased from &%Agent to a 
location indicated by the customer")
(termFormat EnglishLanguage DeliveryService "delivery service")

(=>
  (and
    (instance ?D DeliveryService)
    (agent ?D ?AGENT))
  (capability DeliveryService agent ?AGENT))

;; (deliveryRegion ?AGENT ?REGION)
(instance deliveryRegion BinaryPredicate)
(documentation deliveryRegion EnglishLanguage "(&%deliveryRegion ?AGENT 
?REGION ?DELIVERY) means that ?AGENT only does a &%DeliveryService if the 
destination is within ?REGION")
(domain deliveryRegion 1 Agent)
(domain deliveryRegion 2 GeographicArea)

(=>
  (deliveryRegion ?AGENT ?REGION)
  (capability DeliveryService agent ?AGENT))

;; the probability of an agent being capable of a delivery service is less 
;; if the location is outside of the delivery region
(=>
  (and
    (instance ?D DeliveryService)
    (destination ?D ?LOC1)
    (deliveryRegion ?AGENT ?REGION)
    (conditionalProbability 
      (located ?LOC1 ?REGION) (agent ?D ?AGENT) ?NUMBER1)
    (conditionalProbability 
      (not (located ?LOC1 ?REGION)) (agent ?D ?AGENT) ?NUMBER2))
  (lessThan ?NUMBER2 ?NUMBER1))

;; the origin and destination locations of a delivery service are not equal    
(=>
  (and
    (instance ?D DeliveryService)
    (origin ?D ?LOC1)
    (destination ?D ?LOC2))
  (not (equal ?LOC1 ?LOC2)))

(subclass CateringService ServiceProcess)
(documentation CateringService EnglishLanguage "&%CateringService refers 
to the &%ServiceProcess of an &%Agent to prepare food and beverage for 
consumption in a location away from where the agent is located")
(termFormat EnglishLanguage CateringService "catering")

;; a restaurant has to be capable of CateringService for an instance of 
;; CateringService to exist
(=>
  (and
    (instance ?P CateringService)
    (agent ?P ?REST))
  (capability ?P agent ?REST))

(=>
  (and
    (instance ?C CateringService)
    (agent ?C ?AGENT)
    (destination ?C ?CUST)
    (located ?AGENT ?LOC1)
    (customer ?CUST ?AGENT)
    (exists (?S ?FOOD ?E)
      (and
        (instance ?S Cooking)
        (agent ?S ?AGENT)
        (result ?S ?FOOD)
        (patient ?C ?FOOD)
        (instance ?E Eating)
        (agent ?E ?CUST)
        (located ?E ?LOC2))))
  (not (equal ?LOC1 ?LOC2)))
        
(subclass FoodPickup CateringService)
(documentation FoodPickup EnglishLanguage "&%FoodPickup is a type of 
&%CateringService where the customer has to pick up the food from the 
agent's location with the intent of eating it somewhere else.")
(termFormat EnglishLanguage FoodPickup "food pickup")

(=>
  (and
    (instance ?P FoodPickup)
    (agent ?P ?AGENT)
    (destination ?P ?CUST)
    (patient ?P ?FOOD))
  (and
    (instance ?FOOD Food)
    (exists (?LOC ?T ?G)
      (and
        (located ?AGENT ?LOC)
        (instance ?T Translocation)
        (agent ?T ?CUST)
        (destination ?T ?LOC)
        (instance ?G Getting)
        (origin ?G ?AGENT)
        (destination ?G ?CUST)
        (patient ?G ?FOOD)))))

(subclass DriveThru FoodPickup)
(documentation DriveThru EnglishLanguage "&%DriveThru is a type of 
&%FoodPickup where the customer uses a vehicle to drive thru a driveway 
and take the food from a window")
(termFormat EnglishLanguage DriveThru "Drive-thru")

;; ----------------------------------------------------------------------------
;; Reservations
;; ----------------------------------------------------------------------------

(subclass Reservation Agreement)
(documentation Reservation EnglishLanguage "a &%Reservation is a type of 
&%Agreement between 2 agents that some resource offered by the one agent 
is allotted for use or consumption by another at a specific bounded time")
(termFormat EnglishLanguage Reservation "reservation")

(=>
  (instance ?R Reservation)
  (exists (?P)
    (and
      (instance ?P Reserving)
      (result ?P ?R))))

(instance reservingEntity BinaryPredicate)
(documentation reservingEntity EnglishLanguage "(&%reservingEntity ?ENTITY 
?RESERVE) means that ?ENTITY is the &%Agent reserving a particular resource 
indicated by ?RESERVE")
(domain reservingEntity 1 Agent)
(domain reservingEntity 2 Reservation)

(=>
  (reservingEntity ?ENTITY ?RESERVE)
  (exists (?P)
    (and
      (instance ?P Reserving)
      (agent ?P ?ENTITY)
      (result ?P ?RESERVE))))

(instance reservationChannel BinaryPredicate)
(documentation reservationChannel EnglishLanguage "(&%reservationChannel 
?ENTITY ?RESERVE) means that ?ENTITY was used by the &%reservingEntity in 
order to create the reservation, like an intermediary agent.")
(domain reservationChannel 1 Physical)
(domain reservationChannel 2 Reservation)

(=>
  (reservationChannel ?ENTITY ?RESERVE)
  (exists (?P)
    (and
      (instance ?P Reserving)
      (instrument ?P ?ENTITY)
      (result ?P ?RESERVE))))
      
(instance fulfillingEntity BinaryPredicate)
(documentation fulfillingEntity EnglishLanguage "(&%fulfillingEntity 
?ENTITY ?RESERVE) means that ?ENTITY is the &%Agent who will execute the 
agreement")
(domain fulfillingEntity 1 Agent)
(domain fulfillingEntity 2 Reservation)

(=>
  (fulfillingEntity ?ENTITY ?RESERVE)
  (exists (?P)
    (and
      (instance ?P Reserving)
      (destination ?P ?ENTITY)
      (result ?P ?RESERVE))))

(instance reservationStart BinaryPredicate)
(documentation reservationStart EnglishLanguage "(&%reservationStart ?TIME 
?RESERVE) means that the use of a resource or consumption of a service 
which is the object of ?RESERVE starts at ?TIME")
(domain reservationStart 1 TimePoint)
(domain reservationStart 2 Reservation)

(instance reservationEnd BinaryPredicate)
(documentation reservationEnd EnglishLanguage "(&%reservationEnd ?TIME 
?RESERVE) means that the use of a resource or consumption of a service 
which is the object of ?RESERVE is expected to end at ?TIME")
(domain reservationEnd 1 TimePoint)
(domain reservationEnd 2 Reservation)

(=>
  (and
    (reservationStart ?TIME1 ?R)
    (reservationEnd ?TIME2 ?R)
    (reservingEntity ?CUST ?R)Agen
    (fulfillingEntity ?AGENT ?R))
  (modalAttribute
    (holdsDuring 
      (TimeIntervalFn ?TIME1 ?TIME2)
      (exists (?P)
        (and
          (instance ?P IntentionalProcess)
          (agent ?P ?AGENT)
          (destination ?P ?CUST)))) Likely))

(instance numberOfCustomers BinaryPredicate)
(documentation numberOfCustomers EnglishLanguage "(&%numberOfCustomers ?NUM 
?RESERVE) refers to the number of patrons the reservation is for.")
(domain numberOfCustomers 1 PositiveInteger)
(domain numberOfCustomers 2 Reservation)

(=>
  (and
    (numberOfCustomers ?NUM ?RESERVE)
    (fulfillingEntity ?AGENT ?RESERVE)
    (reservingEntity ?CUST ?RESERVE))
  (exists (?GRP)
    (and
      (potentialCustomer ?GRP ?AGENT)
      (instance ?GRP GroupOfPeople)
      (member ?CUST ?GRP)
      (memberCount ?GRP 2))))
                    
(subclass DiningReservation Reservation)
(documentation DiningReservation EnglishLanguage "a &%DiningReservation is 
a type of &%Reservation intended to reserve seats at a &%Restaurant")       

(=>
  (instance ?R DiningReservation)
  (and
    (fulfillingEntity ?AGENT ?R)
    (instance ?AGENT Restaurant)))

(subclass Reserving Committing)
(documentation Reserving EnglishLanguage "&%Reserving is a type of 
&%Committing that dedicates a specific object or service to a destination 
resource or service for a specific time interval")
(termFormat EnglishLanguage Reserving "reserving")

(=>
  (and
    (instance ?R Reserving)
    (agent ?R ?CUST)
    (destination ?R ?AGENT))
  (potentialCustomer ?CUST ?AGENT))

;; axiom for 'Requires Reservation' --> if a restaurant requires 
;; reservation, then the probability of a potentialCustomer becoming a 
;; customer if a reservation exists is higher
(=>
  (and
    (instance ?AGENT Agent)
    (potentialCustomer ?CUST ?AGENT)
    (modalAttribute
      (and
        (instance ?R Reserving)
        (destination ?R ?AGENT)) Necessity)
    (conditionalProbability
      (exists (?RES1)
        (and
          (instance ?RES1 Reservation)
          (reservingEntity ?CUST ?RES1)
          (fulfillingEntity ?AGENT ?RES1)))
      (customer ?CUST ?AGENT) ?NUM1)
    (conditionalProbability
      (not
        (exists (?RES2)
          (and
            (instance ?RES1 Reservation)
            (reservingEntity ?CUST ?RES2)
            (fulfillingEntity ?AGENT ?RES2))))
      (customer ?CUST ?AGENT) ?NUM2))
  (lessThan ?NUM2 ?NUM1))
      

;; ----------------------------------------------------------------------------
;; General Concepts
;; ----------------------------------------------------------------------------


(instance potentialCustomer BinaryPredicate)
(documentation potentialCustomer "(&%potentialCustomer ?CUST ?AGENT) means 
that it is a possibility for ?CUST to participate in a financial transaction 
with ?AGENT in exchange for goods or services")
(domain potentialCustomer 1 CognitiveAgent)
(domain potentialCustomer 2 Agent)

(=>
  (potentialCustomer ?CUST ?AGENT)
  (exists (?P ?SELLING)
    (and
      (instance ?SELLING Selling)
      (agent ?SELLING ?AGENT)
      (patient ?SELLING ?P)
      (inScopeOfInterest ?CUST ?P))))
      
(=>
  (potentialCustomer ?CUST ?AGENT)
  (modalAttribute
    (customer ?CUST ?AGENT) Possibility))

(instance Chef Profession)
(documentation Chef EnglishLanguage "&%Chef refers to the &%Profession 
of cooking food")
(termFormat EnglishLanguage Chef "chef")

(=>
  (attribute ?X Chef)
  (occupation ?X
    (OccupationFn Cooking)))

   
(subclass BoosterChair Chair)
(documentation BoosterChair EnglishLanguage "&%BoosterChair is a &%Chair that 
is made for children")
(termFormat EnglishLanguage BoosterChair "booster chair")

(=>
  (and
    (instance ?BC BoosterChair)
    (instance ?H HumanChild))
  (hasPurposeForAgent ?BC
    (and
      (attribute ?H Sitting)
      (located ?H ?CHAIR)) ?H))
      
(subclass Disability DiseaseOrSyndrome)
;; english definition taken from Wikipedia
(documentation Disability EnglishLanguage "&%Disability is a class of 
&%DiseaseOrSyndrome that describes impairments, activity limitations or participation 
restriction that may be physical, cognitive, mental, sensory, emotional, 
developmental or some combination")
(termFormat EnglishLanguage Disability "disability")

(subclass PhysicalDisability Disability)
;; english definition taken from Wikipedia
(documentation PhysicalDisability EnglishLanguage "&%PhysicalDisability is any 
impairment that limits the physical function of limbs or fine or gross motor ability, 
or limit the facets of daily living")
(termFormat EnglishLanguage PhysicalDisability "physical disability")

(subclass SensoryDisability Disability)
;; english definition taken from Wikipedia
(documentation SensoryDisability EnglishLanguage "&%SensoryDisability is any 
impairement of one of the five senses")
(termFormat EnglishLanguage SensoryDisability "sensory disability")

(instance Blind SensoryDisability)

;; add predicate for objects of contests in cases where what is being judged is not 
;; physical
(instance contestObject TernaryPredicate)
(documentation contestObject EnglishLanguage "(&%contestObject ?CONTEST ?OBJ ?AGENT) 
refers to the ?OBJ entered by ?AGENT in a ?CONTEST in cases where winning is based
on judging an &%Object instead of some physical process between opponents")
(domain contestObject 1 Contest)
(domain contestObject 2 Object)
(domain contestObject 3 Agent)

(=>
  (contestObject ?CONTEST ?OBJ ?AGENT)
  (and
    (contestParticipant ?CONTEST ?AGENT)
    (exists (?MAKE ?JUDGE ?PROC)
      (and
        (instance ?MAKE Making)
        (result ?MAKE ?OBJ)
        (agent ?MAKE ?AGENT)
        (instance ?PROC Judging)
        (agent ?PROC ?JUDGE)
        (patient ?PROC ?OBJ)
        (result ?PROC (subjectiveAttribute ?OBJ ?ATTR ?JUDGE))
        (subProcess ?PROC ?CONTEST)))))

;; axiom for contest attribute Won

(=>
  (and
    (subjectiveAttribute ?X Won ?JUDGE)
    (instance ?X (FoodForFn Human)))
  (exists (?CONTEST ?AGENT ?PROC)
    (and
      (contestObject ?CONTEST ?X ?AGENT)
      (instance ?PROC Judging)
      (agent ?PROC ?JUDGE)
      (subProcess ?PROC ?CONTEST))))

;; add the notion of availability to capability
(instance capabilityDuring QuaternaryPredicate)
(documentation capabilityDuring EnglishLanguage "(&%capabilityDuring ?PROCESS ?ROLE 
?OBJ ?TIMEINT) means that ?OBJ has the ability to play the role of ?ROLE in the
process ?PROCESS during the time indicated by ?TIMEINT")
(termFormat EnglishLanguage capabilityDuring "capable during")
(domainSubclass capabilityDuring 1 Process)
(domain capabilityDuring 2 CaseRole)
(domain capabilityDuring 3 Object)
(domainSubclass capabilityDuring 4 TimeInterval)

(=> 
  (capabilityDuring ?PROCESS ?ROLE ?OBJ ?TIMEINT)
  (exists (?TIME)
    (and
      (instance ?TIME ?TIMEINT)
      (holdsDuring ?TIMEINT
        (capability ?PROCESS ?ROLE ?OBJ)))))

;; ----------------------------------------------------------------------------
;; Other Features
;; ----------------------------------------------------------------------------  

(subclass View VisualContentBearingPhysical)
(documentation View EnglishLanguage "&%View refers to the patient of a 
&%Seeing process")
(termFormat EnglishLanguage View "view")

;; a view represents some physical thing (could be a process, such as "view of the
;; manufacturing process" if a person is sitting at an office overseeing a factory, or
;; could be objects such as "view of the casino" or, the more common "view of the
;; outdoors"
(=>
  (instance ?VIEW View)
  (exists (?ENTITY)
    (and
      (instance ?ENTITY Physical)
      (represents ?VIEW ?ENTITY))))

(instance OpenLayout RelationalAttribute)
(documentation OpenLayout EnglishLanguage "&%OpenLayout refers to different 
functional areas that are adjacent to each other and are visible from one 
area to another")
(termFormat EnglishLanguage OpenLayout "open layout")

(=>
  (attribute ?ROOM OpenLayout)
  (and
    (instance ?ROOM Room)
    (exists (?R1 ?R2)
      (and
        (instance ?R1 Region)
        (instance ?R2 Region)
        (located ?R1 ?ROOM)
        (located ?R2 ?ROOM)
        (not (equal ?R1 ?R2))
        (orientation ?R1 ?R2 Adjacent)
        (exists (?P1 ?P2)
          (and
            (instance ?P1 Process)
            (instance ?P2 Process)
            (hasPurpose ?R1 ?P1)
            (hasPurpose ?R2 ?P2)))
        (=>
          (and
            (instance ?H Agent)
            (located ?H ?R2))
          (and
            (capability Seeing agent ?H)
            (capability Seeing patient ?R1)))))))

(subclass PlayArea Region)
(documentation PlayArea EnglishLanguage "&%PlayArea refers to a &%Region 
where children engage in recreational activities")
(termFormat EnglishLanguage PlayArea "playground")

(=>
  (instance ?P PlayArea)
  (hasPurpose ?P
    (exists (?K ?REC)
      (and
        (instance ?REC RecreationOrExercise)
        (located ?REC ?P)
        (instance ?K HumanChild)
        (agent ?REC ?K)))))

 
;; ----------------------------------------------------------------------------
;; Descriptors / Attributes
;; ----------------------------------------------------------------------------  

(instance Organic NormativeAttribute)
(documentation Organic EnglishLanguage "&%Organic describes the minimal 
use of chemicals in the production of an object")
(termFormat Organic EnglishLanguage "organic")

(instance Favorite NormativeAttribute)
(documentation Favorite EnglishLanguage "&%Favorite is an attribute that describes
how an agent prefers one thing over another")
(termFormat Favorite EnglishLanguage "favorite")

(=>
  (and
    (subjectiveAttribute ?X Favorite ?AGENT)
    (instance ?X ?CLASS))
  (exists (?Y)
    (and
      (not (subjectiveAttribute ?Y Favorite ?AGENT))
      (instance ?Y ?CLASS)
      (prefers ?AGENT (wants ?AGENT ?X) (wants ?AGENT ?Y)))))

(subclass TimeAttribute SubjectiveAssessmentAttribute)
(documentation TimeAttribute EnglishLanguage "&%TimeAttribute refers to the class of
attributes that include and assessment of how long it takes an agent to do something")

(=>
  (and
    (subjectiveAttribute ?OBJ ?ATTR ?AGENT)
    (instance ?ATTR TimeAttribute))
  (instance ?OBJ Agent))

(instance Quick TimeAttribute)
(documentation Quick EnglishLanguage "&%Quick describes how a process takes less 
time than expected")
(termFormat EnglishLanguage Quick "quick") 

(instance Slow TimeAttribute)
(documentation Slow EnglishLanguage "&%Slow describes how a process takes more 
time than expected")
(termFormat EnglishLanguage Slow "slow")  

(=>
  (and
    (subjectiveAttribute ?AGENT1 Quick ?PERSON)
    (subjectiveAttribute ?AGENT2 Slow ?PERSON)
    (instance ?PROCESS1 ?CLASS)
    (instance ?PROCESS2 ?CLASS)
    (subclass ?CLASS Process)
    (agent ?PROCESS1 ?AGENT1)
    (agent ?PROCESS2 ?AGENT2))
  (and
    (duration (WhenFn ?PROCESS1) ?TIME1)
    (duration (WhenFn ?PROCESS2) ?TIME2)
    (greaterThan ?TIME2 ?TIME1)))
      
(subclass AmbienceAttribute SubjectiveAssessmentAttribute)
(documentation AmbienceAttribute "&%AmbienceAttribute describes the 
atmosphere or general feeling that something evokes")
(termFormat EnglishLanguage AmbienceAttribute "ambience")

(=>
  (and
    (attribute ?X ?ATTR)
    (instance ?ATTR AmbienceAttribute))
  (instance ?X Physical))

(instance RomanticAttribute AmbienceAttribute)
(documentation RomanticAttribute "&%RomanticAttribute describes that 
something is of an amorous or non-platonic nature")
(termFormat EnglishLanguage RomanticAttribute "romantic")

(instance UnconventionalAttribute AmbienceAttribute)
(documentation UnconventionalAttribute "&%UnconventionalAttribute describes 
that something does not conform to the ordinary or the usual")
(termFormat UnconventionalAttribute EnglishLanguage "unconventional")

(instance TrendyAttribute AmbienceAttribute)
(documentation TrendyAttribute "&%TrendyAttribute describes that something 
is in accord with the latest fad")
(termFormat EnglishLanguage TrendyAttribute "trendy")

(instance ConventionalAttribute AmbienceAttribute)
(documentation ConventionalAttribute "&%ConventionalAttribute describes that 
something conforms to norms and expectations")
(termFormat ConventionalAttribute EnglishLanguage "conventional")
(successorAttributeClosure ConventionalAttribute UnconventionalAttribute)

(instance CasualAttribute AmbienceAttribute)
(documentation CasualAttribute "&%CasualAttribute describes that something 
is appropriate for ordinary or routine occasions")
(termFormat CasualAttribute EnglishLanguage "casual") 

(instance FormalAttribute AmbienceAttribute)
(documentation FormalAttribute "&%FormalAttribute describes that something 
is refined or meets a certain standard")
(termFormat FormalAttribute EnglishLanguage "formal") 

(instance BusinessCasualAttribute AmbienceAttribute)
(documentation BusinessCasualAttribute "&%BusinessCasualAttribute describes 
that something is appropriate for a normal business setting")
(termFormat BusinessCasualAttribute EnglishLanguage "business casual") 

(instance BusinessFormalAttribute AmbienceAttribute)
(documentation BusinessFormalAttribute "&%BusinessFormalAttribute describes 
that something is appropriate for a stricter or more refined business setting")
(termFormat BusinessFormalAttribute EnglishLanguage "business formal") 

(instance CasualDressyAttribute AmbienceAttribute)
(documentation CasualDressyAttribute "&%CasualDressyAttribute describes that something
is fancier than &%CasualAttribute, normally applied to clothing but can also be applied
to things like the ambience of a club or bar")
(termFormat CasualDressyAttribute EnglishLanguage "casual dressy")

(instance DressyAttribute AmbienceAttribute)
(documentation DressyAttribute "&%DressyAttribute describes a less laid-back and fancier
atmosphere, normally applied to clothing but can also be applied to things like the 
ambience of a club, bar or event")
(termFormat DressyAttribute EnglishLanguage "dressy")

(subclass FoodAttribute SubjectiveAssessmentAttribute)
(documentation FoodAttribute EnglishLanguage "&%FoodAttribute are 
descriptors that apply to &%Food but are highly subjective")
(termFormat FoodAttribute EnglishLanguage "food attribute")

(=>
  (and
    (attribute ?OBJ ?ATTR)
    (instance ?ATTR FoodAttribute))
  (instance ?OBJ PreparedFood))

(instance ComfortFood FoodAttribute)
(documentation ComfortFood EnglishLanguage "&%ComfortFood describes 
&%PreparedFood that gives a sense of well-being, typically associated with 
childhood or with home cooking")
(termFormat ComfortFood EnglishLanguage "comfort food")

(instance HeartHealthyFood FoodAttribute)
(documentation HeartHealthyFood EnglishLanguage "&%HeartHealthyFood 
describes &%PreparedFood that has is low in sodium and other ingredients 
that may foster heart disease")
(termFormat HeartHealthyFood EnglishLanguage "heart-healthy food")

(=>
  (and
    (conditionalProbability
      (attribute ?X ComfortFood)
      (attribute ?X HeartHealthyFood) ?NUMBER1)
    (conditionalProbability
      (attribute ?X ComfortFood)
      (not (attribute ?X HeartHealthyFood)) ?NUMBER2))
  (lessThan ?NUMBER1 ?NUMBER2))

(instance FamilyStylePortion FoodAttribute)
(documentation FamilyStylePortion EnglishLanguage "&%FamilyStylePortion means that 
an instance of food can be shared by 3 or more people")
(termFormat FamilyStylePortion EnglishLanguage "family-style portions")

;; prepared food that has family style portion as an attribute has higher measure than
;; those that are not family-sized portions
(=>
  (and
    (attribute ?FOOD1 FamilyStylePortion)
    (measure ?FOOD1 ?MEAS1)
    (not (attribute ?FOOD2 FamilyStylePortion))
    (measure ?FOOD2 ?MEAS2)
    (instance ?FOOD1 ?CLASS)
    (instance ?FOOD2 ?CLASS))
  (greaterThan ?MEAS1 ?MEAS2))
 
(instance CommunalAttribute RelationalAttribute)
(documentation CommunalAttribute EnglishLanguage "&%CommunalAttribute 
describes how an &%Object is shared by many")
(termFormat EnglishLanguage CommunalAttribute "communal")

(instance PrivateAttribute RelationalAttribute)
(documentation PrivateAttribute EnglishLanguage "&%PrivateAttribute describes how an 
object is not available to other people without the consent of the 
current owner")

(=>
  (attribute ?X CommunalAttribute)
  (instance ?X Object))

(=>
  (attribute ?X PrivateAttribute)
  (modalAttribute
    (not (attribute ?X CommunalAttribute)) Likely))

(=>
  (attribute ?X CommunalAttribute)
  (modalAttribute
    (not (attribute ?X PrivateAttribute)) Likely))

;; communal tables    
;; if a table is communal, then it's possible that 2 groups eating at the 
;; same time may do so at the same table
(=>
  (and
    (attribute ?X CommunalAttribute)
    (instance ?X Table)
    (instance ?E1 Eating)
    (agent ?E1 ?GRP1)
    (instance ?GRP1 GroupOfPeople)
    (located ?E1 ?X))
  (modalAttribute
    (exists (?GRP2 ?E2)
      (and
        (instance ?E2 Eating)
        (agent ?E2 ?GRP2)
        (not (equal ?GRP1 ?GRP2))
        (instance ?GRP2 GroupOfPeople)
        (located ?E2 ?X2)
        (meetsTemporally (WhenFn ?E1) (WhenFn ?E2))
        (equal ?X ?X2))) Possibility))
    
;; private group room
(=>
  (and
    (instance ?REST Restaurant)
    (instance ?DR DiningRoom)
    (attribute ?DR PrivateAttribute)
    (possesses ?REST ?DR)
    (customer ?GRP1 ?REST)
    (instance ?E1 Eating)
    (located ?E1 ?DR)
    (agent ?E1 ?GRP1)
    (instance ?GRP1 GroupOfPeople))
  (modalAttribute
    (not (exists (?GRP2)
      (and
        (customer ?GRP2 ?REST)
        (not (equal ?GRP1 ?GRP2))
        (instance ?E2 Eating)
        (agent ?E2 ?GRP2)
        (holdsDuring
          (WhenFn ?E1)
          (located ?E2 ?DR))))) Likely))

      
;; ----------------------------------------------------------------------------
;; Cuisine
;; ----------------------------------------------------------------------------      

(subclass Cuisine RelationalAttribute)
(documentation Cuisine EnglishLanguage "Cuisine is an attribute applied to 
classes of PreparedFood to specify that it is typical of a particular region 
or culture.  Note that it cannot be applied to a single Animal or Plant, even 
if a particular such entity is endemic to a particular region. It captures 
not just the reality of a particular combination of ingredients, but also 
the intent of the preparer to conform to a particular style of food and 
food preparation.")

(=>
  (and
    (attribute ?X ?Y)
    (instance ?Y Cuisine))
  (instance ?X PreparedFood))
  
(instance AsianCuisine Cuisine)  
(termFormat AsianCuisine "Asian Cuisine")
(instance CaribbeanCuisine Cuisine)  
(termFormat CaribbeanCuisine "Caribbean Cuisine")
(instance EuropeanCuisine Cuisine)  
(termFormat EuropeanCuisine "European Cuisine")
(instance LatinAmericanCuisine Cuisine)  
(termFormat LatinAmericanCuisine "Latin American Cuisine")
(instance AfricanCuisine Cuisine)  
(termFormat AfricanCuisine "African Cuisine")
(instance AmericanCuisine Cuisine)  
(termFormat AmericanCuisine "American Cuisine")
(instance AustralianCuisine Cuisine)  
(termFormat AustralianCuisine "Australian Cuisine")
(instance CanadianCuisine Cuisine)  
(termFormat CanadianCuisine "Canadian Cuisine")
(instance FusionCuisine Cuisine)  
(termFormat FusionCuisine "Fusion Cuisine")
(instance JewishCuisine Cuisine)  
(termFormat JewishCuisine "Jewish Cuisine")
(instance HealthFoodCuisine Cuisine)  
(termFormat HealthFoodCuisine "Health Food Cuisine")
(subAttribute CentralAfricanCuisine AfricanCuisine)  
(termFormat CentralAfricanCuisine "Central African Cuisine")  
(subAttribute EastAfricanCuisine AfricanCuisine) 
(termFormat EastAfricanCuisine "East African Cuisine")  
(subAttribute HornOfAfricaCuisine AfricanCuisine)  
(termFormat HornOfAfricaCuisine "Horn of Africa Cuisine")  
(subAttribute NorthAfricanCuisine AfricanCuisine)  
(termFormat NorthAfricanCuisine "North African Cuisine")  
(subAttribute SouthernAfricanCuisine AfricanCuisine)  
(termFormat SouthernAfricanCuisine "Southern African Cuisine")  
(subAttribute WestAfricanCuisine AfricanCuisine)  
(termFormat WestAfricanCuisine "West African Cuisine")  
(subAttribute IndianCuisine AsianCuisine)  
(termFormat IndianCuisine "Indian Cuisine")  
(subAttribute SouthAsianCuisine AsianCuisine)  
(termFormat SouthAsianCuisine "South Asian Cuisine")  
(subAttribute SoutheastAsianCuisine AsianCuisine)  
(termFormat SoutheastAsianCuisine "Southeast Asian Cuisine")  
(subAttribute EastAsianCuisine AsianCuisine)
(termFormat EastAsianCuisine "East Asian Cuisine")
(subAttribute WestAsianCuisine AsianCuisine)  
(termFormat WestAsianCuisine "West Asian Cuisine")  
(subAttribute ChineseCuisine AsianCuisine)  
(termFormat ChineseCuisine "Chinese Cuisine")  
(subAttribute PanAsianCuisine AsianCuisine)  
(termFormat PanAsianCuisine "Pan-Asian Cuisine")  
(subAttribute JapaneseCuisine EastAsianCuisine)  
(termFormat JapaneseCuisine "Japanese Cuisine")  
(subAttribute EasternEuropeanCuisine EuropeanCuisine)  
(termFormat EasternEuropeanCuisine "Eastern European Cuisine")  
(subAttribute MediterraneanCuisine EuropeanCuisine)  
(termFormat MediterraneanCuisine "Mediterranean Cuisine")  
(subAttribute NorthernEuropeanCuisine EuropeanCuisine)  
(termFormat NorthernEuropeanCuisine "Northern European Cuisine")  
(subAttribute WesternEuropeanCuisine EuropeanCuisine)  
(termFormat WesternEuropeanCuisine "Western European Cuisine")  
(subAttribute AlpineCuisine EuropeanCuisine)  
(termFormat AlpineCuisine "Alpine Cuisine")  
(subAttribute ContinentalCuisine EuropeanCuisine)  
(termFormat ContinentalCuisine "Continental Cuisine")  
(subAttribute ArabCuisine WestAsianCuisine)  
(termFormat ArabCuisine "Arab Cuisine")  
(subAttribute LevantineCuisine WestAsianCuisine)  
(termFormat LevantineCuisine "Levantine Cuisine")  
(subAttribute BritishCuisine NorthernEuropeanCuisine)  
(termFormat BritishCuisine "British Cuisine")  
(subAttribute NordicCuisine NorthernEuropeanCuisine)  
(termFormat NordicCuisine "Nordic Cuisine")  
(subAttribute IrishCuisine NorthernEuropeanCuisine)  
(termFormat IrishCuisine "Irish Cuisine")  
(subAttribute ScottishCuisine NorthernEuropeanCuisine)  
(termFormat ScottishCuisine "Scottish Cuisine")  
(subAttribute IndonesianCuisine SoutheastAsianCuisine)  
(termFormat IndonesianCuisine "Indonesian Cuisine")  
(subAttribute SpanishCuisine WesternEuropeanCuisine)  
(termFormat SpanishCuisine "Spanish Cuisine")  
(subAttribute AustrianCuisine WesternEuropeanCuisine)  
(termFormat AustrianCuisine "Austrian Cuisine")  
(subAttribute GermanCuisine WesternEuropeanCuisine)  
(termFormat GermanCuisine "German Cuisine")  
(subAttribute FrenchCuisine WesternEuropeanCuisine)  
(termFormat FrenchCuisine "French Cuisine")  
(subAttribute DutchCuisine WesternEuropeanCuisine)  
(termFormat DutchCuisine "Dutch Cuisine")  
(subAttribute SwissCuisine WesternEuropeanCuisine)  
(termFormat SwissCuisine "Swiss Cuisine")  
(subAttribute VienneseCuisine AustrianCuisine)  
(termFormat VienneseCuisine "Viennese Cuisine")  
(subAttribute BosnianCuisine MediterraneanCuisine)  
(termFormat BosnianCuisine "Bosnian Cuisine")  
(subAttribute BolivianCuisine LatinAmericanCuisine)  
(termFormat BolivianCuisine "Bolivian Cuisine")  
(subAttribute BelgianCuisine WesternEuropeanCuisine)  
(termFormat BelgianCuisine "Belgian Cuisine")  
(subAttribute NativeAmericanCuisine AmericanCuisine)  
(termFormat NativeAmericanCuisine "Native American Cuisine")  
(subAttribute NorthAmericanCuisine AmericanCuisine)  
(termFormat NorthAmericanCuisine "North American Cuisine")  
(subAttribute MidwesternCuisine AmericanCuisine)  
(termFormat MidwesternCuisine "Midwestern Cuisine")  
(subAttribute AmishCuisine AmericanCuisine)  
(termFormat AmishCuisine "Amish Cuisine")  
(subAttribute CreoleCuisine AmericanCuisine)  
(termFormat CreoleCuisine "Creole Cuisine")  
(subAttribute SouthernCuisine AmericanCuisine)  
(termFormat SouthernCuisine "Southern Cuisine")  
(subAttribute CalifornianCuisine AmericanCuisine)  
(termFormat CalifornianCuisine "Californian Cuisine")  
(subAttribute ChesapeakeCuisine AmericanCuisine)  
(termFormat ChesapeakeCuisine "Chesapeake Cuisine")  
(subAttribute SouthwesternCuisine AmericanCuisine)  
(termFormat SouthwesternCuisine "Southwestern Cuisine")  
(subAttribute FloridianCuisine AmericanCuisine)  
(termFormat FloridianCuisine "Floridian Cuisine")  
(subAttribute HawaiianCuisine AmericanCuisine)  
(termFormat HawaiianCuisine "Hawaiian Cuisine")  
(subAttribute NewEnglandCuisine AmericanCuisine)  
(termFormat NewEnglandCuisine "New England Cuisine")  
(subAttribute NewMexicanCuisine AmericanCuisine)  
(termFormat NewMexicanCuisine "New Mexican Cuisine")  
(subAttribute PennsylvaniaDutchCuisine AmericanCuisine)  
(termFormat PennsylvaniaDutchCuisine "Pennsylvania Dutch Cuisine")  
(subAttribute YemeniCuisine ArabCuisine)  
(termFormat YemeniCuisine "Yemeni Cuisine")  
(subAttribute NewZealandCuisine AustralianCuisine)  
(termFormat NewZealandCuisine "New Zealand Cuisine")  
(subAttribute BajanCuisine CaribbeanCuisine)  
(termFormat BajanCuisine "Bajan Cuisine")  
(subAttribute CubanCuisine CaribbeanCuisine)  
(termFormat CubanCuisine "Cuban Cuisine")  
(subAttribute DominicanCuisine CaribbeanCuisine)  
(termFormat DominicanCuisine "Dominican Cuisine")  
(subAttribute HaitianCuisine CaribbeanCuisine)  
(termFormat HaitianCuisine "Haitian Cuisine")  
(subAttribute JamaicanCuisine CaribbeanCuisine)  
(termFormat JamaicanCuisine "Jamaican Cuisine")  
(subAttribute TinidadianCuisine CaribbeanCuisine)  
(termFormat TinidadianCuisine "Trinidadian Cuisine")  
(subAttribute AfghanCuisine CentralAsianCuisine)  
(termFormat AfghanCuisine "Afghan Cuisine")  
(subAttribute MongolianCuisine CentralAsianCuisine)  
(termFormat MongolianCuisine "Mongolian Cuisine")
(subAttribute TibetanCuisine CentralAsianCuisine)
(termFormat TibetanCuisine "Tibetan Cuisine")
(subAttribute UzbekiCuisine CentralAsianCuisine)  
(termFormat UzbekiCuisine "Uzbeki Cuisine")  
(subAttribute CantoneseCuisine ChineseCuisine)  
(termFormat CantoneseCuisine "Cantonese Cuisine")  
(subAttribute HunanCuisine ChineseCuisine)  
(termFormat HunanCuisine "Hunan Cuisine")  
(subAttribute MandarinCuisine ChineseCuisine)  
(termFormat MandarinCuisine "Mandarin Cuisine")  
(subAttribute PekingeseCuisine ChineseCuisine)  
(termFormat PekingeseCuisine "Pekingese Cuisine")  
(subAttribute SichuanCuisine ChineseCuisine)  
(termFormat SichuanCuisine "Sichuan Cuisine")  
(subAttribute SzechuanCuisine ChineseCuisine)  
(termFormat SzechuanCuisine "Szechuan Cuisine")  
(subAttribute KoreanCuisine EastAsianCuisine)  
(termFormat KoreanCuisine "Korean Cuisine")  
(subAttribute TaiwaneseCuisine EastAsianCuisine)  
(termFormat TaiwaneseCuisine "Taiwanese Cuisine")  
(subAttribute CzechCuisine EasternEuropeanCuisine)  
(termFormat CzechCuisine "Czech Cuisine")  
(subAttribute HungarianCuisine EasternEuropeanCuisine)  
(termFormat HungarianCuisine "Hungarian Cuisine")  
(subAttribute PolishCuisine EasternEuropeanCuisine)  
(termFormat PolishCuisine "Polish Cuisine")  
(subAttribute RomanianCuisine EasternEuropeanCuisine)  
(termFormat RomanianCuisine "Romanian Cuisine")  
(subAttribute RussianCuisine EasternEuropeanCuisine)  
(termFormat RussianCuisine "Russian Cuisine")  
(subAttribute UkrainianCuisine EasternEuropeanCuisine)  
(termFormat UkrainianCuisine "Ukrainian Cuisine")  
(subAttribute AlsatianCuisine FrenchCuisine)  
(termFormat AlsatianCuisine "Alsatian Cuisine")  
(subAttribute AuvergneCuisine FrenchCuisine)  
(termFormat AuvergneCuisine "Auvergne Cuisine")  
(subAttribute AveyronCuisine FrenchCuisine)  
(termFormat AveyronCuisine "Aveyron Cuisine")  
(subAttribute CorsicaCuisine FrenchCuisine)  
(termFormat CorsicaCuisine "Corsica Cuisine")  
(subAttribute BrittanyCuisine FrenchCuisine)  
(termFormat BrittanyCuisine "Brittany Cuisine")  
(subAttribute BurgundyCuisine FrenchCuisine)  
(termFormat BurgundyCuisine "Burgundy Cuisine")  
(subAttribute GasconyCuisine FrenchCuisine)  
(termFormat GasconyCuisine "Gascony Cuisine")  
(subAttribute HauteCuisine FrenchCuisine)  
(termFormat HauteCuisine "Haute Cuisine")  
(subAttribute LyonCuisine FrenchCuisine)  
(termFormat LyonCuisine "Lyon Cuisine")  
(subAttribute ProvencalCuisine FrenchCuisine)  
(termFormat ProvencalCuisine "Provencal Cuisine")  
(subAttribute EurasianCuisine FusionCuisine)  
(termFormat EurasianCuisine "Eurasian Cuisine") 
(subAttribute EurasianCuisine EuropeanCuisine) 
(subAttribute EurasianCuisine AsianCuisine)
(subAttribute AsianFusionCuisine FusionCuisine)  
(termFormat AsianFusionCuisine "Asian Fusion Cuisine") 
(subAttribute AsianFusionCuisine AsianCuisine) 
(subAttribute EuropeanFusionCuisine FusionCuisine)  
(termFormat EuropeanFusionCuisine "European Fusion Cuisine") 
(subAttribute EuropeanFusionCuisine EuropeanCuisine) 
(subAttribute FloribbeanCuisine FusionCuisine)  
(termFormat FloribbeanCuisine "Floribbean Cuisine") 
(subAttribute FloribbeanCuisine CaribbeanCuisine) 
(subAttribute FloribbeanCuisine AmericanCuisine)
(subAttribute FrenchIndianCuisine FusionCuisine)  
(termFormat FrenchIndianCuisine "French Indian Cuisine") 
(subAttribute FrenchIndianCuisine FrenchCuisine) 
(subAttribute FrenchIndianCuisine IndianCuisine)
(subAttribute InternationalCuisine FusionCuisine)  
(termFormat InternationalCuisine "International Cuisine")  
(subAttribute GlobalCuisine FusionCuisine)  
(termFormat GlobalCuisine "Global Cuisine")  
(subAttribute IslandCuisine FusionCuisine)  
(termFormat IslandCuisine "Island Cuisine")  
(subAttribute NewWorldCuisine FusionCuisine)  
(termFormat NewWorldCuisine "New World Cuisine")  
(subAttribute PacificRimCuisine FusionCuisine)  
(termFormat PacificRimCuisine "Pacific Rim Cuisine")  
(subAttribute SenegambianCuisine FusionCuisine)  
(termFormat SenegambianCuisine "Senegambian Cuisine") 
(subAttribute SenegambianCuisine SenegaleseCuisine) 
(subAttribute SenegambianCuisine GambianCuisine)
(subAttribute SeychellesCuisine FusionCuisine)  
(termFormat SeychellesCuisine "Seychelles Cuisine") 
(subAttribute SeychellesCuisine FrenchCuisine)
(subAttribute SouthPacificCuisine FusionCuisine)  
(termFormat SouthPacificCuisine "South Pacific Cuisine")  
(subAttribute ThaiFrenchCuisine FusionCuisine)  
(termFormat ThaiFrenchCuisine "Thai French Cuisine") 
(subAttribute ThaiFrenchCuisine ThaiCuisine) 
(subAttribute ThaiFrenchCuisine FrenchCuisine)
(subAttribute BavarianCuisine GermanCuisine)  
(termFormat BavarianCuisine "Bavarian Cuisine")  
(subAttribute EritreanCuisine HornOfAfricaCuisine)  
(termFormat EritreanCuisine "Eritrean Cuisine")  
(subAttribute EthiopianCuisine HornOfAfricaCuisine)  
(termFormat EthiopianCuisine "Ethiopian Cuisine")  
(subAttribute EastIndianCuisine IndianCuisine)  
(termFormat EastIndianCuisine "East Indian Cuisine")  
(subAttribute NorthIndianCuisine IndianCuisine)  
(termFormat NorthIndianCuisine "North Indian Cuisine")  
(subAttribute NortheastIndianCuisine IndianCuisine)  
(termFormat NortheastIndianCuisine "Northeast Indian Cuisine")  
(subAttribute SouthIndianCuisine IndianCuisine)  
(termFormat SouthIndianCuisine "South Indian Cuisine")  
(subAttribute WestIndianCuisine IndianCuisine)  
(termFormat WestIndianCuisine "West Indian Cuisine")  
(subAttribute HimalayanCuisine IndianCuisine)  
(termFormat HimalayanCuisine "Himalayan Cuisine")  
(subAttribute JavaneseCuisine IndonesianCuisine)  
(termFormat JavaneseCuisine "Javanese Cuisine")  
(subAttribute AbruzzeseCuisine ItalianCuisine)  
(termFormat AbruzzeseCuisine "Abruzzese Cuisine")  
(subAttribute EmilianCuisine ItalianCuisine)  
(termFormat EmilianCuisine "Emilian Cuisine")  
(subAttribute FlorentineCuisine ItalianCuisine)  
(termFormat FlorentineCuisine "Florentine Cuisine")  
(subAttribute LigurianCuisine ItalianCuisine)  
(termFormat LigurianCuisine "Ligurian Cuisine")  
(subAttribute LombardianCuisine ItalianCuisine)  
(termFormat LombardianCuisine "Lombardian Cuisine")  
(subAttribute MarchigianaCuisine ItalianCuisine)  
(termFormat MarchigianaCuisine "Marchigiana Cuisine")  
(subAttribute MilaneseCuisine ItalianCuisine)  
(termFormat MilaneseCuisine "Milanese Cuisine")  
(subAttribute NeapolitanCuisine ItalianCuisine)  
(termFormat NeapolitanCuisine "Neapolitan Cuisine")  
(subAttribute RomanCuisine ItalianCuisine)  
(termFormat RomanCuisine "Roman Cuisine")  
(subAttribute PiedmonteseCuisine ItalianCuisine)  
(termFormat PiedmonteseCuisine "Piedmontese Cuisine")  
(subAttribute SardinianCuisine ItalianCuisine)  
(termFormat SardinianCuisine "Sardinian Cuisine")  
(subAttribute SicilianCuisine ItalianCuisine)  
(termFormat SicilianCuisine "Sicilian Cuisine")  
(subAttribute TuscanCuisine ItalianCuisine)  
(termFormat TuscanCuisine "Tuscan Cuisine")  
(subAttribute VenetianCuisine ItalianCuisine)  
(termFormat VenetianCuisine "Venetian Cuisine")  
(subAttribute ArgentineanCuisine LatinAmericanCuisine)  
(termFormat ArgentineanCuisine "Argentinean Cuisine")  
(subAttribute BrazilianCuisine LatinAmericanCuisine)  
(termFormat BrazilianCuisine "Brazilian Cuisine")  
(subAttribute CapeVerdeanCuisine LatinAmericanCuisine)  
(termFormat CapeVerdeanCuisine "CapeVerdean Cuisine")  
(subAttribute CentralAmericanCuisine LatinAmericanCuisine)  
(termFormat CentralAmericanCuisine "Central American Cuisine")  
(subAttribute ChileanCuisine LatinAmericanCuisine)  
(termFormat ChileanCuisine "Chilean Cuisine")  
(subAttribute ColombianCuisine LatinAmericanCuisine)  
(termFormat ColombianCuisine "Colombian Cuisine")  
(subAttribute MexicanCuisine LatinAmericanCuisine)  
(termFormat MexicanCuisine "Mexican Cuisine")  
(subAttribute CostaRicanCuisine LatinAmericanCuisine)  
(termFormat CostaRicanCuisine "Costa Rican Cuisine")  
(subAttribute EcuadorianCuisine LatinAmericanCuisine)  
(termFormat EcuadorianCuisine "Ecuadorian Cuisine")  
(subAttribute GuatemalanCuisine LatinAmericanCuisine)  
(termFormat GuatemalanCuisine "Guatemalan Cuisine")  
(subAttribute GuyaneseCuisine LatinAmericanCuisine)  
(termFormat GuyaneseCuisine "Guyanese Cuisine")  
(subAttribute HonduranCuisine LatinAmericanCuisine)  
(termFormat HonduranCuisine "Honduran Cuisine")  
(subAttribute NicaraguanCuisine LatinAmericanCuisine)  
(termFormat NicaraguanCuisine "Nicaraguan Cuisine")  
(subAttribute PanLatinCuisine LatinAmericanCuisine)  
(termFormat PanLatinCuisine "Pan Latin Cuisine")  
(subAttribute ParaguayanCuisine LatinAmericanCuisine)  
(termFormat ParaguayanCuisine "Paraguayan Cuisine")  
(subAttribute PeruvianCuisine LatinAmericanCuisine)  
(termFormat PeruvianCuisine "Peruvian Cuisine")  
(subAttribute PuertoRicanCuisine LatinAmericanCuisine)  
(termFormat PuertoRicanCuisine "Puerto Rican Cuisine")  
(subAttribute SalvadoranCuisine LatinAmericanCuisine)  
(termFormat SalvadoranCuisine "Salvadoran Cuisine")  
(subAttribute UruguayanCuisine LatinAmericanCuisine)  
(termFormat UruguayanCuisine "Uruguayan Cuisine")  
(subAttribute VenezuelanCuisine LatinAmericanCuisine)  
(termFormat VenezuelanCuisine "Venezuelan Cuisine")  
(subAttribute PalestinianCuisine LevantineCuisine)  
(termFormat PalestinianCuisine "Palestinian Cuisine")  
(subAttribute ItalianCuisine MediterraneanCuisine)  
(termFormat ItalianCuisine "Italian Cuisine")  
(subAttribute CypriotCuisine MediterraneanCuisine)  
(termFormat CypriotCuisine "Greek Cypriot Cuisine")  
(subAttribute CroatianCuisine MediterraneanCuisine)  
(termFormat CroatianCuisine "Croatian Cuisine")  
(subAttribute GreekCuisine MediterraneanCuisine)  
(termFormat GreekCuisine "Greek Cuisine")  
(subAttribute SerbianCuisine MediterraneanCuisine)  
(termFormat SerbianCuisine "Serbian Cuisine")  
(subAttribute SlavicCuisine MediterraneanCuisine)  
(termFormat SlavicCuisine "Slavic Cuisine")  
(subAttribute TurkishCuisine MediterraneanCuisine)  
(termFormat TurkishCuisine "Turkish Cuisine")  
(subAttribute MayanCuisine MexicanCuisine)  
(termFormat MayanCuisine "Mayan Cuisine")  
(subAttribute ArmenianCuisine EasternEuropeanCuisine)  
(termFormat ArmenianCuisine "Armenian Cuisine")  
(subAttribute CaspianCuisine PersianCuisine)  
(termFormat CaspianCuisine "Caspian Cuisine")  
(subAttribute IranianCuisine MiddleEasternCuisine)  
(termFormat IranianCuisine "Iranian Cuisine")  
(subAttribute IraqiCuisine MiddleEasternCuisine)  
(termFormat IraqiCuisine "Iraqi Cuisine")  
(subAttribute IsraeliCuisine LevantineCuisine)  
(termFormat IsraeliCuisine "Israeli Cuisine")  
(subAttribute LebaneseCuisine LevantineCuisine)  
(termFormat LebaneseCuisine "Lebanese Cuisine")  
(subAttribute MesopotamianCuisine MiddleEasternCuisine)  
(termFormat MesopotamianCuisine "Mesopotamian Cuisine")  
(subAttribute PersianCuisine MiddleEasternCuisine)  
(termFormat PersianCuisine "Persian Cuisine")  
(subAttribute SyrianCuisine LevantineCuisine)  
(termFormat SyrianCuisine "Syrian Cuisine")  
(subAttribute TunisianCuisine MediterraneanCuisine)  
(termFormat TunisianCuisine "Tunisian Cuisine")  
(subAttribute DanishCuisine NordicCuisine)  
(termFormat DanishCuisine "Danish Cuisine")  
(subAttribute FinnishCuisine NordicCuisine)  
(termFormat FinnishCuisine "Finnish Cuisine")  
(subAttribute IcelandicCuisine NordicCuisine)  
(termFormat IcelandicCuisine "Icelandic Cuisine")  
(subAttribute NorwegianCuisine NordicCuisine)  
(termFormat NorwegianCuisine "Norwegian Cuisine")  
(subAttribute SwedishCuisine NordicCuisine)  
(termFormat SwedishCuisine "Swedish Cuisine")  
(subAttribute EgyptianCuisine NorthAfricanCuisine)  
(termFormat EgyptianCuisine "Egyptian Cuisine")  
(subAttribute MoroccanCuisine NorthAfricanCuisine)  
(termFormat MoroccanCuisine "Moroccan Cuisine")  
(subAttribute BangladeshiCuisine SouthAsianCuisine)  
(termFormat BangladeshiCuisine "Bangladeshi Cuisine")  
(subAttribute NepaleseCuisine SouthAsianCuisine)  
(termFormat NepaleseCuisine "Nepalese Cuisine")  
(subAttribute PakistaniCuisine SouthAsianCuisine)  
(termFormat PakistaniCuisine "Pakistani Cuisine")  
(subAttribute SriLankanCuisine SouthAsianCuisine)  
(termFormat SriLankanCuisine "Sri Lankan Cuisine")  
(subAttribute BurmeseCuisine SoutheastAsianCuisine)  
(termFormat BurmeseCuisine "Burmese Cuisine")  
(subAttribute CambodianCuisine SoutheastAsianCuisine)  
(termFormat CambodianCuisine "Cambodian Cuisine")  
(subAttribute FilipinoCuisine SoutheastAsianCuisine)  
(termFormat FilipinoCuisine "Filipino Cuisine")  
(subAttribute MalaysianCuisine SoutheastAsianCuisine)  
(termFormat MalaysianCuisine "Malaysian Cuisine")  
(subAttribute LaotianCuisine SoutheastAsianCuisine)  
(termFormat LaotianCuisine "Laotian Cuisine")  
(subAttribute SingaporeanCuisine SoutheastAsianCuisine)  
(termFormat SingaporeanCuisine "Singaporean Cuisine")  
(subAttribute ThaiCuisine SoutheastAsianCuisine)  
(termFormat ThaiCuisine "Thai Cuisine")  
(subAttribute VietnameseCuisine SoutheastAsianCuisine)  
(termFormat VietnameseCuisine "Vietnamese Cuisine")  
(subAttribute SouthAfricanCuisine SouthernAfricanCuisine)  
(termFormat SouthAfricanCuisine "South African Cuisine")  
(subAttribute TexMexCuisine SouthwesternCuisine)  
(termFormat TexMexCuisine "Tex Mex Cuisine")  
(subAttribute BasqueCuisine SpanishCuisine)  
(termFormat BasqueCuisine "Basque Cuisine")  
(subAttribute IberianCuisine SpanishCuisine)  
(termFormat IberianCuisine "Iberian Cuisine")  
(subAttribute ValencianCuisine SpanishCuisine)  
(termFormat ValencianCuisine "Valencian Cuisine")  
(subAttribute AndalusianCuisine SpanishCuisine)  
(termFormat AndalusianCuisine "Andalusian Cuisine")  
(subAttribute CantabrianCuisine SpanishCuisine)  
(termFormat CantabrianCuisine "Cantabrian Cuisine")  
(subAttribute CastilianCuisine SpanishCuisine)  
(termFormat CastilianCuisine "Castillan Cuisine")  
(subAttribute CatalanCuisine SpanishCuisine)  
(termFormat CatalanCuisine "Catalan Cuisine")  
(subAttribute GalicianCuisine SpanishCuisine)  
(termFormat GalicianCuisine "Galician Cuisine")  
(subAttribute MadrilianCuisine SpanishCuisine)  
(termFormat MadrilianCuisine "Madrilian Cuisine")  
(subAttribute NavarraiseCuisine SpanishCuisine)  
(termFormat NavarraiseCuisine "Navarraise Cuisine")  
(subAttribute GhanianCuisine WestAfricanCuisine)  
(termFormat GhanianCuisine "Ghanian Cuisine")  
(subAttribute SenegaleseCuisine WestAfricanCuisine)  
(termFormat SenegaleseCuisine "Senegalese Cuisine")  
(subAttribute GambianCuisine WestAfricanCuisine)  
(termFormat GambianCuisine "Gambian Cuisine")  
(subAttribute LevantineCuisine WestAsianCuisine)  
(termFormat LevantineCuisine "Levantine Cuisine")  
(subAttribute MiddleEasternCuisine WestAsianCuisine)  
(termFormat MiddleEasternCuisine "Middle Eastern Cuisine")  
(subAttribute CajunCuisine CaribbeanCuisine)  
(termFormat CajunCuisine "Cajun Cuisine")  
(subAttribute PortugueseCuisine WesternEuropeanCuisine)  
(termFormat PortugueseCuisine "Portuguese Cuisine")  
(subAttribute PolynesianCuisine FusionCuisine)  
(termFormat PolynesianCuisine "Polynesian Cuisine")  
(subAttribute ShanghaineseCuisine ChineseCuisine)  
(termFormat ShanghaineseCuisine "Shanghainese Cuisine")  
