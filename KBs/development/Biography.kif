;; ============================================================================
;;                   REARDEN COMMERCE, INC.
;;                   Biography Ontology
;; ============================================================================

;; Created by: Valeria de Paiva (vdepaiva [at] reardencommerce [dot] com)
;; Created on: August 10, 2011
;;  
;; Description:  This describes concepts related to biographies in Wikipedia, 
;; starting with the attributes described in Infoboxes.
;; They are organized in templates described in http://en.wikipedia.org/wiki/Category:Infobox_templates

;; Ontology dependencies for Biography.kif: 
;; Merge.kif
;; Mid-level-ontology.kif,  
;; Media.kif

;; Access to and use of these products is governed by the GNU General Public 
;; License <http://www.gnu.org/copyleft/gpl.html>. 
;; By using these products, you agree to be bound by the terms  of the GPL.
;; We ask the people using or referencing this work cite our primary paper:
;; Niles, I., and Pease, A.  2001.  Towards a Standard Upper Ontology.  In 
;; Proceedings of the 2nd International Conference on Formal Ontology in 
;; Information Systems (FOIS-2001), Chris Welty and Barry Smith, eds, 
;; Ogunquit, Maine, October 17-19, 2001.  See also http://www.ontologyportal.org
;;;----------------------------------------------------------------------------
;;; 1. What kind of biographies do we have in Wikipedia?
;;;----------------------------------------------------------------------------
;;; Examples: Actors, Composers, Artists, politicians, etc..
;;; Examples: Brad Pitt, Billy Bragg, Henri Matisse, Churchill, 
;;; Marilyn Monroe, Angela Merkel

;; A basic infobox template in Wikipedia  has (SUMO equivalents after the equality):
;;{{Infobox person
;;| name        =  (humanName ?STRING ?HUMAN) in Media.kif 3091
;;| image       =  not necessary in SUMO
;;| alt         =  not necessary in SUMO
;;| caption     =  not necessary in SUMO
;;| birth_name  =  below
;;| birth_date  =  (birthdate ?PERSON ?DATE) in SUMO MILO 17689
;;| birth_place =  (birthplace ?ANIMAL ?OBJECT) in SUMO MILO 17675
;;| death_date  =  (deathdate ?ANIMAL ?OBJECT) in SUMO MILO 17702
;;| death_place =  (deathplace ?ANIMAL ?OBJECT) in SUMO MILO 17716
;;| nationality =  (citizen ?PERSON ?NATION) in SUMO Merge 13669
;;| other_names =  below
;;| known_for   =  Not dealing with this to begin with...
;;| occupation  =  below
;;}}

;;; To deal with  attributes of the Basic infobox template above we need ALSO:
;;; birth_name, other_names, Nationality, Occupation  and known_for:
;; Names:
;; Marilyn Monroe birth_name= Norma Jeane Mortenson

(subclass BirthCertificate Certificate)

(=>
  (instance ?BC BirthCertificate)
  (exists (?P ?B ?ORG ?PLACE ?DATE)
    (and
      (instance ?P Human)
      (instance ?B Birth)
      (experiencer ?B ?P)
      (instance ?ORG GovernmentOrganization)
      (instance ?PLACE City)
      (birthplace ?P ?PLACE)
      (birthdate  ?P ?DATE)
      (issuedBy ?BC ?ORG))))

(subclass BirthName String)

(=>
  (instance ?BN BirthName)
  (exists (?P ?NAME ?BC)
    (and
      (instance ?P Human)
      (humanName ?P ?NAME)
      (instance ?BC BirthCertificate)
      (possesses ?P ?BC)
      (names ?BN ?P))))

;; so far ?BN can be equal to ?NAME
;; other_names:Norma Jeane Baker, Norma Jeane Dougherty, Norma Jeane DiMaggio

(subclass OtherName String)

(=>
  (instance ?ON OtherName)
  (exists (?P ?NAME)
    (and
      (instance ?P Human)
      (humanName ?P ?NAME)
      (names ?ON ?P)
      (not
        (equal ?ON ?NAME)))))
        
;;; SUMO has also keyName (Medi.kif 2934) and (alias ?STRING ?AGENT) in MILO 16817.
;;; Perhaps issues of names of people should be in some law ontology, when such exists.         
;;;-------------------------------------------------------------------------------
;;; Nationality is membership of a nation or sovereign state, granted by that state. 

;;; SUMO has the relation (citizen ?PERSON ?NATION) will use that for nationality.

;;; wikipedia has very different standards for that e.g Nicole Kidman, Albert Einstein, Paul Dirac	
;;; Nationality is not always defined by place of birth, or  by citizenship
;;; jus soli, jus sanguinis is the issue. 


;;; It seems reasonable to have another NationalityFn such that we can talk about demonynic attributes as below. LATER.
;(<=>
;    (attribute ?INDIVIDUAL Brazilian)
;    (member ?INDIVIDUAL (NationalityFn Brazil)
    
;(documentation NationalityFn EnglishLanguage "(nationality ?AREA) denotes the group of people who have been granted nationality by the government of ?AREA.")  
;(domain NationalityFn 1 GeopoliticalArea)     
;(instance NationalityFn UnaryFunction)    
;(range NationalityFn GroupOfPeople) 

;;;--------------------------------------------------------------------
;;; Occupations
;;;-------------------------------------------------------------------- 
;;; Working to make consistent the occupations already in SUMO, 
;;; using the lists from wikipedia  
;;; http://en.wikipedia.org/wiki/Lists_of_people_by_occupation 
;;; http://en.wikipedia.org/wiki/Profession#List_of_professions

;; Extra definitions to be added:
(instance ActuaryScience Science)
(instance Astronomy Science)
(instance Archaeology SocialScience) 
; Wikipedia says that Archaeology is actually one of the 4 subfields of Anthropology
(instance Cartography Science)
; is the study and practice of making maps. Combining science, aesthetics, and technique, cartography builds on the premise that 
; reality can be modeled in ways that communicate spatial information effectively.
(instance ComputerScience Science)
(instance Geography Science)
; geography, the study of Earth's physical environment and human habitat.
(instance Geology Science)
(instance LibraryScience Science)
; this is a debatable name, recently it tends to be called Library and Information Sciences or simply Information Sciences
(instance Sociology SocialScience)
(instance VeterinaryScience MedicalScience)
(instance Zoology Biology)

(instance Astronomer Profession) 
(instance Actuary Profession) 
(instance Archaeologist Profession)
(instance Anthropologist Profession)
(instance Architect Profession)
(instance Biologist Profession)
(instance Chemist Profession)
(instance Economist Profession)
(instance EngineerGraduate Profession)
(instance Geographer Profession)
(instance Geologist Profession)
(instance Historian Profession)
(instance Linguist Profession)
(instance Mathematician Profession)
(instance MedicalResearcher Profession)
(instance Philosopher Profession)
(instance Psychologist Profession)
(instance Physicist Profession)
(instance PoliticalScientist Profession)
(instance Librarian Profession)
(instance Scientist Profession)
(instance SocialScientist Profession)
(instance Sociologist Profession)
(instance Theologian Profession)
(instance Veterinarian Profession)
(instance Zoologist Profession)

;; modeled from Attorney Mid-level-ontology.kif 14688-14690
;; (=>
;;    (attribute ?P Lawyer)
;;    (hasExpertise ?P FieldOfLaw)) 
;; need to change Chef, PoliceOffice, PrivateDetective to SkilledOccupation
  
(=>
  (instance ?PERSON Astronomer)
  (hasExpertise ?PERSON Astronomy))
  
(=>
  (instance ?PERSON Archaeologist)
  (hasExpertise ?PERSON Archaeology))

(=>
  (instance ?PERSON Architect)
  (hasExpertise ?PERSON Architecture))

(=>
  (instance ?PERSON Anthropologist)
  (hasExpertise ?PERSON Anthropology))

(=>
  (instance ?PERSON Chemist)
  (hasExpertise ?PERSON Chemistry))
  
(=>
  (instance ?PERSON ComputerScientist)
  (hasExpertise ?PERSON ComputerScience)) 
   
(=>
  (instance ?PERSON EngineerGraduate)
  (hasExpertise ?PERSON Engineering))
  
(=>
  (instance ?PERSON Economist)
  (hasExpertise ?PERSON Economics)) 
   
(=>
  (instance ?PERSON Geographer)
  (hasExpertise ?PERSON Geography)) 
  
(=>
  (instance ?PERSON Geologist)
  (hasExpertise ?PERSON Geology)) 
  
(=>
  (instance ?PERSON Historian)
  (hasExpertise ?PERSON History))  
  
(=>
  (instance ?PERSON Linguist)
  (hasExpertise ?PERSON Linguistics))  

(=>
  (instance ?PERSON Philosopher)
  (hasExpertise ?PERSON Philosophy))

(=>
  (instance ?PERSON Psychologist)
  (hasExpertise ?PERSON Psychology))
  
(=>
  (instance ?PERSON Scientist)
  (hasExpertise ?PERSON Science)) 

(=>
  (instance ?PERSON SocialScientist)
  (hasExpertise ?PERSON SocialScience))
  
(=>
  (instance ?PERSON Sociologist)
  (hasExpertise ?PERSON Sociology)) 

(=>
  (instance ?PERSON Biologist)
  (hasExpertise ?PERSON Biology))

(=>
  (instance ?PERSON Physicist)
  (hasExpertise ?PERSON Physics))
  
(=>
  (instance ?PERSON PoliticalScientist)
  (hasExpertise ?PERSON PoliticalScience))

(=>
  (instance ?PERSON Mathematician)
  (hasExpertise ?PERSON Mathematics))
  
(=>
  (instance ?PERSON Actuary)
  (hasExpertise ?PERSON ActuarialScience))
  
(=>
  (instance ?PERSON Librarian)
  (hasExpertise ?PERSON LibraryScience))
   
(=>
  (instance ?PERSON Theologian)
  (hasExpertise ?PERSON Theology))
  
(=>
  (instance ?PERSON Veterinarian)
  (hasExpertise ?PERSON VeterinaryScience))
  
(=>
  (instance ?PERSON Zoologist)
  (hasExpertise ?PERSON Zoology))
    
(=>
  (instance ?PERSON MedicalResearcher)
  (and
    (instance ?PERSON Researcher)
    (hasExpertise ?PERSON MedicalScience)))  
    
;;----------------------------------------------------------------------
;; Sports occupations (should  move perhaps to Sports.kif)
;;----------------------------------------------------------------------
;; ProfessionalAthletes, following the model and expanding from Sports.kif
;;     (subclass ProfessionalAthlete SkilledOccupation)     
;;     (instance TennisProfessional ProfessionalAthlete)
;;     (documentation TennisProfessional EnglishLanguage "&%TennisProfessional is a
;;     &%ProfessionalAthlete that plays &%Tennis")
;;     (termFormat EnglishLanguage TennisProfessional "tennis pro")
;;    
;;     (=>
;;     (attribute ?ATHLETE TennisProfessional)
;;     (hasSkill Tennis ?ATHLETE))

;;  Should (later on) make sure that we have at least the Olympic sports below:
;;  Summer Olympics
;;    * Archery
;;    * Athletics
;;    * Badminton
;;    * Basketball
;;    * Beach volleyball
;;    * Boxing
;;    * Canoeing
;;    * Cycling
;;    * Diving
;;    * Equestrian
;;    * Fencing
;;    * Football
;;    * Gymnastics
;;    * Handball
;;    * Field hockey
;;    * Judo
;;    * Modern pentathlon
;;    * Rowing
;;    * Rugby
;;    * Sailing
;;    * Shooting
;;    * Swimming
;;    * Synchronized swimming
;;    * Table tennis
;;    * Taekwondo
;;    * Tennis
;;    * Triathlon
;;    * Volleyball
;;    * Weightlifting
;;    * Wrestling
;;  Winter Olympics
;;    * Alpine skiing OK
;;    * Biathlon
;;    * Bobsleigh
;;    * Cross-country skiing OK
;;    * Curling
;;    * Figure skating ADDED
;;    * Freestyle skiing OK
;;    * Ice hockey
;;    * Luge
;;    * Nordic combined
;;    * Short track speed skating ADDED
;;    * Skeleton
;;    * Ski jumping ski?
;;    * Snowboarding
;;    * Speed skating

(subclass FigureSkating Sport)
(subclass SwimmingSport Sport)
(subclass Soccer Sport)

(instance BaseballProfessional ProfessionalAthlete)
(instance BasketballProfessional ProfessionalAthlete)
(instance Boxer ProfessionalAthlete)
(instance FigureSkater ProfessionalAthlete)
(instance FootballerUS ProfessionalAthlete)
(instance FootballerSoccer ProfessionalAthlete)
(instance Golfer ProfessionalAthlete)
(instance Swimmer ProfessionalAthlete)

(=>
  (attribute ?ATHLETE BaseballProfessional)
  (hasSkill Baseball ?ATHLETE))
  
(=>
  (attribute ?ATHLETE BasketballProfessional)
  (hasSkill Basketball ?ATHLETE))
  
(=>
  (attribute ?ATHLETE Boxer)
  (hasSkill Boxing ?ATHLETE)) 
  
(=>
  (attribute ?ATHLETE FigureSkater)
  (hasSkill FigureSkating ?ATHLETE))  
  
(=>
  (attribute ?ATHLETE FootballerUS)
  (hasSkill Football ?ATHLETE)) 
  
(=>
  (attribute ?ATHLETE FootballerSoccer)
  (hasSkill Soccer ?ATHLETE))
  
(=>
  (attribute ?ATHLETE Golfer)
  (hasSkill Golf ?ATHLETE))  
  
(=>
  (attribute ?ATHLETE Swimmer)
  (hasSkill SwimmingSport ?ATHLETE))
 
;;---------------------------------------------------------------------------------- 
;; The Criative Economy Occupations  from http://en.wikipedia.org/wiki/Creative_industries
;;----------------------------------------------------------------------------------
;; Advertising
;; Architecture --  OK above
;; Arts and antique markets
;; Crafts
;; Design -- 
;; Designer Fashion
;; Film, video and photography
;; Software, computer games and electronic publishing
;; Music and the visual and performing arts
;; Publishing
;; Television
;; Radio 

;; Main old definition is Artist:
;; (instance Artist EntertainmentProfession) Mid-level-ontology.kif 12944-12946
;; change it to (instance Artist SkilledOccupation) ??
;; wikipedia: artist -- A person who creates art as an occupation.
;; Changed EntertainmentProfession to EntertainmentOccupation
;; also FilmMakingOccupation and TheaterOccupation (
;; Wikipedia has: Most often, the term ARTIST describes those who create within a context of the fine arts or 'high culture', 
;; activities such as drawing, painting, sculpture, acting, dancing, writing, filmmaking, photography, 
;; and music—people who use imagination, talent, or skill to create works that may be judged to have an aesthetic value.

;; model (=>
;;    (attribute ?X Musician)
;;    (hasSkill MusicalPerformance ?X))

(instance Artist SkilledOccupation)
(instance Cartoon ArtWork)

(subclass ArtisticOccupation SkilledOccupation)
(subclass Actor ArtisticOccupation)
(subclass Musician ArtisticOccupation)
(subclass Writer ArtisticOccupation)
(subclass Sculptor ArtisticOccupation)
(subclass Dancer ArtisticOccupation)

(subclass Designer ArtisticOccupation)
(subclass FashionDesigner Designer)
(subclass WebDesigner Designer)
(subclass GameDesigner Designer)

(subclass Painter ArtisticOccupation)
(subclass Draftsman ArtisticOccupation)
;; issue in UK is draughtsman
(subclass Composer ArtisticOccupation) 
(subclass Cartoonist ArtisticOccupation)
;(=>
;    (instance ?DRAWING Cartoon)
;    (exists (?DRAWING ?LAUGHING)
;        (and
;            (instance ?DRAWING Drawing)
;            (instance ?LAUGHING Laughing)
;            (causes ?DRAWING ?LAUGHING))))

(=>
  (attribute ?PERSON Dancer)
  (hasSkill Dancing ?PERSON))
  
;; also have Comedian an instance of a EntertainmentOccupation but not an Actor? seems strange
;; Actors only have skill for Drama, comedy is only entertainment? not right..
(=>
  (attribute ?PERSON Actor)
  (hasSkill DramaticPerformance ?PERSON)) 
  
(=>
  (attribute ?PERSON Sculptor)
  (hasSkill Sculpture ?PERSON))
  
(=>
  (attribute ?PERSON Painter)
  (hasSkill ArtPainting ?PERSON))
  
(=>
  (attribute ?PERSON Writer)
  (hasSkill WrittenCommunication ?PERSON))
  
;possible subs   Novelist, playwright, poet, essayist, critic
  
(=>
  (attribute ?PERSON Draftsman)
  (hasSkill Drawing ?PERSON))
   
(=>
  (attribute ?PERSON Composer)
  (hasSkill Composing ?PERSON))
  
(=>
  (attribute ?PERSON TheaterDirector)
  (hasSkill DirectingTheater ?PERSON)) 
  
(=>
  (attribute ?PERSON Photographer)
  (hasSkill Photographing ?PERSON))  
  
(=>
  (attribute ?PERSON Designer)
  (hasSkill Designing ?PERSON))  
  
(=>
  (attribute ?PERSON WebDesigner)
  (exists (?WEBSITE)
    (and
      (attribute ?PERSON Designer)
      (instance ?WEBSITE WebSite)
      (authors ?PERSON ?WEBSITE))))
      
(=>
  (attribute ?PERSON GameDesigner)
  (exists (?VIDEOGAME)
    (and
      (attribute ?PERSON Designer)
      (instance ?VIDEOGAME videoGame)
      (authors ?PERSON ?VIDEOGAME))))  
      
;; missing FashionDesigner         
  
(documentation DirectingTheater EnglishLanguage "The process of directing a theatrical performance.")     
(subclass DirectingTheater Directing)  

(=>
  (and
    (instance ?CONDUCT DirectingTheater)
    (agent ?CONDUCT ?AGENT))
  (holdsDuring
     (WhenFn ?CONDUCT)
     (attribute ?AGENT TheaterDirector)))       

(=>
  (holdsDuring ?T1
    (attribute ?AGENT TheaterDirector))
    (exists (?CONDUCT)
        (and
           (instance ?CONDUCT DirectingTheater)
           (agent ?CONDUCT ?AGENT)
           (not
              (earlier ?T1
                (WhenFn ?CONDUCT))))))    
                    
(documentation DirectingFilm EnglishLanguage "The process of directing a film or movie.")     
(subclass DirectingFilm Directing)  

(=>
    (and
        (instance ?CONDUCT DirectingFilm)
        (agent ?CONDUCT ?AGENT))
    (holdsDuring
        (WhenFn ?CONDUCT)
        (attribute ?AGENT FilmDirector)))       

(=>
    (holdsDuring ?T1
        (attribute ?AGENT FilmDirector))
    (exists (?CONDUCT)
        (and
            (instance ?CONDUCT DirectingFilm)
            (agent ?CONDUCT ?AGENT)
            (not
                (earlier ?T1
                    (WhenFn ?CONDUCT))))))                      
  
;; Actor, Artist, Comedian, MusicalConductor, Performer, FilmMakingProfession, TheaterProfession are subs of EntertainmentProfession now
;; FilmDirector, FilmProducer  
;; a different model/ maybe need both eventually for all arts?
;;(=>
;;    (and
;;        (authors ?AGENT ?CLASS)
;;        (subclass ?CLASS MusicalComposition))
;;    (composer ?AGENT ?CLASS))                     Media-1.kif 1602-1606   
;-------------------------------------------------------------
;; Management Professions and Occupations not dealt with
;;------------------------------------------------------------
;; one exception
;; first try:
;(=>
;  (attribute ?PERSON Politician)
; (hasSkill PoliticalProcess ?PERSON))
; Not ideal as some politicians have no skills
(=>
    (instance ?POL Politician)
    (exists (?PROC)
        (and
            (instance ?PROC PoliticalProcess)
            (agent ?PROC ?POL)))) 
             
;; same def as PoliticalOrganization? better than belonging to a political organization?
;; this will be expanded will doing template Politician
;---------------------------------------------------------------  
;; SUMO has a mini-biography of Jesus in Media.kif 1674-1679
;; (documentation JesusOfNazareth EnglishLanguage "JesusOfNazareth is the central figure of christianity, 
;; revered by most christians as the incarnation of God, and also is an important figure in several other religions.") 	
;; (instance JesusOfNazareth Man) 	
;; (instance JesusOfNazareth ReligiousJew)
;; Need to make sure that if we produce SUMO bios they agree with Wikipedia's??
;---------------------------------------------------------------
;; Now to deal with the full Person infobox:
;;{{Infobox person
;;| honorific_prefix          = not necessary in SUMO?
;;| name                      = above
;;| honorific_suffix          = not necessary in SUMO?
;;| native_name               = not necessary in SUMO?
;;| native_name_lang          = below
;;| image                     = not necessary in SUMO
;;| image_size                = not necessary in SUMO
;;| alt                       = not necessary in SUMO
;;| caption                   = not necessary in SUMO
;;| birth_name                = above
;;| birth_date                = above
;;| birth_place               = above
;;| disappeared_date          = NOT yet
;;| disappeared_place         = NOt yet
;;| disappeared_status        = NOt yet
;;| death_date                = above
;;| death_place               = above
;;| death_cause               = NOT yet
;;| body_discovered           = not necessary in SUMO
;;| resting_place             = not necessary in SUMO
;;| resting_place_coordinates = not necessary in SUMO
;;| monuments                 = not necessary in SUMO
;;| residence                 = in SUMO as the relation (inhabits ?ORGANISM ?OBJECT) Merge.kif 11572 --maybe subrelation residence where ?OBJECT is (part of) address like city,country
;;| nationality               = above
;;| other_names               = above
;;| ethnicity                 = SUMO has a notion of EthnicGroup in Merge.kif 13521, don't know how useful/complete this is
;;| citizenship               = above
;;| education                 = need a function for  educ degree (hasDegree ?PERSON ?DEGREE) -- Below
;;| alma_mater                = need a function (almamater ?PERSON ?SCHOOL) -- Below
;;| occupation                = above
;;| years_active              = time interval need a function (yearsActive ?PERSON ?OCCUPATION ?TIMEINTERVAL) -- Below?
;;| employer                  = in SUMO the relation (employs ?ORG ?PERSON) Merge.kif 13566
;;| organization              = use employs, as this can be any organization not only for profits
;;| agent                     = NOT yet
;;| known_for                 = NOT yet
;;| notable_works             = NOT yet
;;| style                     = NOT yet
;;| influences                = NOT yet
;;| influenced                = NOT yet
;;| home_town                 = not necessary in SUMO?
;;| salary                    = not necessary in SUMO?
;;| net_worth                 = not necessary in SUMO?
;;| height                    = not necessary in SUMO?
;;| weight                    = not necessary in SUMO?
;;| television                = not necessary in SUMO?
;;| title                     = not necessary in SUMO?
;;| term                      = for politicians
;;| predecessor               = for politicians
;;| successor                 = for politicians
;;| party                     = for politicians
;;| movement                  = for politicians
;;| opponents                 = for politicians/sportsmen
;;| boards                    = not necessary in SUMO?
;;| religion                  = use SUMO's ReligiousAttribute People.kif 668 and add subcats?
;;| denomination              = NOT 
;;| criminal_charge           = not necessary in SUMO? 
;;| criminal_penalty          = not necessary in SUMO?
;;| criminal_status           = not necessary in SUMO?
;;| spouse                    = SUMO has relation (spouse ?PERSON1 ?PERSON2)
;;| partner                   = SUMO has relation (domesticPartner ?PERSON1 ?PERSON2)
;;| children                  = 
;;| parents                   = 
;;| relatives                 = 
;;| callsign                  = for radios/tvs not necessary in SUMO?
;;| awards                    = 
;;| signature                 = not necessary in SUMO?
;;| signature_alt             = not necessary in SUMO?
;;| signature_size            = not necessary in SUMO?
;;| module                    = not necessary in SUMO
;;| module2                   = not necessary in SUMO
;;| module3                   = not necessary in SUMO
;;| module4                   = not necessary in SUMO
;;| module5                   = not necessary in SUMO
;;| module6                   = not necessary in SUMO
;;| website                   = <!-- {{URL|www.example.com}} -->
;;| footnotes                 = not necessary in SUMO
;;| box_width                 = not necessary in SUMO
;;}}
 
;; 0.  have son, daughter but not children/offspring
;----------------------------------------------------------------
;; residence attribute can be done with relation (inhabits ?PERSON ?PLACE)

;; education attribute needs DegreeFn from LinkedInDegree.kif
(documentation hasDegreeFn EnglishLanguage "A binary function that, when given a &%Human, will return an instance of an
&%AcademicDegree earned by that person.   (hasDegreeFn ?X), ?X is the &%Human.")

(instance hasDegreeFn UnaryFunction)
(domain hasDegreeFn 1 Human)
(range DegreeFn AcademicDegree)
(termFormat EnglishLanguage DegreeFn "has degree")

;; e.g. (hasDegreeFn StephenHawking (DegreeFn Physics OxfordUniversityUK))

(=>
  (and
    (instance ?HUMAN Human)
    (hasDegree ?HUMAN ?DEGREE))
  (exists (?SCHOOL ?FIELDOFSTUDY ?AWARDINGDEGREE)
    (and 
      (instance ?SCHOOL PostSecondarySchool)
      (instance ?FIELDOFSTUDY FieldOfStudy)
      (patient ?AWARDINGDEGREE (DegreeFn ?FIELDOFSTUDY ?SCHOOL))
      (destination ?AWARDINGDEGREE ?HUMAN))))

;; almamater for Wikipedia is whether you graduated or not e.g Bill Gates almater is Harvard 
(=>
  (and
    (instance ?PERSON Student)
    (instance ?SCHOOL PostSecondarySchool)
    (instance ?EV EducationalProcess)
    (patient ?EV ?PERSON)
    (located ?EV ?SCHOOL))
  (almamater ?PERSON ?SCHOOL))    

;------------------------------------------------------------
(=>
  (and
    (instance ?H Human)
    (instance ?ORG Organization)
    (employs ?ORG ?H))
  (employer ?H ?ORG))
  
;-----------------------------------------------------------  
; this might be an unwarrented simplification as time intervals have no gaps 
; and people aren't active in their occupations if they're sick or injured or just resting..

(documentation yearsActiveFn EnglishLanguage "A binary function that, when given a &%Human, and an &%Occupation will return an instance of an time interval
&%TimeInterval during which that person is considered active in that occupation.")

(instance yearsActiveFn UnaryFunction)
(domain yearsActiveFn 1 Human)
(range yearsActiveFn TimeInterval)
(termFormat EnglishLanguage yearsActiveFn "years active")

; if a person has an skilled occupation then there is a time interval when the person has that occupation
; and this time is the time that the person is active on that occupation
(=>
  (and
    (instance ?PERSON Human)
    (instance ?OCCUPATION SkilledOccupation)
    (attribute ?PERSON ?OCCUPATION))
  (and
    (exists (?TIME)  
      (holdsDuring ?TIME      
        (attribute ?PERSON ?OCCUPATION)))
    (equal ?TIME (yearsActive ?PERSON))))
    
;----------------------------------------------------
; For Religion we can use the collection of ReligiousAttribute and add subcategories..
;(instance Bahai ReligiousAttribute)  People.kif 774-774  
;(instance Buddhist ReligiousAttribute)  People.kif 786-786  
;(instance Christian ReligiousAttribute)     People.kif 799-799  
;(instance Confucianist ReligiousAttribute)  People.kif 1227-1227    
;(instance Hindu ReligiousAttribute)     People.kif 1239-1239    
;(instance Jain ReligiousAttribute)  People.kif 1321-1321    
;(instance Muslim ReligiousAttribute)    People.kif 1251-1251    
;(instance Neopaganismist ReligiousAttribute)    People.kif 1353-1353    
;(instance ReligiousJew ReligiousAttribute)  People.kif 1338-1338    
;(instance Shintoist ReligiousAttribute)     People.kif 1368-1368    
;(instance Sikh ReligiousAttribute)  People.kif 1383-1383    
;(instance Taoist ReligiousAttribute)    People.kif 1398-1398    
;(instance Zoroastrian ReligiousAttribute) People.kif 1413-1413

; subcategories can be gotten from term Church People.kif 686
;(instance ChurchOfJesusChristOfLatterDaySaints Church)  People.kif 1123-1123    --> mormom
;(subclass Adventistsamfundet Church)    People.kif 1128-1128    --> adventist
;(subclass AnglicanApostolicEpiscopalFreeChurch Church)  People.kif 816-816  --> episcopalian
;(subclass AnglicanChurch Church)    People.kif 807-807  --> anglican
;(subclass BaptistChurch Church)     People.kif 829-829  --> baptist
;(subclass CharismaticChurch Church)     People.kif 1021-1021  -->  pentecostal
;(subclass ChristianUnion Church)    People.kif 1104-1104    NO
;(subclass CrusadersUnion Church)    People.kif 1101-1101    NO
;(subclass EcumenicalProject Church)     People.kif 1105-1105  NO  
;(subclass EvangelicalChurch Church)     People.kif 875-875  --> evangelical
;(subclass FreeChurchOfEngland Church)   People.kif 822-822  --> episcopal
;(subclass FreeChurchOfScotland Church)  People.kif 819-819  
;(subclass Katolskakyrkan Church)    People.kif 1129-1129    --> Catholic Church of Sweden just catholic
;(subclass LutheranChurch Church)    People.kif 1148-1148    --> lutheran
;(subclass MethodistChurch Church)   People.kif 989-989     --> methodist
;(subclass Missionskyrkan Church)    People.kif 1131-1131    --> free church of Sweden
;(subclass MissionssaellskapetBibeltrognaVaenner Church)     People.kif 1130-1130    ecumenical
;(subclass Ovrigt Church)    People.kif 1136-1136    remove this is Other in Swedish
;(subclass Pingstroerelsen Church)   People.kif 1132-1132    pentecostal
;(subclass PresbyterianChurch Church)    People.kif 1139-1139    --> presbyterian
;(subclass ScottishEpiscopalChurch Church)   People.kif 825-825  --> episcopal
;(subclass SeventhDayAdventistChurch Church)     People.kif 1103-1103    --> adventist
;(subclass ShaftesburySociety Church)    People.kif 1100-1100    --> remove it's a Non-profit called Livebility
;(subclass SvenskaAlliansmissionen Church)  --> remove?

; Also have  
;(subCollection Anglicanism Christianity)    People.kif 1155-1155    
;(subCollection EasternOrthodoxChristianity Christianity)    People.kif 1176-1176    
;(subCollection Protestantism Christianity)  People.kif 1189-1189    
;(subCollection RomanCatholicism Christianity)   People.kif 1202-1202    

; And
;(instance Bahaism BeliefGroup)  People.kif 769-769  
;(instance Buddhism BeliefGroup)     People.kif 782-782  
;(instance Christianity BeliefGroup)     People.kif 794-794  
;(instance Confucianism BeliefGroup)     People.kif 1223-1223    
;(instance Hinduism BeliefGroup)     People.kif 1235-1235    
;(instance Islam BeliefGroup)    People.kif 1247-1247    
;(instance Jainism BeliefGroup)  People.kif 1316-1316    
;(instance Judaism BeliefGroup)  People.kif 1331-1331    
;(instance Neopaganism BeliefGroup)  People.kif 1348-1348    
;(instance Shinto BeliefGroup)   People.kif 1363-1363    
;(instance Sikhism BeliefGroup)  People.kif 1378-1378    
;(instance Taoism BeliefGroup)   People.kif 1393-1393    
;(instance Zoroastrianism BeliefGroup)
;---------------------------------------------------------------

; Adding a few ReligiousAttributes pending discussions with Adam:
(instance Mormon ReligiousAttribute)  
(instance Adventist ReligiousAttribute)    
(instance Episcopalian ReligiousAttribute)  
(instance Anglican ReligiousAttribute) ;subclass of Christian    
(instance Baptist ReligiousAttribute)     
(instance Pentecostal ReligiousAttribute)     
(instance Ecumenical ReligiousAttribute)     
(instance Evangelical ReligiousAttribute)     
(instance RomanCatholic ReligiousAttribute)    ;subclass of Christian
(instance Lutheran ReligiousAttribute)    
(instance Methodist ReligiousAttribute)   
(instance Presbyterian ReligiousAttribute)    