;; ============================================================================
;;                    	    REARDEN COMMERCE, INC.
;;                	            Agreements Ontology
;; ============================================================================

;; Created by: Karen Joy Nomorosa (karen.nomorosa [at] reardencommerce [dot] com)
;; Created on: June 17, 2011
;; Last modified: 
;; Modified by: Karen Joy Nomorosa (karen.nomorosa [at] reardencommerce [dot] com)

;; Description:  This ontology describes different concepts attached to Pricing

;; Access to and use of these products is governed by the GNU General Public 
;; License <http://www.gnu.org/copyleft/gpl.html>. 
;; By using these products, you agree to be bound by the terms 
;; of the GPL.

;; We ask the people using or referencing this work cite our primary paper:

;; Niles, I., and Pease, A.  2001.  Towards a Standard Upper Ontology.  In 
;; Proceedings of the 2nd International Conference on Formal Ontology in 
;; Information Systems (FOIS-2001), Chris Welty and Barry Smith, eds, 
;; Ogunquit, Maine, October 17-19, 2001.  See also http://www.ontologyportal.org


;; -------------------------------- DISCLAIMER -------------------------------------
;; These classes and relationships were created to address limitations in less-expressive
;; storage and retrieval solutions (databases, search engines, etc) and are not 
;; meant to be ontologically sound.  They are used as 'bridging terms' that somehow
;; summarize what would normally be expressed in more verbose rules and axioms.
;; ----------------------------------------------------------------------------------

(subclass AC120PowerSource ACPowerSource)
(documentation AC120PowerSource EnglishLanguage "&%AC120PowerSource refers to an 
&%ACPowerSource that generates 120 &%Volt of &%Electricity")
(termFormat EnglishLanguage AC120PowerSource "120 ac")

(=>
  (instance ?AC AC120PowerSource)
  (hasPurpose ?AC
    (voltageMeasure ?AC (MeasureFn 120 Volt))))
    
(subclass AC220PowerSource ACPowerSource)
(documentation AC220PowerSource EnglishLanguage "&%AC220PowerSource refers to an 
&%ACPowerSource that generates 220 &%Volt of &%Electricity")
(termFormat EnglishLanguage AC220PowerSource "220 ac")

(=>
  (instance ?AC AC220PowerSource)
  (hasPurpose ?AC
    (voltageMeasure ?AC (MeasureFn 220 Volt))))

(subclass DC120PowerSource DCPowerSource)
(documentation DC120PowerSource EnglishLanguage "&%DC120PowerSource refers to an 
&%DCPowerSource that generates 120 &%Volt of &%Electricity")
(termFormat EnglishLanguage DC120PowerSource "120 ac")

(=>
  (instance ?DC DC120PowerSource)
  (hasPurpose ?DC
    (voltageMeasure ?DC (MeasureFn 120 Volt))))
    
(subclass DC220PowerSource DCPowerSource)
(documentation DC220PowerSource EnglishLanguage "&%DC220PowerSource refers to an 
&%DCPowerSource that generates 220 &%Volt of &%Electricity")
(termFormat EnglishLanguage AC220PowerSource "220 ac")

(=>
  (instance ?DC DC220PowerSource)
  (hasPurpose ?DC
    (voltageMeasure ?DC (MeasureFn 220 Volt))))

(subclass BrailleElevator Elevator)
(documentation BrailleElevator EnglishLanguage "&%BrailleElevator is a type of
&%Elevator that a &%Blind person is able to use as it has &%Braille controls")
(termFormat EnglishLanguage BrailleElevator "braille elevator")

(=>
  (instance ?X BrailleElevator)
  (exists (?CONTROL)
    (and
      (instance ?CONTROL Controller)
      (part ?CONTROL ?X)
      (attribute ?CONTROL Braille))))

(subclass HistoricalCity City)
(documentation HistoricalCity EnglishLanguage "&%HistoricalCity is a type of 
&%City that has figured a prominent role in &%History")
(termFormat EnglishLanguage HistoricalCity "historical city")

(=>
  (instance ?X HistoricalCity)
  (attribute ?X Historical))
      
(subclass DutyFreeStore RetailStore)
(documentation DutyFreeStore EnglishLanguage "&%DutyFreeStore is a type of &%RetailStore
that sells products that are &%DutyFree")
(termFormat EnglishLanguage DutyFreeStore "duty free store")

(=>
  (instance ?X DutyFreeStore)
  (attribute ?X DutyFree))
      
(subclass IndoorSwimmingPool SwimmingPool)
(documentation IndoorSwimmingPool EnglishLanguage "&%IndoorSwimmingPool is a type of
&%SwimmingPool that is &%Indoors")
(termFormat EnglishLanguage IndoorSwimmingPool "indoor swimming pool")

(=>
  (instance ?X IndoorSwimmingPool)
  (exists (?INDOOR)
    (and
      (instance ?INDOOR Indoors)
      (located ?X ?INDOOR))))

(subclass OutdoorSwimmingPool SwimmingPool)
(documentation OutdoorSwimmingPool EnglishLanguage "&%OutdoorSwimmingPool is a type of
&%SwimmingPool that is &%Outdoors")
(termFormat EnglishLanguage OutdoorSwimmingPool "outdoor swimming pool")

(=>
  (instance ?X OutdoorSwimmingPool)
  (exists (?OUTDOOR)
    (and
      (instance ?OUTDOOR Outdoors)
      (located ?X ?OUTDOOR))))
      
(subclass PoolsideSnackAndNonalcoholicBeverageBar SnackAndNonalcoholicBeverageBars)
(documentation PoolsideSnackAndNonalcoholicBeverageBar EnglishLanguage
"&%PoolsideSnackAndNonalcoholicBeverageBar is a type of &%SnackAndNonalcoholicBeverageBars
that is &%Adjacent to a &%SwimmingPool")
(termFormat EnglishLanguage PoolsideSnackAndNonalcoholicBeverageBar "poolside snack bar")

(=>
  (instance ?X PoolsideSnackAndNonalcoholicBeverageBar)
  (exists (?REGION ?POOL)
    (and
      (instance ?POOL SwimmingPool)
      (instance ?REGION Region)
      (orientation ?REGION ?POOL Adjacent)
      (located ?X ?REGION))))

(subclass IndoorTennisCourt TennisCourt)
(documentation IndoorTennisCourt EnglishLanguage "&%IndoorTennisCourt is a type of
&%TennisCourt that can be found &%Indoors")
(termFormat EnglishLanguage IndoorTennisCourt "indoor tennis court")

(=>
  (instance ?X IndoorTennisCourt)
  (exists (?INDOOR)
    (and
      (instance ?INDOOR Indoors)
      (located ?X ?INDOOR))))
      
(subclass OutdoorTennisCourt TennisCourt)
(documentation OutdoorTennisCourt EnglishLanguage "&%OutdoorTennisCourt is a type of
&%TennisCourt that can be found &%Outdoors")
(termFormat EnglishLanguage OutdoorTennisCourt "outdoor tennis court")

(=>
  (instance ?X OutdoorTennisCourt)
  (exists (?OUTDOOR)
    (and
      (instance ?OUTDOOR Outdoors)
      (located ?X ?OUTDOOR))))
      
(subclass DoubleWhirlpoolTub WhirlpoolTub)
(documentation DoubleWhirlpoolTub EnglishLanguage "&%DoubleWhirlpoolTub is a 
&%WhirlpoolTub that can fit two &%Human at the same time")
(termFormat EnglishLanguage DoubleWhirlpoolTub "double whirlpool tub")

(=>
  (instance ?X DoubleWhirlpoolTub)
  (modalAttribute
    (exists (?GRP)
      (and
        (instance ?GRP GroupOfPeople)
        (memberCount ?GRP 2)
        (located ?GRP ?X))) Possibility))

(subclass CableTelevisionSet TelevisionSet)
(documentation CableTelevisionSet EnglishLanguage "&%CableTelevisionSet is a 
&%TelevisionSet with a &%TelevisionReceiver that is a &%engineeringSubcomponent of
a &%CableTelevisionSystem")
(termFormat EnglishLanguage CableTelevisionSet "cable tv")

(=>
  (instance ?X CableTelevisionSet)
  (modalAttribute
    (exists (?CABLE)
      (and
        (instance ?CABLE CableTelevisionSystem)
        (member ?X ?CABLE))) Possibility))

(subclass SatelliteTVSet TelevisionSet)
(documentation SatelliteTVSet EnglishLanguage "&%SatelliteTVSet is a &%TelevisionSet
with a &%TelevisionReceiver that is an &%engineeringSubcomponent of a 
&%SatelliteTelevisionSystem")
(termFormat EnglishLanguage SatelliteTVSet "satellite tv")

(=>
  (instance ?TV SatelliteTVSet)
  (modalAttribute
    (exists (?SAT)
      (and
        (instance ?SAT SatelliteTelevisionSystem)
        (member ?TV ?SAT))) Possibility))


(subclass ChildFriendlyActivity RecreationOrExercise)
(documentation ChildFriendlyActivity EnglishLanguage "&%ChildFriendlyActivity is a type
of &%RecreationOrExercise that is &%ChildFriendlyAttribute")
(termFormat EnglishLanguage ChildFriendlyActivity "child-friendly activity")

(=>
  (instance ?X ChildFriendlyActivity)
  (attribute ?X ChildFriendlyAttribute))

(subclass BreakfastBuffet Buffet)
(documentation BreakfastBuffet EnglishLanguage "&%BreakfastBuffet is a type of
&%Buffet served at &%BreakfastTime made with food for &%Breakfast")
(termFormat EnglishLanguage BreakfastBuffet "breakfast buffet")

(=>
  (instance ?X BreakfastBuffet)
  (attribute ?X Breakfast))
  
(=>
  (instance ?X BreakfastBuffet)
  (modalAttribute
    (exists (?EAT)
      (and
        (instance ?EAT Eating)
        (patient ?EAT ?X)
        (during (WhenFn ?EAT) BreakfastTime))) Likely))

(subclass LocalTelephoneCommunication TelephoneCommunication)
(documentation LocalTelephoneCommunication EnglishLanguage
"&%LocalTelephoneCommunication is a type of &%TelephoneCommunication to 
&%TelephonyDevice in the same area or vicinity")
(termFormat EnglishLanguage LocalTelephoneCommunication "local phone call")

(=>
  (instance ?CALL LocalTelephoneCommunication)
  (attribute ?CALL Local))
  
(subclass InternationalDirectDialTelephoneCommunication DirectDialTelephoneCommunication)
(documentation InternationalDirectDialTelephoneCommunication EnglishLanguage
"&%InternationalDirectDialTelephoneCommunication is a type of &%DirectDialTelephoneCommunication
where the destination of the call is in a different &%Nation")
(termFormat EnglishLanguage InternationalDirectDialTelephoneCommunication
"international direct dial")

(=>
  (instance ?X InternationalDirectDialTelephoneCommunication)
  (attribute ?X International))

(subclass CommunalLounge SittingArea)
(documentation CommunalLounge EnglishLanguage "&%CommunalLounge is a type of 
&%SittingArea that is shared by many groups of people, or is &%CommunalAttribute")
(termFormat EnglishLanguage CommunalLounge "communal lounge")

(=>
  (instance ?X CommunalLounge)
  (attribute ?X CommunalAttribute))
  
(subclass CommunalKitchenArea KitchenArea)
(documentation CommunalKitchenArea EnglishLanguage "&%CommunalKitchenArea is a type of
&%KitchenArea that is shared by many groups of people, or is &%CommunalAttribute")
(termFormat EnglishLanguage CommunalKitchenArea "communal kitchen area")

(=>
  (instance ?X CommunalKitchenArea)
  (attribute ?X CommunalAttribute))
  
(subclass CommunalInRoomBathroom Bathroom)
(documentation CommunalInRoomBathroom EnglishLanguage "&%CommunalInRoomBathroom is a 
type of &%Bathroom that is shared by people staying in multiple rooms")
(termFormat EnglishLanguage CommunalInRoomBathroom "communal in-room bathroom")

(=>
  (physicalAmenity ?ROOM CommunalInRoomBathroom)
  (exists (?ROOM1 ?ROOM2 ?BATH)
    (and
      (instance ?BATH CommunalInRoomBathroom)
      (instance ?ROOM1 ?ROOM)
      (instance ?ROOM2 ?ROOM)
      (not (equal ?ROOM1 ?ROOM2))
      (orientation ?ROOM1 ?BATH Adjacent)
      (orientation ?ROOM2 ?BATH Adjacent)
      (=>
        (and
          (stays ?GUEST1 ?ROOM1)
          (stays ?GUEST2 ?ROOM2))
        (modalAttribute
          (and
            (uses ?BATH ?GUEST1)
            (uses ?BATH ?GUEST2)) Possibility)))))
                
                
(subclass NewspaperDeliveryService DeliveryService)
(documentation NewspaperDeliveryService EnglishLanguage "&%NewspaperDeliveryService
is a type of &%DeliveryService where the &%patient is a &%Newspaper")
(termFormat EnglishLanguage NewspaperDeliveryService "newspaper delivery")

(=>
  (instance ?NEWS NewspaperDeliveryService)
  (exists (?PAPER)
    (and
      (instance ?PAPER Newspaper)
      (patient ?NEWS ?PAPER))))
      

(subclass SpeakerPhone Telephone)
(documentation SpeakerPhone EnglishLanguage "&%SpeakerPhone is a type of &%Telephone
with a &%SpeakerDevice instead of an &%Earphone")
(termFormat EnglishLanguage SpeakerPhone "speaker phone")

(=>
  (instance ?PHONE SpeakerPhone)
  (exists (?SPEAKER)
    (and
      (instance ?SPEAKER SpeakerDevice)
      (part ?SPEAKER ?PHONE))))
    
(subclass OutdoorDiningArea DiningArea)
(documentation OutdoorDiningArea EnglishLanguage "&%OutdoorDiningArea refers to a 
&%DiningArea that is located &%Outdoors")
(termFormat EnglishLanguage OutdoorDiningArea "outdoor dining area")

(=>
  (instance ?DA OutdoorDiningArea)
  (exists (?OUTDOORS)
    (and
      (instance ?OUTDOORS Outdoors)
      (located ?DA ?OUTDOORS))))
      
(subclass AllDayRoomService RoomService)
(documentation AllDayRoomService EnglishLanguage "&%AllDayRoomService refers to the
capability of a &%TravelerAccommodation to offer &%RoomService for all of 24 hours")
(termFormat EnglishLanguage AllDayRoomService "24-hr room service")

(=>
  (and
    (serviceAmenity ?ROOM AllDayRoomService)
    (instance ?X ?ROOM)
    (element ?X (PropertyFn ?HOTEL)))
  (capabilityDuring RoomService agent ?HOTEL (RecurrentTimeIntervalFn (HourFn 0 Day) (HourFn 24 Day))))

(subclass AllDayFrontDesk HotelFrontDesk)
(documentation AllDayFrontDesk EnglishLanguage "&%AllDayFrontDesk means that the
&%HotelFrontDesk organization is available the whole day")
(termFormat EnglishLanguage AllDayFrontDesk "24-hr front desk")

(=>
  (instance ?X AllDayFrontDesk)
  (standardRetailHours (RecurrentTimeIntervalFn (HourFn 0 Day) (HourFn 24 Day)) ?X))
     
      
(subclass UniformedSecurityUnit SecurityUnit)
(documentation UniformedSecurityUnit EnglishLanguage "&%UniformedSecurityUnit refers
to a &%SecurityUnit whose members wear &%UniformClothing.")
(termFormat EnglishLanguage UniformedSecurityUnit "uniformed security unit")

(=>
  (instance ?X UniformedSecurityUnit)
  (exists (?UNIFORM)
    (and
      (subclass ?UNIFORM UniformClothing)
      (hasUniform ?X ?UNIFORM))))


(subclass TouristArea GeographicArea)
(documentation TouristArea EnglishLanguage "&%TouristArea refers to the vicinity where
&%TouristSite can be found")
(termFormat EnglishLanguage TouristArea "tourist area")

(=>
  (instance ?X TouristArea)
  (exists (?SITE)
    (and
      (instance ?SITE TouristSite)
      (located ?SITE ?X))))
      
(subclass RuralArea GeographicArea)
(documentation RuralArea EnglishLanguage "&%RuralArea refers to a &%GeographicArea
that is &%Rural")
(termFormat EnglishLanguage RuralArea "rural area")

(=>
  (instance ?X RuralArea)
  (attribute ?X Rural))
            
(subclass SuburbanArea GeographicArea)
(documentation SuburbanArea EnglishLanguage "&%SuburbanArea refers to a &%GeographicArea
that is &%Suburban")
(termFormat EnglishLanguage SuburbanArea "suburban area")

(=>
  (instance ?X SuburbanArea)
  (attribute ?X Suburban))
     

;; NOTE: tried searching for what this means in the internet, but could not find
;; any reliable source      
(subclass MealPlanCaribbean MealPlan)
(termFormat EnglishLanguage MealPlanCaribbean "caribbean meal plan")

(subrelation externalVideo externalImage)
(documentation externalVideo EnglishLanguage "(&%externalVideo ?ENT ?URL) relates content
stored in &$URL ?URL about &%Entity ?ENT")
(termFormat EnglishLanguage externalVideo "external video")

(=>
  (externalVideo ?OBJ ?STRING)
  (exists (?VIDEO)
    (and
      (instance ?VIDEO MultimediaFile)
      (refers ?VIDEO ?OBJ)
      (represents ?STRING ?VIDEO))))

(instance externalVideoCaption BinaryPredicate)
(documentation externalVideoCaption EnglishLanguage "(&%externalVideoCaption ?VIDEO
?CAPTION) relates the &%SymbolicString ?CAPTION to the &%URL represented by the
the &%SymbolicString ?VIDEO")

(domain externalVideoCaption 1 SymbolicString)
(domain externalVideoCaption 2 SymbolicString)

(=>
  (externalVideoCaption ?VIDEO ?CAPTION)
  (exists (?URL)
    (and
      (instance ?URL URL)
      (represents ?VIDEO ?URL)
      (refers ?CAPTION ?URL))))

(instance externalImageCaption BinaryPredicate)
(documentation externalImageCaption EnglishLanguage "(&%externalImageCaption ?IMG
?CAPTION) relates the &%SymbolicString ?CAPTION to the &%URL represented by the
the &%SymbolicString ?IMG")

(domain externalImageCaption 1 SymbolicString)
(domain externalImageCaption 2 SymbolicString)

(=>
  (externalImageCaption ?IMG ?CAPTION)
  (exists (?URL)
    (and
      (instance ?URL URL)
      (represents ?IMG ?URL)
      (refers ?CAPTION ?URL))))

(subrelation emailAddress siteForContact)

(=>
  (emailAddress ?EMAIL ?AGENT)
  (instance ?EMAIL EmailAddress))

(subrelation websiteAddress siteForContact)
(documentation websiteAddress "(&%websiteAddress ?URL ?AGENT) means that ?URL is the 
&%URL of the &%WebDocument that gives information about &%Agent ?AGENT")
(termFormat EnglishLanguage websiteAddress "website address")

(=>
  (websiteAddress ?URL ?AGENT)
  (instance ?URL URL))
  
(subrelation hotelFunctionRoomName names)
(documentation hotelFunctionRoomName EnglishLanguage "(&%hotelFunctionRoomName ?NAME
?ROOM) means that &%HotelFunctionRoom ?ROOM has name ?NAME")
(termFormat EnglishLanguage hotelFunctionRoomName "hotel function room name")

(=>
  (hotelFunctionRoomName ?NAME ?ROOM)
  (instance ?ROOM HotelFunctionRoom))
  
(instance numberFunctionRoom BinaryPredicate)
(documentation numberFunctionRoom EnglishLanguage "(&%numberFunctionRoom ?AGENT ?NUM)
means that &%Agent ?AGENT has &%Integer ?NUM amount of &%HotelFunctionRoom in its
premises")
(termFormat EnglishLanguage numberFunctionRoom "number function room")

(domain numberFunctionRoom 1 Agent)
(domain numberFunctionRoom 2 Integer)

(=>
  (numberFunctionRoom ?AGENT ?NUM)
  (exists (?FR)
    (and
      (instance ?FR Collection)
      (forall (?X)
        (=>
          (and
            (instance ?X HotelFunctionRoom)
            (element ?X (PropertyFn ?AGENT)))
          (member ?FR ?X)))
      (memberCount ?FR ?NUM))))
        
(instance numberBar BinaryPredicate)
(documentation numberBar EnglishLangauge "(&%numberBar ?AGENT ?NUM) means that
&%Agent ?AGENT has &%Integer ?NUM amount of &%Tavern in its premises")
(termFormat EnglishLanguage numberBar "number of bars")

(domain numberBar 1 Agent)
(domain numberBar 2 Integer)

(=>
  (numberBar ?AGENT ?NUM)
  (exists (?COLL)
    (and
      (instance ?COLL Collection)
      (forall (?X)
        (=>
          (and
            (instance ?X Tavern)
            (element ?X (PropertyFn ?AGENT)))
          (member ?COLL ?X)))
      (memberCount ?COLL ?NUM))))
      
(instance numberRestaurant BinaryPredicate)
(documentation numberRestaurant EnglishLangauge "(&%numberRestaurant ?AGENT ?NUM) means
that &%Agent ?AGENT has &%Integer ?NUM amount of &%Restaurant in its premises")
(termFormat EnglishLanguage numberRestaurant "number of restaurants")

(domain numberRestaurant 1 Agent)
(domain numberRestaurant 2 Integer)

(=>
  (numberRestaurant ?AGENT ?NUM)
  (exists (?COLL)
    (and
      (instance ?COLL Collection)
      (forall (?X)
        (=>
          (and
            (instance ?X Restaurant)
            (element ?X (PropertyFn ?AGENT)))
          (member ?COLL ?X)))
      (memberCount ?COLL ?NUM))))
      
      
(instance hotelAmenity BinaryPredicate)
(documentation hotelAmenity EnglishLanguage "(&%hotelAmenity ?HOTEL ?ENTITY) means that
&%TravelerAccommodation ?HOTEL offers &%Entity ?ENTITY")
(termFormat EnglishLanguage hotelAmenity "hotel amenity")

(domain hotelAmenity 1 CognitiveAgent)
(domain hotelAmenity 2 Entity)

(=>
  (hotelAmenity ?HOTEL ?ENTITY)
  (attribute ?HOTEL TravelerAccommodation))

(=>
  (hotelAmenity ?HOTEL ?ENTITY)
  (or
    (propertyAmenity ?HOTEL ?ENTITY)
    (activityCapability ?HOTEL ?ENTITY)
    (orgStaff ?HOTEL ?PERSON)
    (offers ?HOTEL ?ENTITY)
    (colocatedAgent ?HOTEL ?ENTITY)
    (conforms ?HOTEL ?ENTITY)
    (adjacentOrientation ?HOTEL ?ENTITY)
    (approves ?ENTITY ?HOTEL)
    (attribute ?HOTEL ?ENTITY)
    (exists (?FR)
      (and
        (instance ?FR HotelFunctionRoom)
        (element ?FR (PropertyFn ?HOTEL))
        (functionRoomAmenity ?FR ?ENTITY)))
    (exists (?ROOM)
      (and
        (instance ?ROOM HotelUnit)
        (element ?ROOM (PropertyFn ?HOTEL))
        (or
          (viewType ?ROOM ?ENTITY)
          (roomAmenity ?ROOM ?ENTITY)
          (roomAttribute ?ROOM ?ENTITY))))
    (nearOrientation ?HOTEL ?ENTITY)
    (onOrientation ?HOTEL ?ENTITY)
    (subOrganization ?HOTEL ?ENTITY)))
    
(instance hotelPolicy BinaryPredicate)
(documentation hotelPolicy EnglishLanguage "(&%hotelPolicy ?HOTEL ?POLICY) means that
&%TravelerAccommodation ?HOTEL has the &%Policy ?POLICY")
(termFormat EnglishLanguage hotelPolicy "hotel policy")

(domain hotelPolicy 1 CognitiveAgent)
(domain hotelPolicy 2 Policy)

(=>
  (hotelPolicy ?HOTEL ?POLICY)
  (attribute ?HOTEL TravelerAccommodation))
  
(=>
  (hotelPolicy ?HOTEL ?POLICY)
  (or
    (propertyPolicy ?HOTEL ?POLICY)
    (exists (?ROOM)
      (and
        (instance ?ROOM HotelUnit)
        (element ?ROOM (PropertyFn ?HOTEL))
        (roomPolicy ?ROOM ?POLICY)))))
    
