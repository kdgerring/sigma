;; ============================================================================
;;                    	    REARDEN COMMERCE, INC.
;;                	            Hotel Ontology
;; ============================================================================

;; Created by: Karen Joy Nomorosa (karen.nomorosa [at] reardencommerce [dot] com)
;; Created on: April 15, 2011
;; Last modified: 
;; Modified by: Karen Joy Nomorosa (karen.nomorosa [at] reardencommerce [dot] com)

;; Description:  This ontology describes different concepts that are common among
;; different services

;; Ontology dependencies for services.kif: Merge.kif, Mid-level-ontology.kif

;; Access to and use of these products is governed by the GNU General Public 
;; License <http://www.gnu.org/copyleft/gpl.html>. 
;; By using these products, you agree to be bound by the terms 
;; of the GPL.

;; We ask the people using or referencing this work cite our primary paper:

;; Niles, I., and Pease, A.  2001.  Towards a Standard Upper Ontology.  In 
;; Proceedings of the 2nd International Conference on Formal Ontology in 
;; Information Systems (FOIS-2001), Chris Welty and Barry Smith, eds, 
;; Ogunquit, Maine, October 17-19, 2001.  See also http://www.ontologyportal.org

;; Separating Hotel from HotelBuilding, where Hotel is the agent or the business that
;; administers or operates the HotelBuilding, and HotelBuilding is the physical 
;; structure where Hotel is located.

(=> 
  (attribute ?X TravelerAccommodation)
  (exists (?PROPERTY ?BLDG)
    (and
      (equal ?PROPERTY (PropertyFn ?X))
      (instance ?BLDG HotelBuilding)
      (element ?BLDG ?PROPERTY))))

;; a hotel has the purpose of allowing customers to temporarily stay in a hotel room
;; with the customer paying for the stay
(=>
  (attribute ?X TravelerAccommodation)
  (hasPurpose ?X
    (exists (?CUST ?ROOM ?BLDG ?TIMEINT)
      (and
        (customer ?CUST ?X)
        (instance ?ROOM HotelUnit)
        (part ?ROOM ?BLDG)
        (element ?BLDG (PropertyFn ?X))
        (confersRight ?X
          (holdsDuring ?TIMEINT
            (and
              (stays ?CUST ?ROOM)
              (instance ?PAY FinancialTransaction)
              (agent ?PAY ?CUST)
              (destination ?PAY ?X))) ?CUST)))))
              
(subrelation guest customer)
(documentation guest EnglishLanguage "&%guest refers to the &%customer living in a
&%TemporaryResidence for the duration of his stay there")
(termFormat EnglishLanguage guest "guest")

(domain guest 1 CognitiveAgent)
(domain guest 2 CognitiveAgent)

(=>
  (and
    (guest ?GUEST ?HOTEL)
    (attribute ?HOTEL TravelerAccommodation))
  (exists (?ROOM)
    (and
      (instance ?ROOM HotelUnit)
      (element ?ROOM (PropertyFn ?HOTEL))
      (stays ?GUEST ?ROOM))))
    
(subclass HotelBuilding ResidentialBuilding)
(documentation HotelBuilding EnglishLanguage "A &%ResidentialBuilding which provides 
temporary accommodations to guests in exchange for money.")
(termFormat EnglishLanguage HotelBuilding "hotel")

(=> 
  (instance ?HOTEL HotelBuilding)
  (exists (?ROOM)
    (and
      (instance ?ROOM HotelRoom)
      (properPart ?ROOM ?HOTEL))))      

;; creating HotelUnit which is the unit of TemporaryResidence.  HotelRoom and HotelVilla
;; subclass from this.  Changed it from just HotelRoom since it may not necessarily
;; just be a Room (like in instances of Villa, which are detached units
;; subclassing HotelRoom from Room as well as TemporaryResidence instead of making 
;; HotelBuilding subclass from Temporary Residence. Logically, making HotelBuilding
;; subclass from TemporaryResidence means that the same group of people treat the entire
;; HotelBuilding as their TemporaryResidence, when in reality, each Room has a different
;; group of people treating it as their TemporaryResidence.

(subclass HotelUnit StationaryArtifact)
(subclass HotelUnit TemporaryResidence)
(documentation HotelUnit EnglishLanguage "&%HotelUnit describes the basic unit that
a traveler sleeps in when he is in &%TravelerAccomodation.  It can be a &%Room or a 
detached &%Building")
(termFormat EnglishLanguage HotelUnit "hotel unit")

(=>
  (instance ?ROOM HotelUnit)
  (exists (?BED)
    (and
      (instance ?BED Bed)
      (located ?BED ?ROOM))))

(=>
  (instance ?ROOM HotelUnit)
  (exists (?HOTEL)
    (and
      (attribute ?HOTEL TravelerAccommodation)
      (element ?ROOM (PropertyFn ?HOTEL)))))
      
(subclass HotelRoom Room)
(subclass HotelRoom HotelUnit)
(documentation HotelRoom EnglishLanguage "&%HotelRoom refers to a &%Room that is part
of a &%HotelBuilding that serves as a &%TemporaryResidence for travelers")
(termFormat EnglishLanguage HotelRoom "hotel room")

(=>
  (instance ?ROOM HotelRoom)
  (exists (?BLDG)
    (and
      (instance ?BLDG HotelBuilding)
      (part ?ROOM ?BLDG))))
      
(subclass HotelVilla Building)
(subclass HotelVilla HotelUnit)
(documentation HotelVilla EnglishLanguage "&%HotelVilla refers to a &%Building that
is completely detached from the main &%HotelBuilding")
(termFormat EnglishLanguage HotelVilla "hotel villa")

(subclass RoomInventory Collection)
(documentation RoomInventory EnglishLanguage "&%RoomInventory is the &%Collection of
&%HotelUnit  that a &%TravelerAccommodation has in one &%PropertyFn")
(termFormat EnglishLanguage RoomInventory "room inventory")

(=>
  (instance ?X RoomInventory)
  (memberType ?X HotelUnit))
  
(=>
  (and
    (element ?X (PropertyFn ?HOTEL))
    (instance ?X RoomInventory))
  (forall (?Y)
    (=>
      (member ?Y ?X)
      (element ?Y (PropertyFn ?HOTEL)))))
  
;; ---------------------------------------------------------------------------------
;; Hotel Room Relations
;; ---------------------------------------------------------------------------------      

;; TO ROOM INVENTORY
;; ==================

;; (allRoomsPhysicalAmenity ?INV ?OBJ)
(instance allRoomsPhysicalAmenity BinaryPredicate)
(documentation allRoomsPhysicalAmenity EnglishLanguage "(&%allRoomsPhysicalAmenity
?INV ?OBJ) means that all rooms in &%RoomInventory ?INV have &%physicalAmenity ?OBJ")
(termFormat EnglishLanguage allRoomsPhysicalAmenity "physical amenity in all rooms")

(domain allRoomsPhysicalAmenity 1 RoomInventory)
(domainSubclass allRoomsPhysicalAmenity 2 Object)

(=>
  (allRoomsPhysicalAmenity ?INV ?OBJ)
  (forall (?X)
    (=>
      (memberType ?INV ?X)
      (physicalAmenity ?X ?OBJ))))

(instance someRoomsPhysicalAmenity BinaryPredicate)
(documentation someRoomsPhysicalAmenity EnglishLanguage "(&%someRoomsPhysicalAmenity
?INV ?OBJ) means that there are rooms in &%RoomInventory ?INV that have 
&%physicalAmenity ?OBJ")
(termFormat EnglishLanguage someRoomsPhysicalAmenity "physical amenity in some rooms")

(domain someRoomsPhysicalAmenity 1 RoomInventory)
(domainSubclass someRoomsPhysicalAmenity 2 Object)

(=>
  (someRoomsPhysicalAmenity ?INV ?OBJ)
  (exists (?X)
    (and
      (memberType ?INV ?X)
      (physicalAmenity ?X ?OBJ))))

(instance someRoomsServiceAmenity BinaryPredicate)
(documentation someRoomsServiceAmenity EnglishLangauge "(&%someRoomsServiceAmenity 
?INV ?SVC) means that there are rooms in &%RoomInventory ?INV that have 
&%serviceAmenity ?SVC")
(termFormat EnglishLanguage someRoomsServiceAmenity "service amenity in some rooms")

(domain someRoomsServiceAmenity 1 RoomInventory)
(domainSubclass someRoomsServiceAmenity 2 ServiceProcess)

(=>
  (someRoomsServiceAmenity ?INV ?SVC)
  (exists (?X)
    (and
      (memberType ?INV ?X)
      (serviceAmenity ?X ?SVC))))
      
(instance allRoomsServiceAmenity BinaryPredicate)
(documentation allRoomsServiceAmenity EnglishLangauge "(&%allRoomsServiceAmenity 
?INV ?SVC) means that all rooms in &%RoomInventory ?INV have &%serviceAmenity ?SVC")
(termFormat EnglishLanguage allRoomsServiceAmenity "service amenity in all rooms")

(domain allRoomsServiceAmenity 1 RoomInventory)
(domainSubclass allRoomsServiceAmenity 2 ServiceProcess)

(=>
  (allRoomsServiceAmenity ?INV ?OBJ)
  (forall (?X)
    (=>
      (memberType ?INV ?X)
      (serviceAmenity ?X ?OBJ))))

(instance allRoomsPolicy BinaryPredicate)
(documentation allRoomsPolicy EnglishLangauge "(&%allRoomsPolicy 
?INV ?POLICY) means that all rooms in &%RoomInventory ?INV have &%roomPolicy ?POLICY")
(termFormat EnglishLanguage allRoomsPolicy "room policy in all rooms")

(domain allRoomsPolicy 1 RoomInventory)
(domain allRoomsPolicy 2 Policy)

(=>
  (allRoomsPolicy ?INV ?POLICY)
  (forall (?X)
    (=>
      (memberType ?INV ?X)
      (roomPolicy ?X ?POLICY))))
      
(instance someRoomsPolicy BinaryPredicate)
(documentation someRoomsPolicy EnglishLangauge "(&%someRoomsPolicy 
?INV ?POLICY) means some rooms in &%RoomInventory ?INV have &%roomPolicy ?POLICY")
(termFormat EnglishLanguage someRoomsPolicy "room policy in all rooms")

(domain someRoomsPolicy 1 RoomInventory)
(domain someRoomsPolicy 2 Policy)

(=>
  (someRoomsPolicy ?INV ?POLICY)
  (exists (?X)
    (and
      (memberType ?INV ?X)
      (roomPolicy ?X ?POLICY))))
      

;; TO HOTEL UNIT
;; ==================
      
;; (physicalAmenity ?ROOM ?OBJ)
(instance physicalAmenity BinaryPredicate)
(documentation physicalAmenity EnglishLanguage "(&%physicalAmenity ?ROOM ?OBJ) means
that ?OBJ has been placed in ?ROOM for the user's comfort")
(termFormat EnglishLanguage physicalAmenity "amenity")

(domainSubclass physicalAmenity 1 HotelUnit)
(domainSubclass physicalAmenity 2 Object)

(=>
  (physicalAmenity ?ROOM ?OBJ)
  (forall (?R)
    (=>
      (instance ?R ?ROOM)
      (exists (?O)
        (and
          (instance ?R ?ROOM)
          (instance ?O ?OBJ)
          (located ?O ?R))))))

;; if a room has an amenity, the hotel confers the right to use or consume the 
;; amenity to the customer staying in the room          
(=>
  (and
    (guest ?CUST ?HOTEL)
    (stays ?CUST ?R)
    (element ?R (PropertyFn ?HOTEL))
    (instance ?R ?ROOM)
    (physicalAmenity ?ROOM ?OBJ))
  (exists (?O)
    (and
      (instance ?O ?OBJ)
      (located ?O ?R)
      (confersRight
        (exists (?PROC)
          (and
            (agent ?PROC ?CUST)
            (or
              (instrument ?PROC ?O)
              (patient ?PROC ?O)
              (resource ?PROC ?O)))) ?HOTEL ?CUST))))
          
;; (serviceAmenity ?ROOM ?PROC)
(instance serviceAmenity BinaryPredicate)
(documentation serviceAmenity EnglishLanguage "(&%serviceAmenity ?ROOM ?PROC) means that
?PROC or a subProcess of ?PROC is located in an instance of ?ROOM")
(termFormat EnglishLanguage serviceAmenity "service amenity")

(domainSubclass serviceAmenity 1 HotelUnit)
(domainSubclass serviceAmenity 2 ServiceProcess)

(=>
  (and
    (serviceAmenity ?ROOM ?PROC)
    (instance ?R ?ROOM)
    (element ?R (PropertyFn ?HOTEL)))
  (modalAttribute
    (exists (?X ?S ?SVC)
      (and
        (instance ?X ?ROOM)
        (agent ?S ?HOTEL)
        (instance ?S ?PROC)
        (or
          (equal ?S ?SVC)
          (subProcess ?SVC ?S))
        (located ?S ?X))) Possibility))

;; (roomPolicy ?ROOM ?POLICY)
(instance roomPolicy BinaryPredicate)
(documentation roomPolicy EnglishLanguage "(&%roomPolicy ?ROOM ?POLICY) means that
?POLICY is applied to the ?ROOM")
(termFormat EnglishLanguage roomPolicy "room policy")

(domainSubclass roomPolicy 1 HotelUnit)
(domain roomPolicy 2 Policy)

(=>
  (roomPolicy ?ROOM ?POLICY)
  (forall (?R)
    (=>
      (instance ?R ?ROOM)
      (policyLocationCoverage ?POLICY ?R))))

      
;; ---------------------------------------------------------------------------------
;; Beds
;; ---------------------------------------------------------------------------------

(subclass KingBed Bed)
(documentation KingBed EnglishLanguage "A &%KingBed is a type of &%Bed that is 1.9m
by 2.0m in size")
(termFormat EnglishLanguage KingBed "king-sized bed")

(=>
  (instance ?X KingBed)
  (and
    (width ?X (MeasureFn 1.9 Meter))
    (length ?X (MeasureFn 2.0 Meter))))

;; it's possible to fit 3 sleeping people in a king bed    
(=>
  (instance ?X KingBed)
  (modalAttribute
    (exists (?P1 ?P2 ?P3 ?TIME)
      (and
        (not (equal ?P1 ?P2))
        (not (equal ?P2 ?P3))
        (not (equal ?P1 ?P3))
        (attribute ?P1 Asleep)
        (attribute ?P2 Asleep)
        (attribute ?P3 Asleep)
        (instance ?P1 Human)
        (instance ?P2 Human)
        (instance ?P3 Human)
        (holdsDuring ?TIME
          (and
            (located ?P1 ?X)
            (located ?P2 ?X)
            (located ?P3 ?X))))) Possibility))
    
(subclass QueenBed Bed)
(documentation QueenBed EnglishLanguage "A &%QueenBed is a type of &%Bed that is 1.5m
by 2.0m in size")
(termFormat EnglishLanguage QueenBed "queen-sized bed")

(=>
  (instance ?X QueenBed)
  (and
    (width ?X (MeasureFn 1.5 Meter))
    (length ?X (MeasureFn 2.0 Meter))))

;; it's possible to fit 2 sleeping people in a queen bed    
(=>
  (instance ?X QueenBed)
  (modalAttribute
    (exists (?P1 ?P2)
      (and
        (not (equal ?P1 ?P2))
        (not (equal ?P2 ?P3))
        (attribute ?P1 Asleep)
        (attribute ?P2 Asleep)
        (instance ?P1 Human)
        (instance ?P2 Human)
        (holdsDuring ?TIME
          (and
            (located ?P1 ?X)
            (located ?P2 ?X))))) Possibility))    
    
(subclass DoubleBed Bed)
(documentation DoubleBed EnglishLanguage "A &%DoubleBed is a type of &%Bed that is 1.35m
by 2.0m in size")
(termFormat EnglishLanguage DoubleBed "full-sized bed")

(=>
  (instance ?X DoubleBed)
  (and
    (width ?X (MeasureFn 1.35 Meter))
    (length ?X (MeasureFn 2.0 Meter))))

;; it's possible to fit 2 sleeping people in a queen bed    
(=>
  (instance ?X DoubleBed)
  (modalAttribute
    (exists (?P1 ?P2)
      (and
        (not (equal ?P1 ?P2))
        (not (equal ?P2 ?P3))
        (attribute ?P1 Asleep)
        (attribute ?P2 Asleep)
        (instance ?P1 Human)
        (instance ?P2 Human)
        (holdsDuring ?TIME
          (and
            (located ?P1 ?X)
            (located ?P2 ?X))))) Possibility))    
       
(subclass SingleBed Bed)
(documentation SingleBed EnglishLanguage "A &%SingleBed is a type of &%Bed that is 1m
by 2.0m in size")
(termFormat EnglishLanguage SingleBed "twin-sized bed")

(=>
  (instance ?X SingleBed)
  (anda
    (width ?X (MeasureFn 1.0 Meter))
    (length ?X (MeasureFn 2.0 Meter))))

(subclass BunkBed Bed)
(documentation BunkBed EnglishLanguage "A &%BunkBed is a type of &%Bed has one bed 
directly above another")
(termFormat EnglishLanguage BunkBed "bunk bed")

(=>
  (instance ?X BunkBed)
  (exists (?BED1 ?BED2)
    (and
      (instance ?BED1 SingleBed)
      (instance ?BED2 SingleBed)
      (part ?BED1 ?X)
      (part ?BED2 ?X)
      (orientation ?BED1 ?BED2 Above))))

(subclass MurphyBed Bed)
(documentation MurphyBed EnglishLanguage "A &%MurphyBed is a type of &%Bed that can
be stored vertically inside a wall, closet or cabinet")
(termFormat EnglishLanguage MurphyBed "pull-down bed")

(=>
  (instance ?X MurphyBed)
  (exists (?STORAGE)
    (and
      (instance ?STORAGE Compartment)
      (meetsSpatially ?STORAGE ?X)
      (hasPurpose ?STORAGE
        (exists (?K)
          (and
            (instance ?K Keeping)
            (patient ?K ?X)
            (destination ?K ?STORAGE)
            (holdsDuring 
              (WhenFn ?K)
              (attribute ?X Vertical))))))))

(subclass RollawayBed Bed)
(documentation RollawayBed EnglishLanguage "A &%RollawayBed is a type of &%Bed that is
mounted on rollers so that it can be easily moved")
(termFormat EnglishLanguage RollawayBed "rollaway bed")

(=>
  (instance ?X RollawayBed)
  (exists (?WHEEL)
    (and
      (instance ?WHEEL Wheel)
      (part ?WHEEL ?X))))

(subclass SofaBed Bed)
(documentation SofaBed EnglishLanguage "A &%SofaBed is a &%Bed that can be kept inside
a compartment in a &%Sofa")
(termFormat EnglishLanguage SofaBed "sofa bed")

(=>
  (instance ?X SofaBed)
  (exists (?SOFA ?STORAGE)
    (and
      (instance ?STORAGE Compartment)
      (part ?STORAGE ?SOFA)
      (instance ?SOFA Sofa)
      (hasPurpose ?STORAGE
        (exists (?K)
          (and
            (instance ?K Keeping)
            (patient ?K ?X)
            (destination ?K ?STORAGE)))))))

(subclass Crib Bed)
(documentation Crib EnglishLanguage "A &%Crib is a &%Bed for babies")
(termFormat EnglishLanguage Crib "crib")

(=>
  (instance ?X Crib)
  (hasPurpose ?X
    (exists (?BABY)
      (and
        (instance ?BABY HumanBaby)
        (attribute ?BABY Asleep)
        (located ?BABY ?X)))))
        
;; if a GroupOfPeople has an adult and a baby in it, then a Crib is within the 
;; adult's scope of interest

(=>
  (and
    (instance ?GRP GroupOfPeople)
    (member ?ADULT ?GRP)
    (member ?BABY ?GRP)
    (instance ?BABY HumanBaby)
    (instance ?ADULT HumanAdult)
    (instance ?CRIB Crib))
  (inScopeOfInterest ?ADULT ?CRIB))

(subclass Hammock Bed)
(documentation Hammock EnglishLanguage "&%Hammock is a type of &%Bed made of rope or 
canvas and is suspended between two stationary objects")
(termFormat EnglishLanguage Hammock "hammock")

(=>
  (instance ?X Hammock)
  (and
    (material Fabric ?X)    
    (exists (?POLE1 ?POLE2 ?GROUND)
      (and
        (orientation ?POLE1 ?POLE2 Near)
        (connected ?POLE1 ?X)
        (connected ?POLE2 ?X)
        (instance ?GROUND LandArea)
        (located ?X ?GROUND)
        (orientation ?X ?GROUND Above)))))
        
(=>
  (instance ?X Hammock)
  (hasPurpose ?X 
    (exists (?PROC)
      (and
        (instance ?PROC LyingDown)
        (located ?PROC ?X)))))
      
  
(subclass Mattress Artifact)
(documentation Mattress EnglishLanguage "A &%Mattress is a &%component of a &%Bed 
that is a cushion to make it more comfortable")
(termFormat EnglishLanguage Mattress "mattress")

(=>
  (instance ?X Mattress)
  (exists (?BED)
    (and
      (instance ?BED Bed)
      (component ?X ?BED))))

(=>
  (instance ?X Mattress)
  (hasPurpose ?X
    (exists (?PERSON)
      (and
        (attribute ?PERSON Asleep)
        (orientation ?PERSON ?X On)))))
      
      
(subclass BedFrame Artifact)
(documentation BedFrame EnglishLanguage "A &%BedFram is a %&component of a &%Bed that
supports the mattress")
(termFormat EnglishLanguage BedFrame "bed frame")

(=>
  (and
    (instance ?X Bed)
    (component ?BEDFRAME ?X)
    (instance ?BEDFRAME BedFrame)
    (component ?MATTRESS ?X)
    (instance ?MATTRESS Mattress))
  (orientation ?MATTRESS ?BEDFRAME On))
      
(subclass BedAttribute RelationalAttribute)
(documentation BedAttribute EnglishLanguage "&%BedAttribute is the class of attributes
attached to the type of cushion a &%Bed has")
(termFormat EnglishLanguage BedAttribute "bed attribute")

(=>
  (and
    (attribute ?X ?ATTR)
    (instance ?ATTR BedAttribute))
  (instance ?X Bed))
  
(instance WaterBed BedAttribute)
(documentation WaterBed EnglishLanguage "&%WaterBed describes how the cushion of a &%Bed
is filled with water")
(termFormat EnglishLanguage WaterBed "water bed")

(=>
  (attribute ?X WaterBed)
  (exists (?MATTRESS ?WATER)
    (and
      (component ?MATTRESS ?X)
      (contains ?MATTRESS ?WATER)
      (instance ?WATER Water))))

(subclass BedLinen Artifact)
(documentation BedLinen EnglishLanguage "&%BedLinen is an &%Artifact made of &%Fabric
that is used to &%Covering a &%Bed")
(termFormat EnglishLanguage BedLinen "bed linen")

(=>
  (instance ?X BedLinen)
  (material Fabric ?X))

(=>
  (instance ?X BedLinen)
  (hasPurpose ?X
    (exists (?COVER ?BED)
      (and
        (instance ?COVER Covering)
        (patient ?COVER ?BED)
        (instance ?BED Bed)
        (instrument ?COVER ?X)))))
      
;; ---------------------------------------------------------------------------------
;; Views
;; ---------------------------------------------------------------------------------

(instance viewType BinaryPredicate)
(documentation viewType EnglishLanguage "(&%viewType ?REGION ?OBJ) means that a person
in ?REGION can see ?OBJ")
(termFormat EnglishLanguage viewType "view type")

(domain viewType 1 Object)
(domainSubclass viewType 2 Physical)

(=>
  (and
    (viewType ?ROOM ?OBJ)
    (instance ?ROOM Room)
    (orientation ?OBJ ?ROOM Outside))
  (modalAttribute
    (exists (?HUMAN ?SEE ?INST)
      (and
        (instance ?HUMAN Human)
        (located ?HUMAN ?ROOM)
        (instance ?SEE Seeing)
        (instance ?INST ?OBJ)
        (patient ?SEE ?INST)
        (agent ?SEE ?HUMAN)))))

;; different hotel room views:
;; garden view: (viewType HotelRoomA CultivatedLand) 
;; ocean view: (viewType HotelRoomA Ocean)
;; lake view: (viewType HotelRoomA Lake)
;; river view: (viewType HotelRoomA River)
;; mountain view: (viewType HotelRoomA Mountain)
;; bay view: (viewType HotelRoomA Bay)      
;; golf course view: (viewType HotelRoomA GolfCourse)     
;; beach view: (viewType HotelRoomA ShoreArea)
;; city view: (viewType HotelRoomA City)
;; marina view: (viewType HotelRoomA Harbor)
;; park view: (viewType HotelRoomA Park)
;; pool view: (viewType HotelRoomA SwimmingPool)

;; ---------------------------------------------------------------------------------
;; Rooms
;; ---------------------------------------------------------------------------------

(subclass Balcony StationaryArtifact)
(documentation Balcony EnglishLanguage "A &%Balcony is a platform projecting from the
wall of a building, surrounded by some type of railing")
(termFormat EnglishLanguage Balcony "balcony")

(=>
  (instance ?BALCONY Balcony)
  (exists (?WALL ?LANDAREA)
    (and
      (meetsSpatially ?WALL ?BALCONY)
      (instance ?LANDAREA LandArea)
      (located ?WALL ?LANDAREA)
      (orientation ?BALCONY ?LANDAREA Above))))
      
(subclass SittingArea Region)
(documentation SittingArea EnglishLanguage "&%SittingArea refers to a &%Region, either
&%Indoor (like a Living Room) or &%Outdoor (like a Garden sitting area) where people
normally sit and entertain guests")
(termFormat EnglishLanguage SittingArea "sitting area")

(=>
  (instance ?AREA SittingArea)
  (exists (?SEAT)
    (and
      (instance ?SEAT Seat)
      (located ?SEAT ?AREA))))

(instance AdjoiningRoom RelationalAttribute)
(documentation AdjoiningRoom EnglishLanguage "&%AdjoiningRoom describes a &%Room that
has another Room &%Adjacent to it, and a doorway existing on their common wall to
allow access from one room to another")
(termFormat EnglishLanguage AdjoiningRoom "adjoining room")

(=>
  (attribute ?X AdjoiningRoom)
  (instance ?X Room))
  
(=>
  (attribute ?X AdjoiningRoom)
  (exists (?ROOM ?WALL ?DOOR)
    (and
      (attribute ?ROOM AdjoiningRoom)
      (not (equal ?ROOM ?X))
      (orientation ?X ?ROOM Adjacent)
      (instance ?WALL Wall)
      (part ?WALL ?ROOM)
      (part ?WALL ?X)
      (instance ?DOOR Door)
      (part ?DOOR ?WALL))))

(instance BusinessExecutive BusinessPerson)
(documentation BusinessExecutive EnglishLanguage "&%BusinessExecutive refers to a person
responsible for the management of a business")
(termFormat EnglishLanguage BusinessExecutive "business executive")

(=>
  (attribute ?X BusinessExecutive)
  (exists (?BUSINESS ?MANAGE)
    (and
      (instance ?MANAGE Managing)
      (instance ?BUSINESS Organization)
      (patient ?MANAGE ?BUSINESS)
      (agent ?MANAGE ?X))))
      
(subclass HotelRoomAttribute RelationalAttribute)
(documentation HotelRoomAttribute EnglishLanguage "&%HotelRoomAttribute gives descriptions
about &%HotelUnit")
(termFormat EnglishLanguage HotelRoomAttribute "hotel room attribute")

(=>
  (and
    (attribute ?X ?Y)
    (instance ?Y HotelRoomAttribute))
  (instance ?X HotelUnit))

(instance StandardRoom HotelRoomAttribute)
(documentation StandardRoom EnglishLanguage "&%StandardRoom describes the most basic 
room type offered by the hotel.  It is mean to describe a room in relation to other
rooms in the same hotel as opposed to the same type of room in a different hotel")
(termFormat EnglishLanguage StandardRoom "standard room")
(successorAttributeClosure StandardRoom SuiteRoom)

(instance DeluxeRoom HotelRoomAttribute)
(documentation DeluxeRoom EnglishLanguage "&%DeluxeRoom describes a room that has 
better amenities, furnishing, size or location than a standard room")
(termFormat EnglishLanguage DeluxeRoom "deluxe room")
(successorAttribute StandardRoom DeluxeRoom)

(instance SuiteRoom HotelRoomAttribute)
(documentation SuiteRoom EnglishLanguage "&%SuiteRoom describes a room that has 
defined areas apart from the sleeping area.  Sometimes, &%SuiteRoom have more than one
&%Room within it")
(termFormat EnglishLanguage SuiteRoom "suite")
(successorAttribute DeluxeRoom SuiteRoom)

(=>
  (attribute ?X SuiteRoom)
  (exists (?AREA)
    (and
      (instance ?AREA SittingArea)
      (located ?AREA ?X))))

(instance ChildrenSuite HotelRoomAttribute)
(documentation ChildrenSuite EnglishLanguage "&%ChildrenSuite describes a room that
is meant for &%HumanChild to stay in")
(termFormat EnglishLanguage ChildrenSuite "children's suite")

(=>
  (attribute ?X ChildrenSuite)
  (attribute ?X ChildFriendlyAttribute))
  
(=>
  (attribute ?X ChildrenSuite)
  (hasPurpose ?X 
    (exists (?CHILD)
      (and
        (instance ?CHILD HumanChild)
        (stays ?CHILD ?X)))))        
        
(instance FemaleExecutiveRoom HotelRoomAttribute)
(documentation FemaleExecutiveRoom EnglishLanguage "&%FemaleExecutiveRoom describes a
room that has been designed for the female executive")
(termFormat EnglishLanguage FemaleExecutiveRoom "female executive room")

(=>
  (attribute ?X FemaleExecutiveRoom)
  (hasPurpose ?X
    (exists (?HUMAN)
      (and
        (instance ?HUMAN Human)
        (attribute ?HUMAN Female)
        (attribute ?HUMAN BusinessExecutive)
        (stays ?HUMAN ?X)))))

(instance DownAndInRoom HotelRoomAttribute)
(documentation DownAndInRoom EnglishLanguage "&%DownAndInRoom describes a &%HotelUnit
that has its entrance and exit inside the &%HotelBuilding")
(termFormat EnglishLanguage DownAndInRoom "down and in room")

(=>        
  (attribute ?X DownAndInRoom)
  (exists (?LOC ?INDOOR)
    (and
      (instance ?INDOOR Indoors)
      (instance ?LOC Region)
      (orientation ?LOC ?X Adjacent)
      (orientation ?LOC ?X Outside)
      (located ?LOC ?INDOOR))))

(instance DownAndOutRoom HotelRoomAttribute)
(documentation DownAndOutRoom EnglishLanguage "&%DownAndOutRoom describes a &%HotelUnit
that has its entrance and exit that lead &%Outdoors")
(termFormat EnglishLanguage DownAndOutRoom "down and out room")

(=>
  (attribute ?X DownAndOutRoom)
  (exists (?LOC ?OUTDOOR)
    (and
      (instance ?OUTDOOR Outdoors)
      (instance ?LOC Region)
      (orientation ?LOC ?X Adjacent)
      (orientation ?LOC ?X Outside)
      (located ?LOC ?OUTDOOR))))

(instance ThemeRoom HotelRoomAttribute)
(documentation ThemeRoom EnglishLanguage "&%ThemeRoom describes a &%HotelUnit that 
follows a certain style or theme of decor, for instance, a Disney-themed room would
have decor that represent creations from Disney")
(termFormat EnglishLanguage ThemeRoom "theme room")

(=>
  (attribute ?ROOM ThemeRoom)
  (exists (?DESIGN ?PROP)
    (and
      (instance ?DESIGN Designing)
      (result ?DESIGN ?PROP)
      (represents ?ROOM ?PROP))))

(instance TowerRoom HotelRoomAttribute)
(documentation TowerRoom EnglishLanguage "&%TowerRoom describes a &%HotelUnit that
is in the &%HighRise building of a (&%PropertyFn ?HOTEL)")
(termFormat EnglishLanguage TowerRoom "tower room")

(=>
  (attribute ?ROOM TowerRoom)
  (exists (?BLDG)
    (and
      (instance ?BLDG HighRise)
      (located ?ROOM ?BLDG))))
      
(subclass HotelLevelAttribute RelationalAttribute)
(documentation HotelLevelAttribute EnglishLanguage "&%HotelLevelAttribute are
attributes that describe certain &%BuildingLevels in a &%HotelBuilding")

(=>
  (and
    (attribute ?X ?Y)
    (instance ?Y HotelLevelAttribute))
  (and
    (instance ?X BuildingLevel)
    (exists (?BLDG)
      (and
        (instance ?BLDG HotelBuilding)
        (part ?X ?BLDG)))))

(instance ExecutiveLevel HotelLevelAttribute)
(documentation ExecutiveLevel EnglishLanguage "&%ExecutiveLevel refers to a &%BuildingLevel
in a &%HotelBuilding with &%HotelRooms that have been designed to accommodate the needs
of the &%BusinessExecutive")
(termFormat EnglishLanguage ExecutiveLevel "executive level")

(=>
  (attribute ?X ExecutiveLevel)
  (forall (?Y)
    (=>
      (and
        (instance ?Y HotelRoom)
        (located ?Y ?X))
      (hasPurpose ?Y
        (exists (?HUMAN)
          (and
            (attribute ?HUMAN BusinessExecutive)
            (instance ?HUMAN Human)
            (stays ?HUMAN ?Y)))))))
    
;; ---------------------------------------------------------------------------------
;; Bathroom Objects
;; ---------------------------------------------------------------------------------

(subclass Shower BathingDevice)
(documentation Shower EnglishLanguage "&%Shower refers to a plumbing fixture that
sprays water over you.")
(termFormat EnglishLanguage Shower "shower")

(=>
  (instance ?SHOWER Shower)
  (hasPurpose ?SHOWER
    (exists (?SPRAY)
      (and
        (instance ?SPRAY WaterMotion)
        (origin ?SPRAY ?SHOWER)))))

(=>
  (instance ?SHOWER Shower)
  (exists (?X ?FLOOR)
    (and
      (or
        (instance ?X Wall)
        (instance ?X Ceiling))
      (connected ?SHOWER ?X)
      (instance ?FLOOR Floor)
      (orientation ?SHOWER ?FLOOR Above))))

(subclass BathTub BathingDevice)
(subclass BathTub FluidContainer)
(documentation BathTub BathingDevice "&%BathTub refers to a &%BathingDevice that you
can fill with water to use to watch the body")
(termFormat EnglishLanguage BathTub "tub")

(=>
  (instance ?TUB BathTub)
  (hasPurpose ?TUB
    (exists (?WATER)
      (and
        (instance ?WATER Water)
        (contains ?TUB ?WATER)))))


;; ---------------------------------------------------------------------------------
;; General Concepts
;; ---------------------------------------------------------------------------------

(subclass GolfFacility SportsFacility)
(documentation GolfFacility EnglishLanguage "&%GolfFacility refers to the &%SportsFacility
where &%Golf or some subprocess of &%Golf can be played")
(termFormat EnglishLanguage GolfFacility "golf facility")

(=>
  (instance ?X GolfFacility)
  (hasPurpose ?X
    (exists (?GOLF)
      (and
        (or
          (instance ?GOLF Golf)
          (instance ?GOLF GolfManeuver))
        (located ?GOLF ?X)))))

(subclass GolfCourse SportsFacility)
(documentation GolfCourse EnglishLanguage "&%GolfCourse refers to the &%GolfFacility
where an entire &%Golf game and all its subprocesses is played")
(termFormat EnglishLanguage GolfCourse "golf course")

(=>
  (instance ?X GolfCourse)
  (hasPurpose ?X
    (exists (?GOLF)
      (and
        (instance ?GOLF Golf)
        (located ?GOLF ?X)))))

(=>
  (instance ?COURSE GolfCourse)
  (exists (?GREEN)
    (and
      (instance ?GREEN PuttingGreen)
      (part ?GREEN ?COURSE))))        

;; changing rule for (subclass GolfManeuver Maneuver)
;; because a GolfManeuver can exist without being part of a Golf Game, but the
;; inverse is not true (e.g. a driving range would just all be Golf Drives, without
;; having to put the ball in the hole
(=>
  (instance ?G Golf)
  (exists (?M)
    (and
      (instance ?M GolfManeuver)
      (subProcess ?M ?G))))
      
(subclass GolfDrive GolfManeuver)
(subclass GolfDrive GameShot)
(documentation GolfDrive EnglishLanguage "&%GolfDrive refers to an initial &%GolfManeuver
for a par-4 or par-5 hole where the golf ball is hit from a tee")
(termFormat EnglishLanguage GolfDrive "golf drive")

(subclass GolfPutt GolfManeuver)
(subclass GolfPutt GameShot)
(documentation GolfPutt EnglishLanguage "&%GolfPutt refers to a &%GolfManeuver that
involves hitting a ball with a golf club with the goal of placing it into a hole")
(termFormat EnglishLanguage GolfPutt "golf put")

(subclass GolfHole Hole)
(documentation GolfHole EnglishLanguage "&%GolfHole refers to a type of &%Hole in the 
size of a &%GolfBall located in a &%PuttingGreen")
(termFormat EnglishLanguage GolfHole "golf hole")

(=>
  (instance ?HOLE GolfHole)
  (exists (?CYLINDER ?CIRCLE)
    (and
      (instance ?CYLINDER Cylinder)
      (attribute ?HOLE ?CYLINDER)
      (top ?CIRCLE ?HOLE)
      (instance ?CIRCLE Circle)
      (diameter ?CIRCLE (MeasureFn 4.25 Inch)))))
        
(subclass DrivingRange GolfFacility)
(documentation DrivingRange EnglishLanguage "&%DrivingRange is a &%GolfFacility where 
people line up side-by-side performing &%GolfDrive for practice")
(termFormat EnglishLanguage DrivingRange "driving range")

(=>
  (instance ?D DrivingRange)
  (hasPurpose ?D
    (and
      (exists (?DRIVE)
        (and
          (instance ?DRIVE GolfDrive)
          (located ?DRIVE ?D)))
      (not
        (exists (?GOLF)
          (and
            (located ?GOLF ?D)
            (instance ?GOLF GolfManeuver)
            (not (instance ?GOLF GolfDrive))))))))

(subclass PuttingGreen GolfFacility)
(documentation PuttingGreen EnglishLanguage "&%PuttingGreen refers to a &%GolfFacility
that involves a short area of grass surrounding a hole where the object is to put the
ball in the hole")
(termFormat EnglishLanguage PuttingGreen "putting green")

(=>
  (instance ?P PuttingGreen)
  (hasPurpose ?D
    (and
      (exists (?PUT)
        (and
          (instance ?PUT GolfPutt)
          (located ?PUT ?P)))
      (not
        (exists (?GOLF)
          (and
            (located ?GOLF ?D)
            (instance ?GOLF GolfManeuver)
            (not (instance ?GOLF GolfPutt))))))))

(=>
  (instance ?P PuttingGreen)
  (exists (?HOLE)
    (and
      (instance ?HOLE GolfHole)
      (part ?HOLE ?P))))

(subclass MiniatureGolf PuttingGreen)
(documentation MiniatureGolf EnglishLanguage "&%MiniatureGolf is a type of &%PuttingGreen
used for a novelty type of &%Golf where &%GolfHoles have obstacles such as bridges, etc.")
(termFormat EnglishLanguage MiniatureGolf "miniature golf")

(=>
  (instance ?G MiniatureGolf)
  (hasPurpose ?G
    (exists (?REC)
      (and
        (instance ?REC RecreationOrExercise)
        (located ?REC ?G)))))
      
(subclass Tennis Sport)
(documentation Tennis EnglishLanguage "&%Tennis is a &%Sport played with rackets by 
two or four players who hit a ball back and forth over a net that divides the court")
(termFormat EnglishLanguage Tennis "tennis")

;; tennis has 2 contest participants, which can either be an individual or a group
;; of 2 people per side.  not going to define tennis deeper since it is not the 
;; intent of Hotel.kif.  
(=>
  (instance ?X Tennis)
  (exists (?T1 ?T2)
    (and
      (contestParticipant ?X ?T1)
      (contestParticipant ?X ?T2)
      (not (equal ?T1 ?T2))
      (or
        (instance ?T1 Human)
        (and
          (instance ?T1 GroupOfPeople)
          (memberCount ?T1 2)))
      (or
        (instance ?T2 Human)
        (and
          (instance ?T2 GroupOfPeople)
          (memberCount ?T2 2))))))
          
(subclass TennisCourt SportsFacility)
(documentation TennisCourt EnglishLanguage "&%TennisCourt is a type of &%SportsFacility
where the game &%Tennis is held")
(termFormat EnglishLanguage TennisCourt "tennis court")

(=>
  (instance ?COURT TennisCourt)
  (hasPurpose ?COURT
    (exists (?TENNIS)
      (and
        (instance ?TENNIS Tennis)
        (located ?TENNIS ?COURT)))))
     
(subclass FabricIron Device)
(documentation FabricIron EnglishLanguage "&%FabricIron is a type of &%Device that
has a flat metal base used to smooth cloth")
(termFormat EnglishLanguage FabricIron "iron")

(=>
  (instance ?IRON FabricIron)
  (exists (?BASE)
    (and
      (bottom ?BASE ?IRON)
      (instance ?BASE MetalProduct)
      (attribute ?BASE Flat))))

(subclass IroningBoard Device)
(documentation IroningBoard EnglishLanguage "&%IroningBoard is a type of &%Device 
consisting of a flat, padded board used as a surface for ironing")
(termFormat EnglishLanguage IroningBoard "ironing board")

(=>
  (instance ?BOARD IroningBoard)
  (hasPurpose ?BOARD
    (exists (?IRON ?FABRIC ?OBJ)
      (and
        (instance ?IRON Ironing)
        (patient ?IRON ?OBJ)
        (part ?FABRIC ?OBJ)
        (instance ?FABRIC Fabric)
        (holdsDuring 
          (WhenFn ?IRON)
          (orientation ?OBJ ?BOARD On))))))
      
(subclass Smoothing SurfaceChange)
(documentation Smoothing EnglishLanguage "&%Smoothing is a type of &%SurfaceChange
to make something &%Smooth")
(termFormat EnglishLanguage Smoothing "smoothing")

(=>
  (and
    (instance ?SMOOTH Smoothing)
    (patient ?SMOOTH ?OBJ))
  (exists (?PART)
    (and
      (superficialPart ?PART ?OBJ)
      (holdsDuring
        (EndFn (WhenFn ?SMOOTH))
        (attribute ?PART Smooth)))))
        
(subclass Ironing Smoothing)
(documentation Ironing EnglishLanguage "&%Ironing refers to a &%Smoothing process where
a heated &%Device is used to smooth something")
(termFormat EnglishLanguage Ironing "ironing")

(=>
  (and
    (instance ?I Ironing)
    (patient ?I ?OBJ))
  (exists (?HEAT ?IRON ?PART)
    (and
      (superficialPart ?PART ?OBJ)
      (instance ?HEAT Heating)
      (patient ?HEAT ?IRON)
      (patient ?I ?PART)
      (instrument ?I ?IRON))))

(=>
  (and
    (instance ?I Ironing)
    (patient ?I ?OBJ)
    (part ?FABRIC ?OBJ)
    (instance ?FABRIC Fabric))
  (exists (?IRON ?HEAT)
    (and
      (instance ?HEAT Heating)
      (patient ?HEAT ?IRON)
      (instance ?IRON FabricIron)
      (instrument ?I ?IRON))))

(subclass WhirlpoolTub FluidContainer)
(documentation WhirlpoolTub EnglishLanguage "&%WhirlpoolTub refers to a &%FluidContainer
used by &%Humans for relaxation with jets used to create water currents to massage the 
body")
(termFormat EnglishLanguage WhirlpoolTub "whirlpool tub")

(=>
  (instance ?TUB WhirlpoolTub)
  (exists (?VALVE)
    (and
      (instance ?VALVE PressureControlValve)
      (part ?VALVE ?TUB)
      (hasPurpose ?VALVE
        (exists (?WATER ?CREATION ?FR)
          (and
            (instance ?WATER Water)
            (located ?WATER ?TUB)
            (instance ?CREATION Creation)
            (instrument ?CREATION ?VALVE)
            (result ?CREATION (FlowFn ?FR))
            (located ?WATER ?FR)))))))

(subclass Kennel TrapOrCage)
(documentation Kennel EnglishLanguage "&%Kennel is a &%TrapOrCage where a &%DomesticAnimal
is &%Confining by its owner")
(termFormat EnglishLanguage Kennel "kennel")

(=>
  (instance ?KENNEL Kennel)
  (hasPurpose ?KENNEL
    (exists (?ANIMAL ?CONFINING)
      (and
        (instance ?ANIMAL DomesticAnimal)
        (instance ?CONFINING Confining)
        (patient ?CONFINING ?ANIMAL)
        (located ?CONFINING ?KENNEL)))))
        
(subclass DryingDevice Device)
(documentation DryingDevice EnglishLanguage "&%DryingDevice refers to any &%Device
used as an instrument in the &%Drying process")
(termFormat EnglishLanguage DryingDevice "drying device")

(=>
  (instance ?D DryingDevice)
  (hasPurpose ?D
    (exists (?DRYING)
      (and
        (instance ?DRYING Drying)
        (instrument ?DRYING ?D)))))

(subclass ClothesDryer DryingDevice)
        
(subclass HairDryer DryingDevice)
(subclass HairDryer ElectricDevice)
(documentation HairDryer EnglishLanguage "&%HairDryer is a type of &%DryingDevice
used specifically for &%Drying &%Hair")
(termFormat EnglishLanguage HairDryer "hair dryer")

(=>
  (instance ?HD HairDryer)
  (hasPurpose ?HD
    (exists (?HAIR ?DRYING)
      (and
        (instance ?HAIR Hair)
        (instance ?DRYING Drying)
        (patient ?DRYING ?HAIR)
        (instrument ?DRYING ?HD)))))

(subclass SelfServiceLaundry Room)
(documentation SelfServiceLaundry EnglishLanguage "&%SelfServiceLaundry is a &%Room 
where a collection of coin-operatend washing machines and dryers are available for 
customers")
(termFormat EnglishLanguage SelfServiceLaundry "self-service laundry")

(=>
  (instance ?ROOM SelfServiceLaundry)
  (exists (?WASHER ?DRYER)
    (and
      (instance ?WASHER Collection)
      (memberType ?WASHER ClothesWashingMachine)
      (located ?WASHER ?ROOM)
      (instance ?DRYER Collection)
      (memberType ?DRYER ClothesDryer)
      (located ?DRYER ?ROOM))))
      
(=>
  (instance ?ROOM SelfServiceLaundry)
  (attribute ?ROOM CommunalAttribute))
        
(subclass Microwave MajorAppliance)
(subclass Microwave ElectricDevice)
(documentation Microwave EnglishLanguage "&%Microwave is an &%ElectricDevice that heats
food by passing an electromagnetic wave through it")
(termFormat EnglishLanguage Microwave "microwave")

(=>
  (instance ?M Microwave)
  (hasPurpose ?M
    (exists (?FOOD ?HEATING)
      (and
        (instance ?FOOD PreparedFood)
        (instance ?HEATING Heating)
        (instrument ?HEATING ?M)
        (patient ?HEATING ?FOOD)))))
        
(=>
  (and
    (instance ?M Microwave)
    (attribute ?M DeviceOn))
  (exists (?PROC)
    (and
      (instance ?PROC RadiatingElectromagentic)
      (instrument ?PROC ?M))))
      
(subclass SmokeDetector Device)
(documentation SmokeDetector EnglishLanguage "&%SmokeDetector is a &%Device that is able
to &%Discovering the presence of &%Smoke")
(termFormat EnglishLanguage SmokeDetector "smoke detector")

(=>
  (instance ?D SmokeDetector)
  (hasPurpose ?D
    (exists (?DISCOVER ?SMOKE)
      (and
        (instance ?DISCOVER Discovering)
        (instrument ?DISCOVER ?D)
        (patient ?DISCOVER ?SMOKE)
        (instance ?SMOKE Smoke)))))

(subclass Sprinkler Device)
(documentation Sprinkler EnglishLanguage "&%Sprinkler is a type of &%Device that loosely
distributes a substance, either solid (e.g. Salt or herbs) or liquid (e.g. water sprinkler)")
(termFormat EnglishLanguage Sprinkler "sprinkler")

(subclass WaterSprinkler Sprinkler)
(documentation WaterSprinkler EnglishLanguage "&%WaterSprinkler is a type of &%Sprinkler 
that releases &%Water")
(termFormat EnglishLanguage WaterSprinkler "water sprinkler")

(=>
  (instance ?W WaterSprinkler)
  (hasPurpose ?W
    (exists (?WM)
      (and
        (instance ?WM WaterMotion)
        (origin ?WM ?W)))))

(subclass FireSprinklerSystem Collection)
(documentation FireSprinklerSystem EnglishLanguage "&%FireSprinklerSystem is a &%Collection
of &%Devices that allow water to be released when a &%Fire is detected")
(termFormat EnglishLanguage FireSprinklerSystem "sprinkler system")

(=>
  (instance ?X FireSprinklerSystem)
  (exists (?DETECT ?SPRINKLER)
    (and
      (instance ?DETECT SmokeDetector)
      (instance ?SPRINKLER WaterSprinkler)
      (member ?DETECT ?X)
      (member ?SPRINKLER ?X))))
      
(=>
  (instance ?X FireSprinklerSystem)
  (exists (?FIRE ?DISCOVER ?WM)
    (and
      (instance ?DISCOVER Discovering)
      (instance ?FIRE Fire)
      (instrument ?DISCOVER ?X)
      (patient ?DISCOVER ?FIRE)
      (instance ?WM WaterMotion)
      (origin ?WM ?X)
      (causes ?DISCOVER ?WM))))
      
(subclass IceMachine Machine)
(documentation IceMachine EnglishLanguage "&%IceMachine is a type of &%Machine that
produces &%Ice")
(termFormat EnglishLanguage IceMachine "ice machine")

(=>
  (instance ?IM IceMachine)
  (hasPurpose ?IM
    (exists (?PROC ?ICE)
      (and
        (instrument ?PROC ?IM)
        (result ?PROC ?ICE)
        (instance ?ICE Ice)))))
      
(subclass AlarmClock Clock)
(documentation AlarmClock EnglishLanguage "&%AlarmClock is a type of &%Clock that will
radiate sound when a certain time is set")
(termFormat EnglishLanguage AlarmClock "alarm clock")

(=>
  (instance ?AC AlarmClock)
  (hasPurpose ?AC
    (exists (?TIME ?M ?Q)
      (and
        (instance ?M Measuring)
        (agent ?M ?AC)
        (result ?M ?Q)
        (equal ?Q ?TIME)
        (holdsDuring
          (WhenFn ?M)
          (exists (?S)
            (and
              (instance ?S RadiatingSound)
              (agent ?S ?AC))))))))

(subclass AMFMAlarmClock AlarmClock)
(subclass AMFMAlarmClock RadioReceiver)
(documentation AMFMAlarmClock EnglishLanguage "&%AMFMAlarmClock is a type of &%AlarmClock
that is also a &%RadioReceiver, meaning it can get &%RadioBroadcast from &%RadioStation")
(termFormat EnglishLanguage AMFMAlarmClock "am / fm alarm clock")       
     
(subclass CoffeeMaker Device)
(documentation CoffeeMaker EnglishLanguage "&%CoffeeMaker is a &%Device that makes
&%Coffee")
(termFormat EnglishLanguage CoffeeMaker "coffee maker")

(=>
  (instance ?C CoffeeMaker)
  (hasPurpose ?C
    (exists (?COFFEE ?M)
      (and
        (instance ?M Making)
        (instrument ?M CoffeeMaker)
        (result ?M ?COFFEE)
        (instance ?COFFEE Coffee)))))

(instance Clean SubjectiveAssessmentAttribute)
(documentation Clean EnglishLanguage "&%Clean describes how something is free from 
dirt or impurities")
(termFormat EnglishLanguage Clean "clean")

(instance Dirty SubjectiveAssessmentAttribute)
(documentation Dirty EnglishLanguage "&%Dirty describes how something has been soiled
with dirt, dust or grime")
(termFormat EnglishLanguage Dirty "dirty")

(=>
  (attribute ?X Clean)
  (instance ?X Object))

(=>
  (atrribute ?X Dirty)
  (instance ?X Object))
  
(contraryAttribute Dirty Clean)

(subclass Whiteboard DataDisplayDevice)
(subclass Whiteboard DataStorageDevice)
(subclass Whiteboard DisplayArtifact)
(documentation Whiteboard EnglishLanguage "%&Whiteboard refers to flat surface where 
information can be encoded using erasable pens.  This baord is normally colored White")
(termFormat EnglishLanguage Whiteboard "whiteboard")

(=>
  (instance ?OBJ Whiteboard)
  (color ?OBJ White))
  
(=>
  (instance ?OBJ Whiteboard)
  (structure ?OBJ Flat))
  
(=>
  (instance ?OBJ Whiteboard)
  (hasPurpose ?OBJ
    (exists (?WRITE)
      (and
        (instance ?WRITE Writing)
        (destination ?WRITE ?OBJ)))))

(subclass Steam Water)
(documentation Steam EnglishLanguage "&%Steam refers to the &%Gas form of &%Water that
is a result of &%Boiling it and diffusing it into the air")
(termFormat EnglishLanguage Steam "steam")

(=>
  (instance ?STEAM Steam)
  (exists (?BOIL ?WATER)
    (and
      (instance ?BOIL Boiling)
      (instance ?WATER Water)
      (patient ?BOIL ?WATER)
      (result ?BOIL ?STEAM)
      (attribute ?STEAM Gas))))

;; change subclassing of HotWaterHeater from MajorAppliance to HeatingDevice
(subclass WaterHeater HeatingDevice)

(=>
  (instance ?X WaterHeater)
  (hasPurpose ?X
    (exists (?HEAT ?WATER)
      (and
        (instance ?HEAT Heating)
        (instance ?WATER Water)
        (patient ?HEAT ?WATER)
        (instrument ?HEAT ?X)))))

(subclass TemperatureAttribute SubjectiveAssessmentAttribute)
(documentation TemperatureAttribute EnglishLanguage "&%TemperatureAttribute is an
attribute that describes the temperature of a certain object")
(termFormat EnglishLanguage TemperatureAttribute "temperature attribute")

(=>
  (and
    (attribute ?X ?Y)
    (instance ?Y TemperatureAttribute)
    (instance ?X Object))
  (exists (?TEMP)
    (and
      (measure ?X ?TEMP)
      (instance ?TEMP TemperatureMeasure)
      (attribute ?TEMP ?Y))))
      
(instance ColdTemperature TemperatureAttribute)
(documentation ColdTemperature EnglishLanguage "&%ColdTemperature is a type of 
&%TemperatureAttribute that has a low or inadequate temperature")
(termFormat EnglishLanguage ColdTemperature "cold")
(successorAttributeClosure ColdTemperature HotTemperature)

(instance CoolTemperature TemperatureAttribute)
(documentation CoolTemperature EnglishLanguage "&%CoolTemperature describes how there
is some relief from heat but not very cold, is between cold and warm")
(termFormat EnglishLanguage CoolTemperature "cool")
(successorAttribute ColdTemperature CoolTemperature)

(instance WarmTemperature TemperatureAttribute)
(documentation WarmTemperature EnglishLanguage "&%WarmTemperature describes how there
is a comfortable or agreeable degree of heat")
(termFormat EnglishLanguage WarmTemperature "warm")
(successorAttribute CoolTemperature WarmTemperature)

(instance HotTemperature TemperatureAttribute)
(documentation HotTemperature EnglishLanguage "&%HotTemperature describes how something 
has a high temperature")
(termFormat EnglishLanguage HotTemperature "hot")
(successorAttribute WarmTemperature HotTemperature)

(=>
  (and
    (instance ?X ?CLASS)
    (instance ?Y ?CLASS)
    (attribute ?X ColdTemperature)
    (attribute ?Y HotTemperature))
  (exists (?TEMPX ?TEMPY)
    (and
      (measure ?X ?TEMPX)
      (instance ?TEMPX TemperatureMeasure)
      (measure ?Y ?TEMPY)
      (instance ?TEMPY TemperatureMeasure)
      (greaterThan ?TEMPY ?TEMPX))))

(instance Multilingual RelationalAttribute)
(documentation Multilingual EnglishLanguage "&%Multilingual describes a person who is
able to speak more than one language fluently")
(termFormat EnglishLanguage Multilingual "multilingual")

(=>
  (attribute ?X Multilingual)
  (instance ?X Human))

(=>
  (and
    (attribute ?X Multilingual)
    (instance ?SPEAK Speaking)
    (agent ?SPEAK ?X))
  (modalAttribute
    (exists (?LANG1 ?LANG2)
      (and
        (instance ?LANG1 SpokenLanguage)
        (instance ?LANG2 SpokenLanguage)
        (not (equal ?LANG1 ?LANG2))
        (or
          (patient ?SPEAK ?LANG1)
          (patient ?SPEAK ?LANG2)))) Possibility))

;; additional rule for Internet

(=>
  (and
    (engineeringSubcomponent ?DEVICE1 Internet)
    (engineeringSubcomponent ?DEVICE2 Internet)
    (not (equal ?DEVICE1 ?DEVICE2)))
  (hasPurpose Internet
    (exists (?COMM)
      (and
        (instance ?COMM Communication)
        (agent ?COMM ?DEVICE1)
        (destination ?COMM ?DEVICE2)
        (instrument ?COMM Internet)))))
          
(subclass InternetAccessPoint Device)
(documentation InternetAccessPoint EnglishLanguage "&%InternetAccessPoint refers to 
a &%Device that allows another &%Device to access and use the &%Internet")
(termFormat EnglishLanguage InternetAccessPoint "internet access point")

(=>
  (and
    (instance ?AP InternetAccessPoint)
    (instance ?DEVICE Device))
  (holdsDuring
    (WhenFn (connectedEngineeringComponents ?DEVICE ?AP))
    (engineeringSubcomponent ?DEVICE Internet)))

(subclass Modem InternetAccessPoint)
(documentation Modem EnglishLanguage "&%Modem is a device used by computers to
connect computers to the internet using a telephone line")
(termFormat EnglishLanguage Modem "modem")

(=>
  (instance ?X Modem)
  (hasPurpose ?X
    (exists (?ISP ?CONN)
      (and
        (instance ?ISP InternetServiceProvider)
        (connectsEngineeringSubcomponent ?CONN ?X ?ISP)
        (instance ?CONN TelephoneLine)))))
    
(subclass InternetConnection EngineeringConnection)
(documentation InternetConnection EnglishLanguage "&%InternetConnection refers to 
the medium or channel by which a device is &%connected to an &%InternetAccessPoint")
(termFormat EnglishLanguage InternetConnection "internet connection")

(=>
  (and
    (connectsEngineeringComponents ?CONN ?DEVICE ?AP)
    (instance ?AP InternetAccessPoint))
  (instance ?CONN InternetConnection))
  
(subclass Cable EngineeringConnection)
(documentation Cable EnglishLanguage "&%Cable refers to an &%EngineeringConnection 
made of &%WireLine")
(termFormat EnglishLanguage Cable "cable")

(=>
  (instance ?C Cable)
  (exists (?WIRE)
    (and
      (instance ?WIRE WireLine)
      (part ?WIRE ?C))))
      
(subclass WiredInternetConnection InternetConnection)
(documentation WiredInternetConnection EnglishLanguage "&%WiredInternetConnection is 
an &%InternetConnection that uses &%Cable to connect two devices together")
(termFormat EnglishLanguage WiredInternetConection "internet")

(=>
  (instance ?CONN WiredInternetConnection)
  (exists (?CABLE)
    (and
      (part ?CABLE ?CONN)
      (instance ?CABLE Cable))))
      
(subclass WirelessInternetConnection InternetConnection)
(documentation WirelessInternetConnection EnglishLanguage "&%WirelessInternetConnection
is an &%InternetConnection that does not use cables to connect to the 
&%InternetAccessPoint")
(termFormat WirelessInternetConnection InternetConnection)

(=>
  (instance ?CONN WirelessInternetConnection)
  (not 
    (exists (?CABLE)
      (and
        (part ?CABLE ?CONN)
        (instance ?CABLE Cable)))))
        
;; will delay defining this as it is not the intent of hotel.kif        
(subclass Racquetball Sport)
(documentation Racquetball EnglishLanguage "&%Racquetball is a type of &%Sport where
a ball is hit with short-handled rackets towards a wall")
(termFormat EnglishLangauge Racquetball "racquetball")

(subclass Casino StationaryArtifact)
(documentation Casino EnglishLanguage "&%Casino is a type of &%StationaryArtifact that
has the purpose of housing gambling activities")

(=>
  (instance ?X Casino)
  (hasPurpose ?X
    (exists (?GAME ?BET)
      (and
        (instance ?GAME Game)
        (located ?GAME ?X)
        (instance ?BET Betting)
        (subProcess ?BET ?GAME)))))

;; naics.kif: CasinoHotels

(=>
  (and
    (attribute ?X TravelerAccommodation)
    (element ?CASINO (PropertyFn ?X))
    (instance ?CASINO Casino))
  (attribute ?X CasinoHotels))

;; naics.kif: GamblingIndustries

(=>
  (attribute ?X GamblingIndustries)
  (hasPurpose ?X
    (exists (?GAME ?BET)
      (and
        (instance ?GAME Game)
        (agent ?GAME ?X)
        (instance ?BET Betting)
        (destination ?BET ?X)
        (subProcess ?BET ?GAME)))))
        
(instance DutyFree NormativeAttribute)
(documentation DutyFree EnglishLanguage "&%DutyFree describes how &%DutyTax is not
charged for an imported product")
(termFormat EnglishLanguage DutyFree "duty free")        
        
(=>
  (and
    (attribute ?X DutyFree)
    (instance ?X Product))
  (not 
    (exists (?DUTY)
      (and
        (instance ?DUTY DutyTax)
        (patient ?DUTY ?X)))))

(=>
  (and
    (attribute ?X DutyFree)
    (instance ?X Store))
  (forall (?OBJ)
    (=>
      (and
        (instance ?SELL Selling)
        (patient ?SELL ?OBJ)
        (located ?SELL ?X)
        (instance ?OBJ Product))
      (attribute ?OBJ DutyFree))))  

(subclass SnowSki TransportationDevice)
(documentation SnowSki EnglishLanguage "&%SnowSki is a type of &%TransportationDevice made
of narrow metal, wood or plastic used to glide through snow")
(termFormat EnglishLanguage Ski "ski")

(=>
  (instance ?SKI SnowSki)
  (exists (?MAT)
    (and
      (material ?SKI ?MAT)
      (or
        (instance ?MAT Metal)
        (instance ?MAT Wood)
        (instance ?MAT Plastic)))))

(=>
  (instance ?SKI SnowSki)
  (hasPurpose ?SKI
    (exists (?GLIDE ?SNOW ?ICE)
      (and
        (instance ?SNOW Snowing)
        (result ?SNOW ?ICE)
        (instance ?GLIDE Transportation)
        (instrument ?GLIDE ?SKI)
        (located ?GLIDE ?ICE)))))
        
        
(subclass Skiing Sport)
(documentation Skiing EnglishLanguage "&%Skiing refers to a &%Sport where a person
uses skis to glide through snow")
(termFormat EnglishLanguage Skiing "skiing")

(=>
  (instance ?SKI Skiing)
  (exists (?SKIS ?PROC)
    (and
      (instance ?PROC Transportation)
      (subProcess ?PROC ?SKI)
      (instrument ?PROC ?SKIS)
      (instance ?SKIS SnowSki))))

(subclass CrossCountrySkiing Skiing)
(documentation CrossCountrySkiing EnglishLanguage "&%CrossCountrySkiing refers to a
type of &%Skiing that does not occur on a slope")
(termFormat EnglishLanguage CrossCountrySkiing "cross country skiing")

(=>
  (instance ?SKI CrossCountrySkiing)
  (not 
    (exists (?SLOPE)
      (and
        (instance ?SLOPE SlopeArea)
        (located ?SKI ?SLOPE)))))
      
(subclass SkiingFacility SportsFacility)
(documentation SkiingFacility EnglishLanguage "&%SkiingFacility refers to a 
&%SportsFacility where &%Skiing takes place")
(termFormat EnglishLanguage SkiingFacility "skiing facility")

(=>
  (instance ?FACILITY SkiingFacility)
  (exists (?SLOPE ?SKIING)
    (and
      (instance ?SLOPE SlopeArea)
      (part ?SLOPE ?FACILITY)
      (instance ?SKIING Skiing)
      (located ?SKIING ?SLOPE))))


(subclass RecreationalVehicle Vehicle)
(subclass RecreationalVehicle MobileResidence)
(documentation RecreationalVehicle EnglishLanguage "A &%RecreationalVehicle is a type
of motorized &%Vehicle that is used for camping or can serve as a &%Residence that is
mobile")
(termFormat EnglishLanguage RecreationalVehicle "rv")

(=>
  (instance ?RV RecreationalVehicle)
  (modalAttribute
    (exists (?BED ?DINING ?KITCHEN)
      (and
        (instance ?BED Bed)
        (instance ?DINING DiningArea)
        (instance ?KITCHEN KitchenArea)
        (located ?BED ?RV)
        (located ?DINING ?RV)
        (located ?KITCHEN ?RV))) Likely))
        
(subclass Bowling Sport)
(documentation Bowling EnglishLanguage "&%Bowling refers to a %&Sport with the main 
goal of knocking down bowling pins using a &%BowlingBall")
(termFormat EnglishLanguage Bowling "bowling")

(=>
  (instance ?B Bowling)
  (exists (?BALL ?TRANS ?LANE)
    (and
      (instance ?TRANS Translocation)
      (instance ?BALL BowlingBall)
      (patient ?TRANS ?BALL)
      (instance ?LANE BowlingLane)
      (path ?TRANS ?LANE)
      (subProcess ?TRANS ?B))))
      

(subclass BowlingBall Ball)
(documentation BowlingBall EnglishLanguage "&%BowlingBall refers to a type of &%Ball
used in &%Bowling.  It normally has 3 &%Hole where somebody would put his fingers to
hold it")
(termFormat EnglishLanguage BowlingBall "bowling ball")

(=>
  (instance ?B BowlingBall)
  (exists (?HOLES)
    (and
      (instance ?HOLES Collection)
      (memberType ?HOLES Holes)
      (memberCount ?HOLES 3)
      (located ?HOLES ?B)
      (hasPurpose ?HOLES
        (exists (?FINGER)
          (and
            (member ?FINGER ?HOLES)
            (instance ?FINGER Finger)
            (partiallyFills ?FINGER ?HOLE)))))))
            
(subclass BowlingLane StationaryArtifact)
(subclass BowlingLane LandTransitway)
(documentation BowlingLane EnglishLanguage "&%BowlingLane is a &%StationaryArtifact
that acts as a &%Transitway for a &%BowlingBall to knock down pins")
(termFormat EnglishLanguage BowlingLane "bowling lane")

(=>
  (instance ?BL BowlingLane)
  (hasPurpose ?BL
    (exists (?TR ?BALL)
      (and
        (instance ?TR Translocation)
        (instance ?BALL BowlingBall)
        (patient ?TR ?BALL)
        (path ?TR ?BL)))))
        
(subclass BowlingFacility SportsFacility)
(documentation BowlingFacility EnglishLanguage "&%BowlingFacility refers to the
&%SportsFacility where &%Bowling is played.  It normally consists of a collection 
of &%BowlingLanes")
(termFormat EnglishLanguage BowlingFacility "bowling facility")

(=>
  (instance ?BF BowlingFacility)
  (exists (?BL)
    (and
      (instance ?BL Collection)
      (memberType ?BL BowlingLane)
      (located ?BL ?BF))))

(=>
  (instance ?BF BowlingFacility)
  (hasPurpose ?BF
    (exists (?B)
      (and
        (instance ?B Bowling)
        (located ?B ?BF)))))

(subclass ElectronicLock Lock)
(documentation ElectronicLock EnglishLanguage "&%ElectronicLock is a type of &%Lock
that depends on some &%ElectronicSignalling process to open")
(termFormat EnglishLanguage ElectronicLock "electronic lock")

(=>
  (instance ?LOCK ElectronicLock)
  (hasPurpose ?LOCK
    (exists (?ES ?PROC)
      (and
        (instance ?ES ElectronicSignalling)
        (destination ?ES ?LOCK)
        (instance ?PROC Opening)
        (instrument ?PROC ?LOCK)
        (before (WhenFn ?ES) (WhenFn ?PROC))))))
        
(subclass RunningTrack StationaryArtifact)
(subclass RunningTrack LandTransitway)
(documentation RunningTrack EnglishLanguage "&%RunningTrack is a &%StationaryArtifact
which serves as a path for people running")
(termFormat EnglishLanguage RunningTrack "running track")

(=>
  (instance ?TRACK RunningTrack)
  (hasPurpose ?TRACK
    (exists (?RUN ?HUMAN)
      (and
        (instance ?HUMAN Human)
        (instance ?RUN Running)
        (agent ?RUN ?HUMAN)
        (path ?RUN ?TRACK)))))

(instance Deaf SensoryDisability)
(documentation Deaf EnglishLanguage "&%Deaf describes an animal
that is unable to hear")
(termFormat EnglishLanguage Deaf "deaf")

(=>
  (attribute ?X Deaf)
  (not
    (capability Hearing agent ?X)))
        
(subclass KnockLight Device)
(documentation KnockLight EnglishLanguage "&%KnockLight is a type of &%Device that
flashes light when a door knock is made. It is used by the hearing impaired")
(termFormat EnglishLanguage KnockLight "knock light")

(=>
  (and
    (instance ?KL KnockLight)
    (instance ?ROOM Room)
    (located ?KL ?ROOM)
    (instance ?DOOR Door)
    (part ?DOOR ?ROOM))
  (hasPurpose ?KL
    (exists (?SOUND ?LIGHT ?IMPACT)
      (and
        (instance ?IMPACT Impacting)
        (patient ?IMPACT ?DOOR)
        (causes ?IMPACT ?SOUND)
        (instance ?SOUND RadiatingSound)
        (agent ?SOUND ?DOOR)
        (causes ?SOUND ?LIGHT)
        (instance ?LIGHT RadiatingLight)
        (agent ?LIGHT ?KL)))))

;; A knocklight allows a deaf person to know when somebody is knocking
(=>
  (and
    (instance ?KL KnockLight)
    (attribute ?X Deaf)
    (located ?KL ?LOC)
    (located ?X ?LOC)
    (instance ?DOOR Door)
    (part ?DOOR ?LOC))
  (hasPurposeForAgent ?KL
    (knows
      (exists (?KNOCK)
        (and
          (instance ?KNOCK Impacting)
          (patient ?KNOCK ?DOOR)))) ?X))


;; VideoRecording
               
(=>
  (instance ?VIDEO VideoRecording)
  (modalAttribute
    (exists (?AUDIO)
      (and
        (instance ?AUDIO AudioRecording)
        (part ?AUDIO ?VIDEO))) Possibility))
        

(subclass MediaSystem Collection)
(documentation MediaSystem EnglishLanguage "&%MediaSystem is a &%Collection of 
components that enable the &%RadiatingSound of &%AudioRecording and &%RadiatingLight 
of &%VideoRecording")
(termFormat EnglishLanguage MediaSystem "media system")

(=>
  (instance ?PLAYER MediaSystem)
  (hasPurpose ?PLAYER
    (or
      (exists (?VIDEO ?RL)
        (and
          (instance ?VIDEO VideoRecording)
          (instance ?RL RadiatingLight)
          (patient ?RL ?VIDEO)
          (instrument ?RL ?PLAYER)))
      (exists (?AUDIO ?RS)
        (and
          (instance ?AUDIO AudioRecording)
          (instance ?RS RadiatingSound)
          (patient ?RS ?AUDIO)
          (instrument ?RS ?PLAYER))))))
        
(subclass AudioCDSystem MediaSystem)
(documentation AudioCDSystem EnglishLanguage "&%AudioCDSystem is a type of &%MediaSystem that
plays &%AudioRecording")
(termFormat EnglishLanguage AudioCDSystem "cd player")

(=>
  (instance ?PLAYER AudioCDSystem)
  (hasPurpose ?PLAYER
    (exists (?DISC ?AUDIO ?RS ?DIGITAL ?PROC)
      (and
        (instrument ?PROC ?PLAYER)
        (patient ?PROC ?DISC)
        (instance ?DISC CompactDisc)
        (instance ?AUDIO AudioRecording)
        (represents ?DIGITAL ?AUDIO)
        (part ?DIGITAL ?DISC)
        (instance ?RS RadiatingSound)
        (subProcess ?RS ?PROC)
        (instrument ?RS ?PLAYER)
        (patient ?RS ?DISC)))))
                
(subclass DVDSystem MediaSystem)
(documentation DVDSystem EnglishLanguage "&%DVDSystem is a type of &%MediaSystem
that is able to play the contents of &%VideoRecording and &%AudioRecording stored
in a &%DVD")
(termFormat EnglishLanguage DVDSystem "dvd player")

(=>
  (instance ?X DVDSystem)
  (hasPurpose ?X
    (exists (?DVD ?PROC)
      (and
        (instance ?DVD DVD)
        (instrument ?PROC ?X)
        (patient ?PROC ?DVD)
        (or
          (exists (?VIDEO ?DVIDEO ?RL)
            (and
              (instance ?VIDEO VideoRecording)
              (represents ?DVIDEO ?VIDEO)
              (part ?DVIDEO ?DVD)
              (instance ?RL RadiatingLight)
              (subProcess ?RL ?PROC)
              (instrument ?RL ?X)
              (patient ?RL ?VIDEO)))
          (exists (?AUDIO ?DAUDIO ?RS)
            (and        
              (instance ?AUDIO AudioRecording)
              (represents ?DAUDIO ?AUDIO)
              (part ?DAUDIO ?DVD)
              (instance ?RS RadiatingSound)
              (subProcess ?RS ?PROC)
              (instrument ?RS ?X)
              (patient ?RL ?AUDIO))))))))

(subclass VCRSystem MediaSystem)
(documentation VCRSystem EnglishLanguage "&%VCRSystem is a type of &%MediaSystem that
can play &%AudioRecording and &%VideoRecording that is stored in a &%VHS")
(termFormat EnglishLanguage VCRSystem "vcr system")

(=>
  (instance ?VCR VCRSystem)
  (hasPurpose ?VCR
    (exists (?VHS ?PROC ?VIDEO ?AVIDEO ?RL ?AUDIO ?AAUDIO ?RS)
      (and
        (instance ?VHS VHSCassette)
        (instrument ?PROC ?VCR)
        (patient ?PROC ?VHS)
        (instance ?VIDEO VideoRecording)
        (represents ?AVIDEO ?VIDEO)
        (part ?VIDEO ?VHS)
        (instance ?AUDIO AudioRecording)
        (represents ?AAUDIO ?AUDIO)
        (part ?AAUDIO ?AVIDEO)
        (part ?AUDIO ?VHS)
        (instance ?RL RadiatingLight)
        (patient ?RL ?VIDEO)
        (subProcess ?RL ?PROC)
        (instance ?RS RadiatingSound)
        (patient ?RS ?AUDIO)
        (subProcess ?RS ?PROC)))))
        
(subclass PrayerMat Rug)
(documentation PrayerMat EnglishLanguage "&%PrayerMat is a type of &%Rug which is used
in &%Praying")
(termFormat EnglishLanguage PrayerMat "prayer mat")

(=>
  (instance ?MAT PrayerMat)
  (hasPurpose ?MAT
    (exists (?PRAY ?PERSON)
      (and
        (instance ?PRAY Praying)
        (agent ?PRAY ?PERSON)
        (instance ?PERSON Human)
        (holdsDuring (WhenFn ?PRAY)
          (orientation ?PERSON ?MAT On))))))

(subclass VideoGame Game)
(documentation VideoGame EnglishLanguage "&%VideoGame is a &%Game in &%VideoRecording
form")
(termFormat EnglishLanguage VideoGame "video game")

(=>
  (instance ?GAME VideoGame)
  (exists (?VIDEO)
    (and
      (instance ?VIDEO VideoRecording)
      (represents ?VIDEO ?GAME))))
  
(subclass VideoGamePlayer MediaSystem)
(documentation VideoGamePlayer EnglishLanguage "&%VideoGamePlayer is a &%MediaSystem
that enables the playing of a &%VideoGame")
(termFormat EnglishLanguage VideoGamePlayer "video game player")

(=>
  (instance ?X VideoGamePlayer)
  (hasPurpose ?X
    (exists (?GAME ?RL ?MOVE ?CONTROLLER ?PLAYER)
      (and
        (instance ?GAME VideoGame)
        (instrument ?GAME ?X)
        (agent ?GAME ?PLAYER)
        (instance ?MOVE Maneuver)
        (instrument ?MOVE ?CONTROLLER)
        (agent ?MOVE ?PLAYER)
        (subProcess ?MOVE ?GAME)
        (part ?CONTROLLER ?X)
        (instance ?RL RadiatingLight)
        (agent ?RL ?X)
        (patient ?RL ?GAME)))))
          
          
(subclass BabyMonitoringSystem RadioSystem)
(documentation BabyMonitoringSystem EnglishLanguage "&%BabyMonitoringSystem refers to
the radio system that &%Broadcasting at 49Mhz, consisting of a transmitter and receiver,
where the transmitter is kept where the baby is kept, and the receiver is kept with
the person looking after the baby to be able to hear sounds and monitor the baby")
(termFormat EnglishLanguage BabyMonitoringSystem "baby monitor")

(=>
  (instance ?X BabyMonitoringSystem)
  (exists (?TX ?RX)
    (and
      (instance ?RX RadioReceiver)
      (instance ?TX Device)
      (engineeringSubcomponent ?RX ?X)
      (engineeringSubcomponent ?TX ?X)
      (hasPurpose ?X
        (exists (?BABY ?CARER ?SOUND ?LOC1 ?LOC2 ?PROC ?RADIO)
          (and
            (instance ?BABY HumanBaby)
            (instance ?CARER Human)
            (located ?BABY ?LOC1)
            (located ?CARER ?LOC2)
            (not (equal ?LOC1 ?LOC2))
            (instance ?PROC Maintaining)
            (patient ?PROC ?BABY)
            (agent ?PROC ?CARER)
            (located ?TX ?LOC1)
            (located ?RX ?LOC2)
            (instance ?SOUND RadiatingSound)
            (located ?SOUND ?LOC1)
            (instance ?RADIO RadioEmission)
            (patient ?RADIO ?SOUND)
            (destination ?RADIO ?RX)
            (agent ?RADIO ?TX)))))))
            
(subclass RemoteControl Controller)
(documentation RemoteControl EnglishLanguage "&%RemoteControl is &%Controller that does some
&%ElectronicSignalling to communicate and control another &%Device")
(termFormat EnglishLanguage RemoteControl "remote control")

(=>
  (instance ?X RemoteControl)
  (hasPurpose ?X
    (exists (?SIGNAL ?DEVICE)
      (and
        (instance ?SIGNAL ElectronicSignalling)
        (agent ?SIGNAL ?X)
        (destination ?SIGNAL ?DEVICE)
        (instance ?DEVICE Device)
        (not (equal ?X ?DEVICE))))))
        
(subclass TVRemoteControl RemoteControl)
(documentation TVRemoteControl EnglishLanguage "&%TVRemoteControl is a type of &%RemoteControl
that signals to a &%TelevisionReceiver")
(termFormat EnglishLanguage TVRemoteControl "tv remote")

(=>
  (instance ?X TVRemoteControl)
  (hasPurpose ?X
    (exists (?SIGNAL ?DEVICE)
      (and
        (instance ?SIGNAL ElectronicSignalling)
        (agent ?SIGNAL ?X)
        (destination ?SIGNAL ?DEVICE)
        (instance ?DEVICE TelevisionReceiver)))))

(subclass ElectricalOutlet Device)
(documentation ElectricalOutlet EnglishLanguage "&%ElectricalOutlet refers to a &%Device
that is used to connect a plug to a power source so that &%Electricity can flow from the 
source to an &%ElectricDevice")
(termFormat EnglishLanguage ElectricalOutlet "electrical outlet")

(=>
  (instance ?X ElectricalOutlet)
  (exists (?HOLE)
    (and
      (instance ?HOLE Collection)
      (memberType ?HOLE Hole)
      (part ?HOLE ?X))))
      
(=>
  (instance ?X ElectricalOutlet)
  (hasPurpose ?X
    (exists (?POWER ?WIRE)
      (and
        (instance ?POWER PowerSource)
        (instance ?WIRE Collection)
        (memberType ?WIRE WireLine)
        (connectsEngineeringComponents ?WIRE ?X ?POWER)))))

(subclass ElectricalPlug Plug)
(documentation ElectricalPlug EnglishLanguage "&%ElectricalPlug is a type of &%Plug 
made of metal that is normally used to conduct electricity from an &%ElectricalOutlet
to an &%ElectricalDevice")
(termFormat EnglishLanguage ElectricalPlug "electrical plug")

(=>
  (instance ?X ElectricalPlug)
  (material Metal ?X))
  
(=>
  (instance ?X ElectricalPlug)
  (hasPurpose ?X
    (exists (?OUTLET)
      (and
        (instance ?OUTLET ElectricalOutlet)
        (completelyFills ?X ?OUTLET)))))
        
(=>
  (and
    (instance ?PLUG ElectricalPlug)
    (instance ?DEVICE ElectricalDevice)
    (instance ?OUTLET ElectricalOutlet)
    (connectedEngineeringComponents ?DEVICE ?PLUG)
    (completelyFills ?PLUG ?OUTLET)
    (instance ?POWER PowerSource)
    (connectedEngineeringComponents ?POWER ?OUTLET))
  (exists (?RE)
    (and
      (instance ?RE RadiatingElectromagnetic)
      (origin ?RE ?POWER)
      (destination ?RE ?DEVICE))))

(subclass OutletAdapter Device)
(documentation OutletAdapter EnglishLanguage "An &%OutletAdapter is a device that, on
one side has &%Hole and on another side has metal prongs so that an &%ElectricalPlug
can fit into an &%ElectricalOutlet")
(termFormat EnglishLanguage OutletAdapter "outlet adapter")

(=>
  (instance ?ADAPT OutletAdapter)
  (exists (?HOLE)
    (and
      (instance ?HOLE Collection)
      (memberType ?HOLE Hole)
      (part ?HOLD ?ADAPT)
      (material Metal ?ADAPT))))
      
(=>
  (instance ?ADAPT OutletAdapter)
  (hasPurpose ?ADAPT
    (exists (?OUTLET ?PLUG)
      (and
        (instance ?PLUG ElectricalPlug)
        (instance ?OUTLET ElectricalOutlet)
        (completelyFills ?PLUG ?ADAPT)
        (completelyFills ?ADAPT ?OUTLET)
        (connectsEngineeringComponents ?ADAPT ?PLUG ?OUTLET)))))

(subclass AirConditioner ElectricDevice)
(documentation AirConditioner EnglishLanguage "&%AirConditioner is a type of
&%ElectricDevice that is designed to provide comfort during hot or cold weather by
keeping the air in an area a specific temperature")
(termFormat EnglishLanguage AirConditioner "air conditioner")

(=>
  (instance ?X AirConditioner)
  (hasPurpose ?X
    (exists (?PROC ?TEMP ?AREA)
      (and
        (located ?X ?AREA)
        (instance ?PROC Process)
        (instrument ?PROC ?X)
        (result ?PROC (airTemperature ?AREA ?TEMP))))))

(instance Surrounded PositionalAttribute)
(documentation Surrounded EnglishLanguage "&%Surrounded describes how an object or a
collection of objects &%meetsSpatially with all sides of another object")
(termFormat EnglishLanguage Surround "surround")

(=>
  (orientation ?OBJ1 ?OBJ2 Surrounded)
  (forall (?X)
    (=>
      (side ?X ?OBJ1)
      (meetsSpatially ?X ?OBJ2))))
          
(subclass Courtyard StationaryArtifact)
(documentation Courtyard EnglishLanguage "&%Courtyard is an unroofed area wholly or partly 
surrounded by walls or buildings")
(termFormat EnglishLanguage Courtyard "courtyard")

(=>
  (instance ?X Courtyard)
  (and
    (not
      (exists (?ROOF)
        (and
          (instance ?ROOF Roof)
          (top ?ROOF ?X))))
    (exists (?BLDG)
      (and
        (instance ?BLDG Building)
        (orientation ?X ?BLDG Surrounded)))))
        
(subclass SpeakerDevice ElectricDevice)
(documentation SpeakerDevice EnglishLanguage "&%SpeakerDevice is a type of device that
converts electrical signals into sounds loud enough to be heard at a distance")
(termFormat EnglishLanguage SpeakerDevice "speaker")

(=>
  (instance ?X SpeakerDevice)
  (hasPurpose ?X
    (exists (?RS)
      (and
        (instance ?RS RadiatingSound)
        (instrument ?RS ?X)
        (attribute ?RS Audible)))))

(subclass Earphone Device)
(documentation Earphone EnglishLanguage "&%Earphone is a type of &%Device that that
converts electric signals into sound and is usually held over or inserted in the ear")
(termFormat EnglishLanguage Earphone "earphone")

(=>
  (instance ?X Earphone)
  (hasPurpose ?X
    (exists (?ES ?RS ?SIGNAL ?EAR ?PROC)
      (and
        (instance ?ES ElectricalSignalling)
        (patient ?ES ?SIGNAL)
        (destination ?ES ?X)
        (instance ?PROC Process)
        (instrument ?PROC ?X)
        (patient ?PROC ?SIGNAL)
        (result ?PROC ?RS)
        (instance ?RS RadiatingSound)
        (origin ?RS ?X)
        (before ?ES ?PROC)
        (before ?PROC ?RS)
        (instance ?EAR Ear)
        (orientation ?X ?EAR Adjacent)))))
        
        
(subclass PublicAddressSystem CommunicationSystem)
(documentation PublicAddressSystem EnglishLanguage "&%PublicAddressSystem refers to an
electronic amplification system used as a communication system in public areas")
(termFormat EnglishLanguage PublicAddressSystem "public address system")

(=>
  (instance ?X PublicAddressSystem)
  (and
    (memberType ?X Microphone)
    (memberType ?X SpeakerDevice)))

(=>
  (instance ?X PublicAddressSystem)
  (hasPurpose ?X
    (exists (?RS ?AREA ?GRP)
      (and
        (instance ?AREA LandArea)
        (located ?X ?AREA)
        (instance ?GRP GroupOfPeople)
        (located ?GRP ?AREA)
        (instance ?RS RadiatingSound)
        (instrument ?RS ?X)
        (forall (?PERSON)
          (=>
            (member ?PERSON ?GRP)
            (exists (?HEAR)
              (and
                (instance ?HEAR Hearing)
                (patient ?HEAR ?RS)
                (agent ?HEAR ?PERSON)))))))))

(subclass Wheelchair LandVehicle)
(documentation Wheelchair EnglishLanguage "&%Wheelchair is a type of &%LandVehicle 
that is used to individually transport those who cannot walk")
(termFormat EnglishLanguage Wheelchair "wheelchair")

(=>
  (instance ?X Wheelchair)
  (exists (?WHEEL ?SEAT)
    (and
      (instance ?SEAT Seat)
      (instance ?WHEEL Wheel)
      (part ?SEAT ?X)
      (part ?WHEEL ?X))))
      
(=>
  (instance ?X Wheelchair)
  (hasPurpose ?X
    (exists (?TRANSPORT ?HUMAN)
      (and
        (instance ?HUMAN Human)
        (not (capability Walking agent ?HUMAN))
        (instance ?TRANSPORT Transportation)
        (agent ?TRANSPORT ?HUMAN)
        (instrument ?TRANSPORT ?X)))))

(instance WheelchairAccessible ObjectiveNorm)
(documentation WheelchairAccessible EnglishLanguage "&%WheelchairAccessible describes
how a location lets a person using a wheelchair move around without interference and 
with access to all features of that place.")
(termFormat EnglishLanguage WheelchairAccessible "wheelchair accessible")

(=>
  (and
    (attribute ?X WheelchairAccessible)
    (or
      (instance ?X Building)
      (instance ?X Room)))
  (modalAttribute
    (exists (?MOTION ?WHEELCHAIR)
      (and
        (instance ?MOTION Motion)
        (instrument ?MOTION ?WHEELCHAIR)
        (instance ?WHEELCHAIR Wheelchair)
        (located ?MOTION ?X))) Possibility))
    
(subclass Recliner Seat)
(documentation Recliner EnglishLanguage "&%Recliner is a type of &%Seat whose back can
be lowered and the foot can be rasied to allow the sitter to recline in it.")
(termFormat EnglishLanguage Recliner "recliner")

(=>
  (instance ?X Recliner)
  (modalAttribute
    (exists (?INCLINE)
      (and
        (instance ?INCLINE Inclining)
        (patient ?INCLINE ?X))) Possibility))

(subclass MultimediaProjector MediaSystem)
(documentation MultimediaProjector EnglishLanguage "&%MultimediaProjector is a type
of &%MediaSystem that projects images on a screen")
(termFormat EnglishLanguage MultimediaProject "multimedia projector")

(=>
  (instance ?X MultimediaProjector)
  (hasPurpose ?X
    (exists (?RS ?SCREEN ?VIDEO)
      (and
        (instance ?RS RadiatingLight)
        (instrument ?RS ?X)
        (patient ?RS ?VIDEO)
        (or
          (instance ?VIDEO VideoRecording)
          (instance ?VIDEO Image))
        (destination ?RS ?SCREEN)
        (instance ?SCREEN Artifact)
        (attribute ?SCREEN Flat)
        (not (connected ?X ?SCREEN))))))

(subclass Excrement BodySubstance)
(documentation Excrement EnglishLanguage "&%Excrement refers to the waste matter 
that is discharged from the body")
(termFormat EnglishLanguage Excrement "excrement")

(=>
  (instance ?X Excrement)
  (exists (?PROC ?ORG)
    (and
      (instance ?ORG Organism)
      (instance ?PROC PhysiologicalProcess)
      (result ?PROC ?X)
      (agent ?PROC ?ORG))))

(subclass Feces Excrement)
(documentation Feces EnglishLanguage "&%Feces is a type of &%Solid &%Excrement 
evacuated from the bowels")
(termFormat EnglishLanguage Feces "feces")

(=>
  (instance ?X Feces)
  (attribute ?X Solid))

(=>
  (instance ?X Feces)
  (exists (?PROC ?INT)
    (and
      (instance ?PROC PhysiologicProcess)
      (instrument ?PROC ?INT)
      (instance ?INT Intestine)
      (result ?PROC ?X))))
      
(subclass Urine Excrement)
(documentation Urine EnglishLanguage "&%Urine is a type of &%Liquid &%Excrement that
is secreted by the &%Kidney")
(termFormat EnglishLanguage Urine "urine")

(=>
  (instance ?X Urine)
  (attribute ?X Solid))
 
(=>
  (instance ?X Urine)
  (exists (?PROC ?KIDNEY)
    (and
      (instance ?PROC PhysiologicProcess)
      (instrument ?PROC ?KIDNEY)
      (instance ?KIDNEY Kidney)
      (result ?PROX ?X))))
    
(subclass Excretion OrganismProcess)
(documentation Excretion EnglishLanguage "&%Excretion is a type of &%OrganismProcess
that discharges waste from tissues, organs or the body")
(termFormat EnglishLanguage Excretion "excretion")

(=>
  (instance ?PROC Excretion)
  (exists (?ORG ?WASTE ?PART)
    (and
      (instance ?ORG Organism)
      (agent ?PROC ?ORG)
      (patient ?PROC ?WASTE)
      (instance ?WASTE Excrement)
      (instance ?PART BodyPart)
      (instrument ?PROC ?PART))))

(subclass Urination Excretion)
(documentation Urination EnglishLanguage "&%Urination is a type of &%Excretion that 
discharges &%Urine")
(termFormat EnglishLanguage Urination "urination")

(=>
  (instance ?PROC Urination)
  (exists (?URINE)
    (and
      (instance ?URINE Urine)
      (patient ?PROC ?URINE))))
      
(subclass Defecation Excretion)
(documentation Defecation EnglishLanguage "&%Defecation is a type of &%Excretion that
discharges &%Feces")
(termFormat EnglishLanguage Defecation "defecation")

(=>
  (instance ?PROC Defecation)
  (exists (?FECES)
    (and
      (instance ?FECES Feces)
      (patient ?PROC ?FECES))))
              
(subclass Bidet WashingDevice)
(documentation Bidet EnglishLanguage "&%Bidet is a &%WashingDevice intended for
washing genitals and the anal area while on the toilet")
(termFormat EnglishLanguage Bidet "bidet")

(=>
  (instance ?X Bidet)
  (hasPurpose ?X
    (exists (?PROC ?WASH ?PART)
      (and
        (or
          (instance ?PROC Defecation)
          (instance ?PROC Urination))
        (instrument ?PROC ?PART)
        (instance ?WASH Washing)
        (patient ?WASH ?PART)
        (instrument ?WASH ?X)
        (before ?PROC ?WASH)))))
       
;; additional axiom for toilet
(=>
  (instance ?X Toilet)
  (hasPurpose ?X
    (exists (?PROC)
      (and
        (or 
          (instance ?PROC Defecation)
          (instance ?PROC Urination))
        (destination ?PROC ?X)))))

(subclass VideoDisplay ElectricDevice)
(documentation VideoDisplay EnglishLanguage "&%VideoDisplay is a type of &%ElectricDevice
that can &%RadiatingLight to show &%VideoRecording")
(termFormat EnglishLanguage VideoDisplay "video display")

(=>
  (instance ?X VideoDisplay)
  (hasPurpose ?X
    (exists (?RL ?VIDEO)
      (and
        (instance ?RL RadiatingLight)
        (instance ?VIDEO VideoRecording)
        (patient ?RL ?VIDEO)
        (instrument ?RL ?X)))))

(subclass SatelliteTelevisionSystem CommunicationSystem)
(documentation SatelliteTelevisionSystem EnglishLanguage "&%SatelliteTelevisionSystem       
is a &%CommunicationSystem where &%ArtificialSatellite is used to transfer TV signals")
(termFormat EnglishLanguage SatelliteTelevisionSystem "satellite tv")

(=>
  (instance ?TV SatelliteTelevisionSystem)
  (exists (?SAT ?RECEIVE)
    (and
      (instance ?SAT ArtificialSatellite)
      (member ?SAT ?TV)
      (instance ?RECEIVE TelevisionReceiver)
      (member ?RECEIVE ?TV))))
          
(subclass TemperatureControl Controller)
(documentation TemperatureControl EnglishLanguage "&%TemperatureControl is a type
of &%Controller that is used to set the ideal &%airTemperature in the room. It is normally
a part of an &%ElectricDevice that conditions the room to reach that temperature")
(termFormat EnglishLanguage TemperatureControl "temperature control")

(=>
  (instance ?CTRL TemperatureControl)
  (exists (?DEVICE ?TEMP)
    (and
      (instance ?DEVICE ElectricDevice)
      (part ?CTRL ?DEVICE)
      (hasPurpose ?DEVICE
        (exists (?PROC ?AREA)
          (and
            (instance ?AREA Region)
            (instance ?PROC Process)
            (instrument ?PROC ?X)
            (result ?PROC (airTemperature ?AREA ?TEMP))))))))
            
(=>
  (physicalAmenity ?HR TemperatureControl)
  (exists (?DEVICE ?ROOM ?TEMP)
    (and
      (instance ?ROOM ?HR)
      (instance ?DEVICE AirConditioner)
      (instance ?TEMP TemperatureControl)
      (located ?TEMP ?ROOM)
      (part ?TEMP ?DEVICE))))

(subclass TDDPhone Telephone)
(documentation TDDPhone EnglishLanguage "&%TDDPhone, which stands for Telecommunications
Device for the Deaf, describes a &%Telephone that is designed so that &%Deaf people can 
use it")

(=>
  (instance ?TDD TDDPhone)
  (hasPurpose ?TDD
    (exists (?AGENT ?PHONING)
      (and
        (instance ?PHONING Telephoning)
        (instrument ?PHONING ?TDD)
        (agent ?PHONING ?AGENT)
        (attribute ?AGENT Deaf)))))
      
(subclass Sail Artifact)
(documentation Sail EnglishLanguage "&%Sail refers to an &%Artifact made of some type
of &%Fabric which by means of which wind is used to propel a sailing vessel")
(termFormat EnglishLanguage Sail "sail")

(=>
  (instance ?SAIL Sail)
  (exists (?MAST)
    (and
      (material Fabric ?SAIL)
      (instance ?MAST Mast)
      (connected ?SAIL ?MAST))))

(subclass ACPowerSource PowerSource)
(documentation ACPowerSource EnglishLanguage "&%ACPowerSource refers to an alternating
current &%PowerSource")
(termFormat EnglishLanguage ACPowerSource "ac power source")

(subclass SinglePhasePowerSource ACPowerSource)
(subclass ThreePhasePowerSource ACPowerSource)

(instance voltageMeasure BinaryPredicate)
(documentation voltageMeasure EnglishLanguage "(&%voltageMeasure ?OBJ ?MEAS) describes
how much electricity ?OBJ, a power source, generates")
(termFormat EnglishLanguage voltageMeasure "voltage measure")

(domain voltageMeasure 1 PowerSource)
(domain voltageMeasure 2 Measure)

(=>
  (voltageMeasure ?OBJ ?MEAS)
  (equal ?MEAS (MeasureFn ?QUANT Volt)))
  
(=>
  (voltageMeasure ?OBJ ?MEAS)
  (exists (?ELEC ?PROC)
    (and
      (instance ?ELEC Electricity)
      (instance ?PROC Process)
      (instrument ?PROC ?OBJ)
      (result ?PROC ?ELEC)
      (measure ?ELEC ?MEAS))))

(subclass GuideBook Book)
(documentation GuideBook EnglishLanguage "&%GuideBook is a type of &%Book that offers
basic information about a place, normally designed for the use of visitors or tourists.")
(termFormat EnglishLanguage GuideBook "guide book")

(=>
  (instance ?X GuideBook)
  (exists (?LOC)
    (and
      (instance ?LOC GeographicArea)
      (refers ?X ?LOC))))
      
(subclass DiningGuide GuideBook)
(documentation DiningGuide EnglishLanguage "&%DiningGuide is a type of &%GuideBook that
offers information about dining places around a specific location")
(termFormat EnglishLanguage DiningGuide "dining guide")

(=>
  (instance ?X DiningGuide)
  (exists (?LOC ?REST)
    (and
      (instance ?LOC GeographicArea)
      (refers ?X ?LOC)
      (instance ?REST Restaurant)
      (located ?REST ?LOC)
      (refers ?X ?REST))))

(subclass TelephoneHandset Device)
(documentation TelephoneHandset EnglishLanguage "&%TelephoneHandset is the part of the
&%Telephone that has a &%Earphone and a &%Microphone for the transmission and reception
of sound")
(termFormat EnglishLanguage TelephoneHandset "telephone handset")

(=>
  (instance ?X TelephoneHandset)
  (exists (?EARPHONE ?MIC)
    (and
      (instance ?EARPHONE Earphone)
      (instance ?MIC Microphone)
      (part ?EARPHONE ?X)
      (part ?MIC ?X))))
      
(subclass TelephoneCradle Device)
(documentation TelephoneCradle EnglishLanguage "&%TelephoneCradle is the part of the
&%Telephone that is connected to the &%TelephoneSystem through some wire.")
(termFormat EnglishLanguage TelephoneCradle "telephone cradle")

(=>
  (instance ?X TelephoneCradle)
  (hasPurpose ?X
    (exists (?SYS ?WIRE)
      (and
        (instance ?SYS TelephoneSystem)
        (instance ?WIRE WireLine)
        (connectsEngineeringComponents ?WIRE ?X ?SYS)))))

(subclass CordedTelephone FixedPhone)
(documentation CordedTelephone EnglishLanguage "&%CordedTelephone is a type of &%FixedPhone 
whose &%TelephoneHandset is connected to its &%TelephoneCradle by a &%WireLine")
(termFormat EnglishLanguage CordedTelephone "corded telephone")

(=>
  (instance ?X CordedTelephone)
  (exists (?HANDSET ?CRADLE ?WIRE)
    (and
      (instance ?HANDSET TelephoneHandset)
      (instance ?CRADLE TelephoneCradle)
      (part ?HANDSET ?X)
      (part ?CRADLE ?X)
      (instance ?WIRE WireLine)
      (connectsEngineeringComponents ?WIRE ?HANDSET ?CRADLE))))
        
(subclass CordlessTelephone FixedPhone)
(documentation CordlessTelephone EnglishLanguage "&%CordlessTelephone is a type of 
&%FixedPhone whose &%TelephoneHandset is not connected to its &%TelephoneCradle by a 
&%WireLine")
(termFormat EnglishLanguage CordlessTelephone "cordless telephone")

(=>
  (instance ?X CordlessTelephone)
  (exists (?HANDSET ?CRADLE)
    (and
      (instance ?HANDSET TelephoneHandset)
      (instance ?CRADLE TelephoneCradle)
      (part ?HANDSET ?X)
      (part ?CRADLE ?X)
      (not 
        (exists (?WIRE)
          (and
            (instance ?WIRE WireLine)
            (connectsEngineeringComponents ?WIRE ?HANDSET ?CRADLE)))))))

(subclass FireAlarm Device)
(documentation FireAlarm EnglishLanguage "&%FireAlarm is a &%Device that releases
a distinctive noise to inform people that there is a &%Fire")
(termFormat EnglishLanguage FireAlarm "fire alarm")
            
(=>
  (and
    (instance ?X FireAlarm)
    (attribute ?X DeviceOn)
    (located ?X ?LOC))
  (exists (?RS)
    (and
      (instance ?RS RadiatingSound)
      (instrument ?RS ?X)
      (hasPurpose ?RS
        (exists (?GRP)
          (and
            (instance ?GRP GroupOfPeople)
            (located ?GRP ?LOC)
            (knows ?GRP 
              (exists (?FIRE)
                (and
                  (instance ?FIRE Fire)
                  (located ?FIRE ?LOC))))))))))

;; additional axiom for InRoom movies
(=>
  (physicalAmenity ?ROOM MotionPicture)
  (exists (?R ?MS ?MP)
    (and
      (instance ?R ?ROOM)
      (instance ?MS MediaSystem)
      (located ?MS ?R)
      (instance ?MP MotionPicture)
      (modalAttribute
        (exists (?RL)
          (and
            (instance ?RL RadiatingLight)
            (instrument ?RL ?MS)
            (patient ?RL ?MP))) Possibility))))

;; not sure if this should be subclassed from Handle.  Handle is subclassed from
;; EngineeringComponent, and seems to be specific to be a part of a device that is
;; used to grab or carry that device            
(subclass GrabBar Artifact)
(documentation GrabBar EnglishLanguage "&%GrabBar is a bar attached to a &%Wall to
provide a handgrip for steadying yourself")
(termFormat EnglishLanguage GrabBar "grab bar")

(=>
  (instance ?X GrabBar)
  (and
    (attribute ?X Cylinder)
    (exists (?WALL)
      (and
        (instance ?WALL Wall)
        (connected ?X ?WALL)))
    (hasPurpose ?X
      (exists (?GRAB)
        (and
          (instance ?GRAB Grabbing)
          (instrument ?GRAB ?X))))))
          
(=>
  (instance ?X GrabBar)
  (modalAttribute
    (exists (?HUMAN)
      (and
        (attribute ?HUMAN PhysicalDisability)
        (inScopeOfInterest ?HUMAN ?X))) Likely))

(subclass HighRise Building)
(documentation HighRise EnglishLanguage "&%HighRise refers to a type of &%Building
that has greater than 10 &%BuildingLevel")
(termFormat EnglishLanguage HighRise "high rise")

(=>
  (instance ?X HighRise)
  (exists (?LEVELS ?NUM)
    (and
      (instance ?LEVELS Collection)
      (forall (?FLR)
        (=>
          (and
            (instance ?FLR BuildingLevel)
            (part ?FLR ?X))
          (member ?FLR ?LEVELS)))
      (memberCount ?LEVELS ?NUM)
      (greaterThanOrEqualTo ?NUM 10))))
        
;; ---------------------------------------------------------------------------------
;; Food
;; --------------------------------------------------------------------------------- 

(subclass MealPlan Proposition)
(documentation MealPlan EnglishLanguage "&%MealPlan refers to the &%Meal that are 
included in a particular stay at a &%TravelerAccommodation")
(termFormat EnglishLanguage MealPlan "meal plan")

(=>
  (instance ?PLAN MealPlan)
  (exists (?ATTR ?TIME)
    (and
      (instance ?ATTR MealAttribute)
      (instance ?TIME TimeInterval)
      (includedMeal ?PLAN ?ATTR ?TIME))))

(instance includedMeal TernaryPredicate)
(documentation includedMeal EnglishLanguage "(&%includedMeal ?PLAN ?ATTR ?TIME) indicates
that the ?ATTR type of &%Meal is available at ?TIME according to ?PLAN")
(termFormat EnglishLanguage includedMeal "included meal")

(domain includedMeal 1 MealPlan)
(domain includedMeal 2 MealAttribute)
(domainSubclass includedMeal 3 TimeInterval)

(instance MealPlanFn UnaryFunction)
(documentation MealPlanFn EnglishLanguage "(%&MealPlanFn ?TYPE) returns the
class of &%MealPlan with food associated with ?TYPE")
(termFormat EnglishLanguage MealPlanFn "meal plan fn")

(domain MealPlanFn 1 SymbolicString)
(rangeSubclass MealPlanFn MealPlan)

;; if a room has an associated mealplan that indicates included meals, then while 
;; there is a guest staying in that room, there is a meal available at the stated
;; time intervals for that guest to consume (if he wants to) 

;; TODO: Design some way to connect MealPlan with a Hotel or a Room (or is it 
;; connected to Price? 
(=>
  (and
    (equal ?PLAN (MealPlanFn ?TYPE))
    (instance ?X ?PLAN)
    (includedMeal ?X ?ATTR ?TIME))
  (holdsDuring
    (WhenFn (guest ?CUST ?RM))
    (forall (?INT)
      (=>
        (instance ?X ?INT)
        (holdsDuring ?INT
          (exists (?MEAL)
            (and
              (instance ?MEAL Meal)
              (attribute ?MEAL ?ATTR)
              (hasPurpose ?MEAL
                (exists (?E)
                  (and
                    (instance ?E Eating)
                    (patient ?E ?MEAL)
                    (agent ?E ?CUST)))))))))))

(subclass FullBoard MealPlan)
(documentation FullBoard EnglishLanguage "&%FullBoard is an arrangement in which a
&%TravelerAccommodation provides breakfast, lunch, and dinner")
(termFormat EnglishLanguage FullBoard "full board")

(=>
  (instance ?X FullBoard)
  (and
    (includedMeal ?X Breakfast BreakfastTime)
    (includedMeal ?X Lunch LunchTime)
    (includedMeal ?X Dinner DinnerTime)))

(subclass HalfBoard MealPlan)
(documentation HalfBoard EnglishLanguage "&%HalfBoard is an arrangement in which a 
&%TravelerAccommodation provides breakfast and dinner, but no meal at lunchtime")
(termFormat EnglishLanguage HalfBoard "half board")

(=>
  (instance ?X HalfBoard)
  (and
    (includedMeal ?X Breakfast BreakfastTime)
    (includedMeal ?X Dinner DinnerTime)))
                    
;; ---------------------------------------------------------------------------------
;; Facilities
;; --------------------------------------------------------------------------------- 

;; Gym or Exercise Center
(subclass ExerciseCenter SportsFacility)
(documentation ExerciseCenter EnglishLanguage "&%ExerciseCenter refers to a type of
&%SportsFacility that has equipment and services for physical training
and keeping fit")
(termFormat EnglishLanguage ExerciseCenter "exercise center")

(=>
  (instance ?X ExerciseCenter)
  (hasPurpose ?X
    (exists (?DEVICE)
      (and
        (or
          (instance ?DEVICE AerobicExerciseDevice)
          (instance ?DEVICE AnaerobicExerciseDevice))
        (located ?DEVICE ?X)))))

(subclass GameRoom Room)
(documentation GameRoom EnglishLanguage "&%GameRoom refers to a type of &%Room
that have facilities for &%Game that can be played")        
(termFormat EnglishLanguage GameRoom "game room")

(=>
  (instance ?X GameRoom)
  (hasPurpose ?X 
    (exists (?GAME)
      (and
        (instance ?GAME Game)
        (located ?GAME ?X)))))

(subclass Nursery Room)
(documentation Nursery EnglishLanguage "&%Nursery refers to a &%Room for babies")
(termFormat EnglishLanguage Nursery "nursery")

(=>
  (instance ?X Nursery)
  (exists (?CRIB)
    (and
      (instance ?CRIB Crib)
      (located ?CRIB ?X))))
      
(=>
  (and
    (instance ?X Nursery)
    (element ?X (PropertyFn ?HOTEL))
    (attribute ?HOTEL TravelerAccommodation))
  (and
    (attribute ?X CommunalAttribute)
    (employs ?HOTEL ?NANNY)
    (hasPurpose ?NANNY
      (exists (?CARE)
        (and
          (instance ?CARE ChildCareServices)
          (serviceProvider ?CARE ?NANNY))))))
          
(subclass SteamBath Room)
(documentation SteamBath EnglishLanguage "&%SteamBath refers to a room that is filled
with &%Steam in order to make people sweat")
(termFormat EnglishLanguage SteamBath "steam bath")

(=>
  (instance ?X SteamBath)
  (exists (?STEAM)
    (and
      (instance ?STEAM Steam)
      (located ?STEAM ?X))))

(=>
  (instance ?X SteamBath)
  (hasPurpose ?X
    (exists (?BATH)
      (and
        (instance ?BATH Bathing)
        (located ?BATH ?X)))))

             
(subclass HeatedPool SwimmingPool)
(documentation HeatedPool EnglishLanguage "&%HeatedPool is a type of &%SwimmingPool that
has &%HotWaterHeater so that the &%Water in the pool is constantly kept at a certain 
warm temperature")
(termFormat EnglishLanguage HeatedPool "heated pool")

(=>
  (and
    (instance ?X HeatedPool)
    (contains ?X ?WATER)
    (instance ?WATER Water)
    (part ?X ?HEATER)
    (instance ?HEATER WaterHeater)
    (attribute ?HEATER DeviceOn))
  (attribute ?WATER WarmTemperature))

(subclass RoomHeater HeatingDevice)
(documentation RoomHeater EnglishLanguage "&%RoomHeater is a type of &%HeatingDevice
that heats the air in a confined space")
(termFormat EnglishLanguage RoomHeater "room heater")

(=>
  (instance ?X RoomHeater)
  (hasPurpose ?X
    (exists (?AIR ?HEATING ?ROOM)
      (and
        (instance ?AIR Air)
        (instance ?ROOM Room)
        (located ?AIR ?ROOM)
        (instance ?HEATING Heating)
        (patient ?HEATING ?AIR)
        (instrument ?HEATING ?X)))))

(subclass RacquetballCourt SportsFacility)
(documentation RacquetballCourt EnglishLanguage "&%RacquetballCourt is a type of
&%SportsFacility where &%Racquetball is played")
(termFormat EnglishLanguage RacquetballCourt "racquetball court")

(=>
  (instance ?X RacquetballCourt)
  (hasPurpose ?X
    (exists (?PLAY)
      (and
        (instance ?PLAY Racquetball)
        (located ?PLAY ?X)))))        

(subclass BusinessCenter Room)
(documentation BusinessCenter EnglishLanguage "&%BusinessCenter is a type of facility
that is equipped with different objects that allow a person to do his &%Working")
(termFormat EnglishLanguage BusinessCenter "business center")

(=>
  (instance ?X BusinessCenter)
  (hasPurpose ?X
    (exists (?PERSON ?WORK ?OBJ)
      (and
        (instance ?PERSON BusinessPerson)
        (instance ?WORK Working)
        (instance ?OBJ Object)
        (located ?OBJ ?X)
        (agent ?WORK ?PERSON)
        (or
          (instrument ?WORK ?OBJ)
          (resource ?WORK ?OBJ)
          (patient ?WORK ?OBJ))))))

(=>
  (instance ?X BusinessCenter)
  (modalAttribute
    (exists (?COMP)
      (and
        (instance ?COMP Computer)
        (located ?COMP ?X))) Likely))
        
(=>
  (instance ?X BusinessCenter)
  (modalAttribute
    (exists (?IC)
      (and
        (instance ?IC InternetConnection)
        (located ?IC ?X))) Likely))

(subclass HotelFunctionRoom Room)
(documentation HotelFunctionRoom EnglishLanguage "&%HotelFunctionRoom is a &%Room found
in a &%HotelBuilding that is rented out and can be used for virtually any purpose.")
(termFormat EnglishLanguage HotelFunctionRoom "hotel function room")

(=>
  (instance ?X HotelFunctionRoom)
  (exists (?HOTEL)
    (element ?X (PropertyFn ?HOTEL))))
    
(=>
  (and
    (instance ?X HotelFunctionRoom)
    (element ?X (PropertyFn ?HOTEL)))
  (hasPurpose ?X
    (exists (?RENT)
      (and
        (instance ?RENT Renting)
        (patient ?RENT ?X)))))
        
(subclass DanceHall StationaryArtifact)
(documentation DanceHall EnglishLanguage "&%DanceHall is a &%StationaryArtifact equipped
with floors amenable to &%Dancing and devices that blare out &%Music")
(termFormat EnglishLanguage DanceHall "dance hall")

(=>
  (instance ?DISCO DanceHall)
  (hasPurpose ?DISCO
    (exists (?DANCE ?MUSIC)
      (and
        (instance ?MUSIC Music)
        (instance ?DANCE Dancing)
        (cooccur ?MUSIC ?DANCE)
        (located ?MUSIC ?DISCO)
        (located ?DANCE ?DISCO)))))
        
(subclass NightClub DanceHall)
(documentation NightClub EnglishLanguage "&%NightClub is a type of &%DanceHall that
typically opens at &%NightTime and has a &%Tavern located in it")
(termFormat EnglishLanguage NightClub "night club")

(=>
  (instance ?X NightClub)
  (exists (?TIME ?BAR)
    (and
      (instance ?BAR Tavern)
      (located ?BAR ?X)
      (standardRetailHours ?X ?TIME)
      (during (BeginFn ?TIME) NightTime))))
  
(subclass ScubaDiving Swimming)
(documentation ScubaDiving EnglishLanguage "&%ScubaDiving is &%Swimming &%Below a
&%WaterArea with the aid of some &%Device to help in &%Breathing")
(termFormat EnglishLanguage ScubaDiving "scuba diving")

(=>
  (instance ?SCUBA ScubaDiving)
  (exists (?WATER ?DEVICE ?BREATH)
    (and
      (instance ?WATER WaterArea)
      (orientation ?SCUBA ?WATER Below)
      (instance ?DEVICE Device)
      (instance ?BREATH Breathing)
      (instrument ?BREATH ?DEVICE)
      (subProcess ?BREATH ?SCUBA))))

(subclass SkeetShooting Sport)
(documentation SkeetShooting EnglishLanguage "&%SkeetShooting is a type of &%Sport
that involves &%Shooting clay pigeons that are hurled upward in such a way as to 
simulate the flight of a bird")
(termFormat EnglishLanguage SkeetShooting "skeet shooting")

(=>
  (instance ?SKEET SkeetShooting)
  (exists (?SHOOTING)
    (and
      (instance ?SHOOTING Shooting)
      (subProcess ?SHOOTING ?SKEET))))

(instance AmericansWithDisabilitiesAct Proposition)
(documentation AmericansWithDisabilitiesAct EnglishLanguage "The 
&%AmericansWithDisabilitiesAct is a &%Proposition promulgated by the US Employment
Opportunity Commission to give civil right protections to individuals with &%Disability
similar to those provided to individuals on the basis of race, color, sex, national
origin, age and religion.  It guarantees equal opportunities for individuals with
&%Disability in public accommodation, employment, transportation, State and local
government services and telecommunications")
(termFormat EnglishLanguage AmericansWithDisabilityAct "ADA")


;; TODO: Create axiom for this
(subrelation conforms represents)
(documentation conform EnglishLanguage "(&%conforms ?OBJ ?PROP) describes
how ?OBJ follows the ideas outlined by ?PROP")
(termFormat EnglishLanguage conforms "conforms")

(domain conforms 1 Object)
(domain conforms 2 Proposition)

(instance USFEMA GovernmentOrganization)
(documentation USFEMA EnglishLanguage 
"&%USFEMA, which stands for Federal Emergency Management Agency, is a 
&%GovernmentOrganization in charge of disaster mitigation, preparedness, response, 
recovery, education and references")
(termFormat EnglishLanguage USFEMA "fema")

(subrelation approves inScopeOfInterest)
(documentation approves EnglishLanguage "(&%approves ?AGENT1 ?AGENT2) means that
?AGENT1 is satisfied that ?AGENT2 has met some requirement or proposition, and publicly
declares such")
(termFormat Englishlanguage approves "approves")

(domain approves 1 CognitiveAgent)
(domain approves 2 CognitiveAgent)

(=>
  (approves ?AGENT1 ?AGENT2)
  (exists (?PROP)
    (believes ?AGENT1
      (conforms ?AGENT2 ?PROP))))


      
;; ---------------------------------------------------------------------------------
;; Amenities
;; ---------------------------------------------------------------------------------

(subclass HotelMiniBar Collection)
(documentation HotelMiniBar EnglishLanguage "&%HotelMiniBar is a &%Collection of 
(&%FoodForFn &%Human) that is available for a certain price")
(termFormat EnglishLanguage HotelMiniBar "mini bar")

(=>
  (instance ?X HotelMiniBar)
  (memberType ?X (FoodForFn Human)))
  
(=>
  (physicalAmenity ?X HotelMiniBar)
  (exists (?ROOM ?BAR ?HOTEL)
    (and
      (instance ?ROOM ?X)
      (element ?ROOM (PropertyFn ?HOTEL))
      (instance ?BAR HotelMiniBar)
      (located ?BAR ?ROOM)
      (forall (?ITEM)
        (=>
          (member ?ITEM ?BAR)
          (exists (?AMT)
            (price ?ITEM ?AMT ?HOTEL)))))))

(subclass HotelFrontDesk Organization)            
(documentation HotelFrontDesk EnglishLanguage "&%HotelFrontDesk is a &%subOrganization
of a &%TravelerAccommodation that takes charge of all &%CheckInService and
&%CheckOutService transactions.  They often do other miscellaneous things too at the
request of the hotel &%guest")
(termFormat EnglishLanguage HotelFrontDesk "front desk")

(=>
  (instance ?X HotelFrontDesk)
  (exists (?ORG)
    (and
      (attribute ?ORG TravelerAccommodation)
      (subOrganization ?X ?ORG))))
      
(=>
  (instance ?X HotelFrontDesk)
  (hasPurpose ?X
    (exists (?CHECK)
      (and
        (or
          (instance ?CHECK CheckInService)
          (instance ?CHECK CheckOutService))
        (agent ?CHECK ?X)))))
 
;; ---------------------------------------------------------------------------------
;; Services
;; ---------------------------------------------------------------------------------

(subclass LaundryService ServiceProcess)
(documentation LaundryService EnglishLanguage "&%LaundryService refers to an agent
washing, drying, and (possibly) ironing articles of clothing")
(termFormat EnglishLanguage LaundryService "laundry service")

(=>
  (instance ?SVC LaundryService)
  (exists (?CLOTHES ?WASH ?DRY ?IRON)
    (and
      (instance ?CLOTHES Clothing)
      (patient ?SVC ?CLOTHES)
      (subProcess ?WASH ?SVC)
      (instance ?WASH Washing)
      (patient ?WASH ?CLOTHES)
      (subProcess ?DRY ?SVC)
      (instance ?DRY Drying)
      (patient ?DRY ?CLOTHES)
      (instance ?IRON Ironing)
      (subProcess ?IRON ?SVC)
      (patient ?IRON ?CLOTHES)
      (before (WhenFn ?WASH) (WhenFn ?DRY))
      (before (WhenFn ?DRY) (WhenFn ?IRON)))))

(subclass DryCleaningService ServiceProcess)
(documentation DryCleaningService EnglishLanguage "&%DryCleaningService refers to
cleaning of &%Clothing using some chemical solvent instead of water")
(termFormat EnglishLanguage DryCleaningService "dry-clean")

(=>
  (instance ?SVC DryCleaningService)
  (exists (?CLOTHES ?WATER ?CHEM)
    (and
      (instance ?CLOTHES Clothing)
      (not (instrument ?SVC ?WATER))
      (instance ?WATER Water)
      (instance ?CHEM ChemicalProduct)
      (instrument ?SVC ?CHEM)
      (patient ?SVC ?CLOTHES)
      (result ?SVC (attribute ?CLOTHES Clean)))))
      
      
(subclass ValetLaundryService ServiceProcess)
(documentation ValetLaundryService EnglishLanguage "&%ValetLaundryService refers to an
agent picking up clothing, performing &%LaundryService, and then delivering it back
to customer")
(termFormat EnglishLanguage ValetLaundryService "valet laundry")

(=>
  (instance ?SVC ValetLaundryService)
  (exists (?CUST ?AGENT ?LOC ?CLOTHES ?LAUNDRY ?PICKUP ?DELIVERY)
    (and
      (customer ?CUST ?AGENT)
      (stays ?CUST ?LOC)
      (agent ?SVC ?AGENT)
      (instance ?CLOTHES Clothing)
      (instance ?PICKUP Getting)
      (located ?PICKUP ?LOC)
      (patient ?PICKUP ?CLOTHES)
      (agent ?PICKUP ?AGENT)
      (or
        (instance ?LAUNDRY LaundryService)
        (instance ?LAUNDRY DryCleaningService))
      (agent ?LAUNDRY ?AGENT)
      (patient ?LAUNDRY ?CLOTHES)
      (instance ?DELIVERY DeliveryService)
      (patient ?DELIVERY ?CLOTHES)
      (destination ?DELIVERY ?LOC)
      (before (WhenFn ?PICKUP) (WhenFn ?LAUNDRY))
      (before (WhenFn ?LAUNDRY) (WhenFn ?DELIVERY)))))
      
(subclass ChildCareService Maintaining)
(subclass ChildCareService ServiceProcess)
(documentation ChildCareService EnglishLanguage "&%ChildCareService refers to 
an agent looking after children and babies")
(termFormat EnglishLanguage ChildCareService "child-care service")

(=>
  (instance ?SVC ChildCareService)
  (exists (?CHILD ?SITTER)
    (and
      (or
        (instance ?CHILD HumanChild)
        (instance ?CHILD HumanBaby))
      (serviceProvider ?SVC ?SITTER)
      (patient ?SVC ?CHILD)
      (not (parent ?CHILD ?SITTER)))))
      
(=>
  (capability ChildCareService agent ?X)
  (exists (?SITTER)
    (and
      (employs ?X ?SITTER)
      (capability ChildCareService serviceProvider ?SITTER))))
      
(=>
  (and
    (parent ?CHILD ?PARENT)
    (or
      (instance ?CHILD HumanChild)
      (instance ?CHILD HumanBaby)))
  (modalAttribute
    (exists (?CARE)
      (and
        (instance ?CARE ChildCareService)
        (desires ?PARENT ?CARE))) Possibility))

(subclass Cleaning Maintaining)      
(documentation Cleaning EnglishLanguage "&%Cleaning refers to the &%Process of removing
dirt and arranging things")
(termFormat EnglishLanguage Cleaning "cleaning")

(=>
  (instance ?X Cleaning)
  (exists (?OBJ)
    (and
      (patient ?X ?OBJ)
      (holdsDuring
        (EndFn (WhenFn ?X))
        (attribute ?OBJ Clean)))))
        
(subclass RoomCleaningService ServiceProcess)
(documentation RoomCleaningService EnglishLanguage "&%RoomCleaningService refers to a 
&%Maid &%Cleaning an area such as a &%Room or &%House")
(termFormat EnglishLanguage RoomCleaningService "service")

(=>
  (instance ?X RoomCleaningService)
  (exists (?MAID ?PLACE ?CLEAN)
    (and
      (attribute ?MAID Maid)
      (serviceProvider ?X ?MAID)
      (located ?X ?PLACE)
      (subProcess ?CLEAN ?X)
      (instance ?CLEAN Cleaning)
      (patient ?CLEAN ?PLACE)
      (agent ?CLEAN ?MAID))))
     
(=>
  (and
    (attribute ?X TravelerAccommodation)
    (capability RoomCleaningService agent ?X))
  (exists (?MAID ?HOTELROOM)
    (and
      (employs ?X ?MAID)
      (attribute ?MAID Maid)
      (instance ?HOTELROOM HotelUnit)
      (part ?HOTELROOM (PropertyFn ?X))
      (capability RoomCleaningService patient ?HOTELROOM)
      (capability RoomCleaningService serviceProvider ?MAID))))   

(subclass TurndownService ServiceProcess)
(documentation TurndownService EnglishLanguage "&%TurndownService refers to a &%ServiceProcess
wherein a &%Bed is prepared for &%Sleeping by &%Folding the bed linen")
(termFormat EnglishLanguage TurndownService "turndown service")

(=>
  (instance ?X TurndownService)
  (exists (?FOLD ?BED ?SHEET)
    (and
      (instance ?FOLD Folding)
      (instance ?SHEET BedLinen)
      (instance ?BED Bed)
      (located ?SHEET ?BED)
      (patient ?FOLD ?SHEET)
      (subProcess ?FOLD ?X))))
      
(subclass RoomService ServiceProcess)
(documentation RoomService EnglishLanguage "&%RoomService refers to an agent delivering
PreparedFood that somebody has ordered to that person's &%HotelUnit")
(termFormat EnglishLanguage RoomService "room service")

(=>
  (instance ?SVC RoomService)
  (exists (?AGENT ?FOOD ?CUSTOMER ?RQST ?ORDER ?DELIVERY ?LOC)
    (and
      (customer ?CUSTOMER ?AGENT)
      (agent ?SVC ?AGENT)
      (instance ?RQST Requesting)
      (agent ?RQST ?CUSTOMER)
      (patient ?RQST ?ORDER)
      (represents ?ORDER ?FOOD)
      (instance ?FOOD PreparedFood)
      (located ?CUSTOMER ?LOC)
      (instance ?LOC HotelUnit)
      (instance ?DELIVERY DeliveryService)
      (patient ?DELIVERY ?FOOD)
      (destination ?DELIVERY ?LOC)
      (before (WhenFn ?RQST) (WhenFn ?DELIVERY)))))
      
(subclass WakeUpService ServiceProcess)
(documentation WakeUpService EnglishLanguage "&%WakeUpService refers to an agent
performing some action (like a phone call or knocking on the door) to wake up a person")
(termFormat EnglishLanguage WakeUpService "wake-up service")

(=>
  (instance ?SVC WakeUpService)
  (hasPurpose ?SVC
    (exists (?WAKE ?CUST ?AGENT ?PROC)
      (and
        (agent ?SVC ?AGENT)
        (experiencer ?SVC ?CUST)
        (instance ?PROC IntentionalProcess)
        (agent ?PROC ?AGENT)
        (experiencer ?PROC ?CUST)
        (instance ?WAKE WakingUp)
        (experiencer ?WAKE ?CUST)
        (result ?PROC ?WAKE)))))

(subclass TransportationService ServiceProcess)
(documentation TransportationService EnglishLanguage "&%TransportationService refers to
how an agent that possesses some kind of Automobile drives people around")
(termFormat EnglishLanguage TransportationService "car service")        
        
(=>
  (instance ?SVC TransportationService)
  (exists (?VEHICLE ?AGENT ?TRANS ?CUST)
    (and
      (agent ?SVC ?AGENT)
      (possesses ?AGENT ?VEHICLE)
      (customer ?CUST ?AGENT)
      (instance ?VEHICLE Automobile)
      (isntance ?TRANS Transportation)
      (agent ?TRANS ?AGENT)
      (patient ?TRANS ?CUST)
      (instrument ?TRANS ?VEHICLE)
      (subProcess ?TRANS ?SVC))))
      
(subclass ShuttleService TransportationService)
(documentation ShuttleService EnglishLanguage "&%ShuttleService refers to how an
agent that possesses some kind of Automobile takes people between an origin location to
some predefined locations")
(termFormat EnglishLanguage ShuttleService "shuttle")

(=>
  (instance ?SVC ShuttleService)
  (exists (?LIST ?VEHICLE ?AGENT)
    (and
      (agent ?SVC ?AGENT)
      (possesses ?AGENT ?VEHICLE)
      (instance ?VEHICLE Automobile)
      (instance ?LIST List)
      (forall (?X)
        (=>
          (inList ?X ?LIST)
          (and
            (instance ?X PostalPlace)
            (exists (?TRANSPORT)
              (and
                (instance ?TRANSPORT Transportation)
                (agent ?TRANSPORT ?AGENT)
                (instrument ?TRANSPORT ?VEHICLE)
                (destination ?TRANSPORT ?X)))))))))

(=>
  (instance ?SVC Shuttle)
  (modalProbability
    (exists (?GRP1 ?GRP2)
      (and
        (instance ?GRP1 GroupOfPeople)
        (instance ?GRP2 GroupOfPeople)
        (patient ?SVC ?GRP1)
        (patient ?SVC ?GRP2)
        (not (equal ?GRP1 ?GRP2)))) Possibility))
        
(subclass AirportShuttleService ShuttleService)
(documentation AirportShuttleService EnglishLanguage "&%AirportShuttleService is a
type of &%ShuttleService that has an &%Airport as one of its stops")
(termFormat EnglishLanguage AirportShuttleService "airport shuttle")

(=>
  (instance ?SVC AirportShuttleService)
  (exists (?AIRPORT ?TRANSPORT)
    (and 
      (instance ?AIRPORT Airport)
      (instance ?TRANSPORT Transportation)
        (or
          (destination ?TRANSPORT ?AIRPORT)
          (origin ?TRANSPORT ?AIRPORT)))))

(subclass TourService ServiceProcess)
(documentation TourService EnglishLanguage "&%TourService is the process of taking
customers to different &%TouristSite")
(termFormat EnglishLangauge TourService "tour service")

(=>
  (instance ?TOUR TourService)
  (exists (?SITE ?SUBTOUR)
    (and
      (instance ?SITE TouristSite)
      (instance ?SUBTOUR Transportation)
      (destination ?SUBTOUR ?SITE)
      (subProcess ?SUBTOUR ?TOUR))))

(subclass CurrencyExchangeService ServiceProcess)
(documentation CurrencyExchangeService EnglishLanguage "&%CurrencyExchangeService is a
type of service where some amount in a certain currency is exchange for an equivalent
amount in another currency")
(termFormat EnglishLanguage CurrencyExchangeService "currency exchange")

(=>
  (instance ?X CurrencyExchangeService)
  (exists (?AMT1 ?NUM1 ?CURR1 ?NUM2 ?CURR2 ?AMT2 ?AGENT ?CUST ?GIVE1 ?GIVE2)
    (and
      (instance ?AMT1 CurrencyMeasure)
      (equal ?AMT1 (MeasureFn ?NUM1 ?CURR1))
      (instance ?CURR1 UnitOfCurrency)
      (holdsDuring
        (WhenFn ?X)
        (currencyExchangeRate ?CURR1 (MeasureFn ?NUM2 ?CURR2)))
      (equal ?AMT2 (MeasureFn (MultiplicationFn ?NUM1 ?NUM2) ?CURR2))
      (instance ?GIVE1 Giving)
      (agent ?GIVE1 ?CUST)
      (patient ?GIVE1 ?AMT1)
      (destination ?GIVE1 ?AGENT)
      (instance ?GIVE2 Giving)
      (agent ?GIVE2 ?AGENT)
      (patient ?GIVE2 ?AMT2)
      (destination ?GIVE2 ?CUST)
      (before ?GIVE1 ?GIVE2)
      (subProcess ?GIVE1 ?X)
      (subProcess ?GIVE2 ?X)
      (serviceProvider ?X ?AGENT))))
      
(subclass PhotocopyingService ServiceProcess)
(documentation PhotocopyingService EnglishLanguage "&%PhotocopyingService is a type of
&%ServiceProcess wherein a &%copy of a document is created for a customer")
(termFormat EnglishLanguage PhotocopyingService "photocopying")

(=>
  (instance ?X PhotocopyingService)
  (exists (?COPY)
    (and
      (instance ?COPY Copying)
      (subProcess ?COPY ?X))))
      
(=>
  (and
    (instance ?X PhotocopyingService)
    (serviceProvider ?X ?AGENT))
  (exists (?DEVICE)
    (and
      (instance ?DEVICE Device)
      (hasPurpose ?DEVICE
        (exists (?COPY)
          (and
            (instance ?COPY Copying)
            (instrument ?COPY ?DEVICE))))
      (possesses ?AGENT ?DEVICE)
      (instrument ?X ?DEVICE))))
      
(subclass CheckInService ServiceProcess)
(documentation CheckInService EnglishLanguage "&%CheckInService refers to the process
of informing a &%serviceProvider that the &%customer is ready for some &%Process
to begin")
(termFormat EnglishLanguage CheckInService "check-in service")

(=>
  (instance ?CHECK CheckInService)
  (exists (?AGENT ?CUST ?GREET ?SERVICE)
    (and
      (customer ?CUST ?AGENT)
      (serviceProvider ?CHECK ?AGENT)
      (instance ?GREET Greeting)
      (agent ?GREET ?CUST)
      (destination ?GREET ?AGENT)
      (subProcess ?GREET ?CHECK)
      (instance ?SERVICE Process)
      (agent ?SERVICE ?AGENT)
      (causes ?CHECK ?SERVICE))))

(subclass SelfServiceCheckIn CheckInService)
(documentation SelfServiceCheckIn EnglishLanguage "&%SelfServiceCheckIn is a type of
&%CheckInService that does not involve interfacing with a &%Human. Instead, some
automated process is put in place")
(termFormat EnglishLanguage SelfServiceCheckIn "self-service check-in")

(=>
  (instance ?CHECK SelfServiceCheckIn)
  (exists (?AGENT)
    (and
      (agent ?CHECK ?AGENT)
      (not (instance ?AGENT Human)))))
      
(subclass CheckOutService ServiceProcess)
(documentation CheckOutService EnglishLanguage "&%CheckOutService is a type of &%ServiceProcess
where a &%customer announces his departure, signalling the end of the core service
being offered to him.  This is normally where bills are settled")
(termFormat EnglishLanguage CheckOutService "check-out service")

(=>
  (instance ?CHECK CheckOutService)
  (exists (?CHECKIN)
    (and
      (instance ?CHECKIN CheckInService)
      (before ?CHECKIN ?CHECK))))

(=>
  (and
    (instance ?CHECKIN CheckInService)
    (causes ?CHECKIN ?SERVICE)
    (instance ?CHECKOUT CheckOutService))
  (finishes
    (WhenFn ?CHECKOUT)
    (WhenFn ?SERVICE)))
    
(subclass SelfServiceCheckOut CheckOutService)
(documentation SelfServiceCheckOut EnglishLanguage "&%SelfServiceCheckOut is a type of
&%CheckOutService that does not involve interfacing with a &%Human. Instead, some
automated process is put in place")
(termFormat EnglishLanguage SelfServiceCheckOut "self-service check-out")

(=>
  (instance ?CHECK SelfServiceCheckOut)
  (exists (?AGENT)
    (and
      (agent ?CHECK ?AGENT)
      (not (instance ?AGENT Human)))))

(subclass VideoCheckOut SelfServiceCheckout)
(documentation VideoCheckOut EnglishLanguage "&%VideoCheckOut is a type of 
&%SelfServiceCheckOut where a &%VideoDisplay in a person's &%HotelUnit is used
to do &%CheckOutService")
(termFormat EnglishLanguage VideoCheckOut "video check-out")

(=>
  (instance ?CHECK VideoCheckOut)
  (exists (?VD)
    (and
      (instance ?VD VideoDisplay)
      (instrument ?CHECK ?VD))))
      
(=>
  (serviceAmenity ?HR VideoCheckOut)
  (exists (?VD ?ROOM)
    (and
      (instance ?VD VideoDisplay)
      (capability VideoCheckOut instrument ?VD)
      (located ?VD ?ROOM)
      (instance ?ROOM ?HR))))

(subclass ExecutiveService ServiceProcess)
(documentation ExecutiveService EnglishLangauge "&%ExecutiveService is the class of
&%ServiceProcess that are directed towards guests staying at rooms in an &%ExecutiveLevel")
(termFormat EnglishLanguage ExecutiveService "executive service")

(=>
  (instance ?SVC ExecutiveService)
  (exists (?HUMAN ?LEVEL ?ROOM)
    (and
      (serviceRecipient ?SVC ?HUMAN)
      (stays ?HUMAN ?ROOM)
      (located ?ROOM ?LEVEL)
      (attribute ?LEVEL ExecutiveLevel))))

      
(subclass SafetyDepositService ServiceProcess)
(documentation SafetyDepositService EnglishLanguage "&%SafetyDepositService is a type
of &%ServiceProcess that involves a &%serviceProvider &%Keeping objects for a 
&%customer in a &%SafeContainer.  This could apply to a &%HotelFrontDesk keeping
things in a safety deposit box, or a bank doing the same thing.")
(termFormat EnglishLanguage SafetyDepositService "safety deposit box")

(=>
  (instance ?SVC SafetyDepositService)
  (exists (?SAFE ?KEEP ?OBJ ?AGENT)
    (and
      (serviceProvider ?SVC ?AGENT)
      (instance ?SAFE SafeContainer)
      (instance ?KEEP Keeping)
      (located ?KEEP ?SAFE)
      (possesses ?AGENT ?SAFE)
      (patient ?KEEP ?OBJ)
      (subProcess ?KEEP ?SVC)
      (not (possesses ?AGENT ?OBJ)))))

(subclass MedicalService ServiceProcess)
(documentation MedicalService EnglishLanguage "&%MedicalService is a type of 
&%ServiceProcess involving some &%DiagnosticProcess or &%TherapeuticProcess administered
by a &%MedicalDoctor")
(termFormat EnglishLanguage MedicalService "medical service")

(=>
  (instance ?MS MedicalService)
  (exists (?AGENT ?HUMAN ?PROC)
    (and
      (agent ?MS ?AGENT)
      (employs ?AGENT ?HUMAN)
      (attribute ?HUMAN MedicalDoctor)
      (serviceProvider ?MS ?HUMAN)
      (or
        (instance ?PROC TherapeuticProcess)
        (instance ?PROC DiagnosticProcess))
      (subProcess ?PROC ?MS))))
      
;; ---------------------------------------------------------------------------------
;; Other CommercialAgents that can be found inside Hotel
;; ---------------------------------------------------------------------------------

;; PassengerCarRental from naics.kif
(=>
  (attribute ?X PassengerCarRental)
  (hasPurpose ?X
    (exists (?RENT ?CAR ?CUST)
      (and
        (customer ?CUST ?X)
        (instance ?CAR Automobile)
        (instance ?RENT Renting)
        (possesses ?X ?CAR)
        (agent ?RENT ?CUST)))))
        
;; WellnessSpa
(subAttribute WellnesDaySpa FitnessAndRecreationalSportsCenters)
(documentation WellnessDaySpa EnglishLanguage "&%WellnessDaySpa refers to a type of
&%FitnessAndRecreationalSportsCenters that offer services for relaxation such as 
facials or massages")
(termFormat EnglishLanguage WelnessDaySpa "wellness spa")

(=>
  (attribute ?X WellnessDaySpa)
  (hasPurpose ?X
    (exists (?MASSAGE)
      (and
        (instance ?MASSAGE Massaging)
        (agent ?MASSAGE ?X)))))

;; TravelArrangementAndReservationServices
(=>
  (attribute ?X TravelArrangementAndReservationServices)
  (hasPurpose ?X
    (exists (?PROC ?RESERVE)
      (and
        (instance ?RESERVE TravelReservation)
        (instance ?PROC IntentionalProcess)
        (agent ?PROC ?X)
        (or
          (result ?PROC ?RESERVE)
          (patient ?PROC ?RESERVE))))))

;; Tour Arrangement and Reservation Services
(subAttribute TourArrangementAndReservationServices TravelArrangementAndReservationServices)
(documentation TourArrangementAndReservationServices EnglishLanguage 
"&%TourArrangementAndReservationServices refers to the service of arranging the taking
of customers to %&TouristSites")
(termFormat EnglishLanguage TourArrangementAndReservationServices 
"tour arrangement and reservation services")

(=>
  (attribute ?X TourArrangementAndReservationServices)
  (hasPurpose ?X
    (exists (?PROC ?RESERVE)
      (and
        (instance ?RESERVE TourReservation)
        (instance ?PROC IntentionalProcess)
        (agent ?PROC ?X)
        (or
          (result ?PROC ?RESERVE)
          (patient ?PROC ?RESERVE))))))

;; Florists
(=>
  (attribute ?X Florists)
  (hasPurpose ?X
    (exists (?FLOWER ?PROC)
      (and
        (instance ?PROC Designing)
        (instance ?FLOWER Collection)
        (memberType ?FLOWER Flower)
        (patient ?PROC ?FLOWER)
        (agent ?PROC ?X)))))
        
;; GiftNoveltyAndSouvenirStores
(=>
  (attribute ?X GiftNoveltyAndSouvenirStores)
  (and
    (instance ?X RetailStore)
    (hasPurpose ?X
      (exists (?SELL ?OBJ)
        (and
          (instance ?SELL Selling)
          (agent ?SELL ?X)
          (patient ?SELL ?OBJ)
          (instance ?OBJ Object))))))

;; NewsDealersAndNewsstands
(=>
  (attribute ?X NewsDealersAndNewsstands)
  (hasPurpose ?X
    (exists (?SELL ?NEWS)
      (and
        (instance ?NEWS Newspaper)
        (instance ?SELL Selling)
        (patient ?SELL ?NEWS)
        (agent ?SELL ?X)))))

;;  SnackAndNonalcoholicBeverageBar
(=>
  (attribute ?X SnackAndNonalcoholicBeverageBars)
  (hasPurpose ?X
    (exists (?SELL ?FOOD)
      (and
        (instance ?FOOD (FoodForFn Human))
        (instance ?SELL Selling)
        (patient ?SELL ?FOOD)
        (agent ?SELL ?X)))))


;; ticket or theater desk
(subclass ArtsAndRecreationTicketingServices PerformingArtsSpectatorSportsAndRelatedIndustries)
(documentation ArtsAndRecreationTicketingServices EnglishLanguage "&%ArtsAndRecreationTicketingServices
refer to agencies that sell &%Ticket to &%Sport events or &%Performance")
(termFormat EnglishLanguage  ArtsAndRecreationTicketingServices "arts and recreation tickets")

(=>
  (attribute ?X ArtsAndRecreationTicketingServices)
  (hasPurpose ?X
    (exists (?SELL ?TICKET)
      (and
        (instance ?SELL Selling)
        (patient ?SELL ?TICKET)
        (agent ?SELL ?X)
        (instance ?TICKET Ticket)
        (destination ?SELL ?CUST)
        (hasPurpose ?TICKET
          (confersRight
            (exists (?WATCH ?PERF)
              (and
                (instance ?WATCH Seeing)
                (agent ?WATCH ?CUST)
                (patient ?WATCH ?PERF)
                (or
                  (instance ?PERF Performance)
                  (instance ?PERF Sport)))) Permission))))))

;; hair salon

(=>
  (attribute ?X BarberShops)
  (hasPurpose ?X
    (exists (?HAIR ?HUMAN ?CUT ?STYLIST)
      (and
        (instance ?HAIR Hair)
        (part ?HAIR ?HUMAN)
        (instance ?HUMAN Human)
        (instance ?CUT Cutting)
        (patient ?CUT ?HAIR)
        (located ?CUT ?X)
        (agent ?CUT ?STYLIST)
        (employs ?X ?STYLIST)))))
                  
        
;; ---------------------------------------------------------------------------------
;; Hotel Employees
;; ---------------------------------------------------------------------------------        

(instance Porter ServicePosition)
(documentation Porter EnglishLanguage "&%Porter refers to a &%Human employed to carry
luggages and other supplies")
(termFormat EnglishLanguage Porter "porter")

(=>
  (attribute ?X Porter)
  (hasPurpose ?X
    (exists (?LUGGAGE ?CARRY)
      (and
        (instance ?LUGGAGE TravelContainer)
        (instance ?CARRY Carrying)
        (agent ?CARRY ?X)))))
        
(=>
  (and
    (customer ?CUST ?AGENT)
    (employs ?AGENT ?X)
    (attribute ?AGENT TravelerAccommodation)
    (attribute ?X Porter)
    (possesses ?CUST ?LUGGAGE)
    (instance ?LUGGAGE TravelContainer))
  (exists (?ROOM ?CARRY)
    (and
      (instance ?ROOM HotelUnit)
      (instance ?CARRY Carrying)
      (agent ?CARRY ?X)
      (or
        (destination ?CARRY ?ROOM)
        (origin ?CARRY ?ROOM)))))
        
(instance Concierge ServicePosition)
(documentation Concierge EnglishLanguage "&%Concierge refers to the position held by
a hotel employee whose primary job it is to help or assist customers of the hotel by
answering questions, providing reservations, etc.")
(termFormat EnglishLanguage Concierge "concierge")

(=>
  (attribute ?X Concierge)
  (hasPurpose ?X
    (exists (?HELP)
      (and
        (instance ?HELP Helping)
        (agent ?HELP ?X)))))

(instance Doorman ServicePosition)
(documentation Doorman EnglishLanguage "&%Doorman refers to the position held by a
person whose primary job it is to open and close doors")
(termFormat EnglishLanguage Doorman "doorman")

(=>
  (instance ?X Doorman)
  (hasPurpose ?X
    (exists (?DOOR ?PROC)
      (and
        (instance ?DOOR Door)
        (agent ?PROC ?X)
        (patient ?PROC ?DOOR)
        (or
          (instance ?PROC Opening)
          (instance ?PROC Closing))))))
        
;; ---------------------------------------------------------------------------------
;; Policy
;; ---------------------------------------------------------------------------------

;; in the wordnet mappings, Policy is subsumed by Plan, however looking at the definition
;; of Plan in SUMO, it is subclassed from Procedure, which is a "sequence-dependent
;; specification", which is not necessarily the case. As such, will be subclassing
;; it from Proposition instead.

(subclass Policy Proposition)
(documentation Policy EnglishLanguage "&%Policy is a type of &%Proposition created and
enforced by an &%Organization such as a government or a business, which contains guiding
principles or a plan or course of action adopted by that organization.")
(termFormat EnglishLanguage Policy "policy")

(=>
  (instance ?POLICY Policy)
  (exists (?ORG)
    (policyOwner ?ORG ?POLICY)))
    
    
(instance policyOwner BinaryPredicate)
(documentation policyOwner EnglishLanguage "(&%policyOwner ?&%Organization ?&%Policy)
describes how ?&%Policy is adopted and enforced by ?&%Organization")
(termFormat EnglishLanguage policyOwner "policy owner")
(domain policyOwner 1 Organization)
(domain policyOwner 2 Policy)

(=>
  (policyOwner ?AGENT ?POLICY)
  (exists (?CREATE)
    (and
      (instance ?CREATE Creation)
      (agent ?CREATE ?AGENT)
      (result ?CREATE ?POLICY))))
 
(instance policyLocationCoverage BinaryPredicate)
(documentation policyLocationCoverage EnglishLanguage "(&%policyLocationCoverage 
?&%Policy ?&%GeographicArea) creates a relationship for policies that are restricted
to certain areas or location.  This relation means that ?&%Policy enforcement is 
confined to ?%&GeographicArea")
(domain policyLocationCoverage 1 Policy)
(domain policyLocationCoverage 2 Object)

(subclass SmokingPolicy Policy)
(documentation SmokingPolicy EnglishLanguage "&%SmokingPolicy refers to a policy
that indicates how &%Smoking is or is not allowed within a certain location")
(termFormat EnglishLanguage SmokingPolicy "smoking policy")

(=>
  (and
    (instance ?POLICY SmokingPolicy)
    (policyLocationCoverage ?POLICY ?LOC))
  (or
    (containsInformation ?POLICY
      (modalAttribute
        (exists (?SMOKE1)
          (and
            (instance ?SMOKE1 Smoking)
            (located ?SMOKE1 ?LOC)))) Permission)
    (containsInformation ?POLICY
      (modalAttribute
        (exists (?SMOKE2)
          (and
            (instance ?SMOKE2 Smoking)
            (located ?SMOKE2 ?LOC)))) Prohibition)))
    
;; no smoking
(=>
  (and
    (instance ?POLICY SmokingPolicy)
    (containsInformation ?POLICY
      (modalAttribute
        (exists (?SMOKE)
          (and
            (instance ?SMOKE Smoking)
            (located ?SMOKE ?LOC)))) Prohibition)
    (policyLocationCoverage ?POLICY ?LOC)
    (policyOwner ?AGENT ?POLICY)
    (customer ?CUST ?AGENT))
  (not
    (confersRight
      (exists (?SMOKING)
        (and
          (instance ?SMOKING Smoking)
          (agent ?SMOKING ?CUST)
          (located ?SMOKING ?LOC))) ?AGENT ?CUST)))

;; smoking allowed
(=>
  (and
    (instance ?POLICY SmokingPolicy)
    (containsInformation ?POLICY
      (modalAttribute
        (exists (?SMOKE)
          (and
            (instance ?SMOKE Smoking)
            (located ?SMOKE ?LOC)))) Permission)
    (policyLocationCoverage ?POLICY ?LOC)
    (policyOwner ?AGENT ?POLICY)
    (customer ?CUST ?AGENT))
  (confersRight
    (exists (?SMOKING)
      (and
        (instance ?SMOKING Smoking)
        (agent ?SMOKING ?CUST)
        (located ?SMOKING ?LOC))) ?AGENT ?CUST))
                
(subclass PetPolicy Policy)
(documentation PetPolicy EnglishLanguage "&%PetPolicy indicates where &%DomesticAnimal
is allowed or not in the premises")
(termFormat EnglishLanguage PetPolicy "pet policy")

(=>
  (and
    (instance ?POLICY PetPolicy)
    (policyLocationCoverage ?POLICY ?LOC))
  (or
    (containsInformation ?POLICY 
      (modalAttribute
        (exists (?PET1)
          (and
            (instance ?PET1 DomesticAnimal)
            (located ?PET1 ?LOC))) Permission))
    (containsInformation ?POLICY 
      (modalAttribute
        (exists (?PET2)
          (and
            (instance ?PET2 DomesticAnimal)
            (located ?PET2 ?LOC))) Prohibition))))

;; pets allowed            
;; if a pet policy allows pets, then the policy owner confers the right for the pet
;; to be within the determined location with its owner
(=>
  (and
    (instance ?POLICY PetPolicy)
    (policyLocationCoverage ?POLICY ?LOC)
    (policyOwner ?AGENT ?POLICY)
    (customer ?CUST ?AGENT)
    (possesses ?CUST ?PET)
    (instance ?PET DomesticAnimal)
    (containsInformation ?POLICY 
      (modalAttribute
        (exists (?PET1)
          (and
            (instance ?PET1 DomesticAnimal)
            (located ?PET1 ?LOC))) Permission)))
  (confersRight
    (holdsDuring
      (WhenFn (located ?CUST ?LOC))
      (located ?PET ?LOC)) ?AGENT ?CUST))
      
;; pets allowed            
;; if a pet policy allows pets, then the policy owner confers the right for the pet
;; to be within the determined location with its owner
(=>
  (and
    (instance ?POLICY PetPolicy)
    (policyLocationCoverage ?POLICY ?LOC)
    (policyOwner ?AGENT ?POLICY)
    (customer ?CUST ?AGENT)
    (possesses ?CUST ?PET)
    (instance ?PET DomesticAnimal)
    (containsInformation ?POLICY 
      (modalAttribute
        (exists (?PET1)
          (and
            (instance ?PET1 DomesticAnimal)
            (located ?PET1 ?LOC))) Prohibition)))
  (not
    (confersRight
      (holdsDuring
        (WhenFn (located ?CUST ?LOC))
        (located ?PET ?LOC)) ?AGENT ?CUST)))

(subclass ChildrenPolicy Policy)
(documentation ChildrenPolicy EnglishLanguage "&%ChildrenPolicy dictates if &%HumanChild
is allowed or not in an establishment")
(termFormat EnglishLanguage ChildrenPolicy "children policy")

(=>
  (and
    (instance ?POLICY ChildrenPolicy)
    (policyOwner ?AGENT ?POLICY)
    (policyLocationCoverage ?POLICY ?LOC))
  (or
    (containsInformation ?POLICY
      (modalAttribute
        (exists (?CUST1)
          (and
            (customer ?CUST1 ?AGENT)
            (instance ?CUST1 HumanChild))) Possibility))
    (containsInformation ?POLICY
      (not
        (modalAttribute
          (exists (?CUST2)
            (and
              (customer ?CUST2 ?AGENT)
              (instance ?CUST2 HumanChild)))) Possibility))))
                
(=>
  (and
    (instance ?POLICY ChildrenPolicy)
    (policyOwner ?AGENT ?POLICY)
    (policyLocationCoverage ?POLICY ?LOC)
    (containsInformation ?POLICY
      (not
        (modalAttribute
          (exists (?CUST)
            (and
              (customer ?CUST ?AGENT)
              (instance ?CUST HumanChild))) Possibility))))
  (deprivesNorm ?AGENT
    (exists (?HUMAN)
      (and
        (instance ?HUMAN HumanChild)
        (located ?HUMAN ?LOC))) Permission))
              
;; -------------------------------------------------------------------------------
;; To be fully defined at a later date
;; -------------------------------------------------------------------------------

(subclass TravelReservation Reservation)
(documentation TravelReservation EnglishLanguage "&%TravelReservation refers to a 
&%Reservation that describes combined services for travel such as flight, hotels, etc")
(termFormat EnglishLangauge TravelReservation "travel reservation")

(=>
  (instance ?X TravelReservation)
  (modalAttribute
    (exists (?FLIGHT)
      (and
        (instance ?FLIGHT FlightReservation)
        (subProposition ?FLIGHT ?X))) Likely))

(subclass FlightReservation Reservation)
(documentation FlightReservation EnglishLanguage "&%FlightReservation refers to a 
&%Reservation specifically for Airline flights")
(termFormat EnglishLangauge FlightReservation "flight reservation")

(subclass TourReservation Reservation)
(documentation TourReservation EnglishLanguage "&%TourReservation refers to a &%Reservation
specifically for &%TourService")
(termFormat EnglishLanguage TourReservation "tour reservation")