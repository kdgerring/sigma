;; ============================================================================
;;                  	 REARDEN COMMERCE, INC.
;;                	Catalog and Selling Ontology
;; ============================================================================

;; Created by: Karen Joy Nomorosa (karen.nomorosa [at] reardencommerce [dot] com)
;; Created on: September 13, 2011
;; Last modified: September 13, 2011
;; Modified by: Karen Joy Nomorosa (karen.nomorosa [at] reardencommerce [dot] com)

;; Description:  This ontology contains suggestions for changes to anything related to
;; Music, as well as additional relationships as suggested by Wikipeda Infobox Templates

;; Access to and use of these products is governed by the GNU General Public 
;; License <http://www.gnu.org/copyleft/gpl.html>. 
;; By using these products, you agree to be bound by the terms 
;; of the GPL.

;; We ask the people using or referencing this work cite our primary paper:
;; Niles, I., and Pease, A.  2001.  Towards a Standard Upper Ontology.  In 
;; Proceedings of the 2nd International Conference on Formal Ontology in 
;; Information Systems (FOIS-2001), Chris Welty and Barry Smith, eds, 
;; Ogunquit, Maine, October 17-19, 2001.  See also http://www.ontologyportal.org

;; ----------------------------------------------------------------------------------
;; Concepts Related to Music
;; ----------------------------------------------------------------------------------

(subclass Music Proposition)
(documentation Music EnglishLanguage "&%Music refers to the conception of music - it's
notes, tempo, arrangement, lyrics, etc. as thought by its composers and lyricist.  Some
types of &%Music are conceptualized with only the background instrumentation thought of,
while some types of &%Music are conceptualized with the thought of having both lyrics
and musical composition combined.")
(termFormat EnglishLanguage Music "music")

(=>
  (and
    (instance ?MC Music)
    (realization ?MUSIC ?MC))
  (instance ?MUSIC MakingMusic))

(subclass MusicalComposition Music)
(documentation MusicalComposition EnglishLanguage "&%MusicalComposition refers to the
the conception of a musical arrangement not including any &%LyricalContent.")
(termFormat EnglishLanguage MusicalComposition "musical composition")
(comment MusicalComposition "Currently, MusicalComposition is treated as text, and there 
is no propositional content related to it.  This is dangerous, as there could be millions 
of instances of (for instance) sheet music containing Beethoven's Fifth Symphony, and 
only having MusicalComposition equal to an object would imply that all of this different 
instances are different from each other.  You could also have many different arrangements 
of the same musical composition.  As such, I propose making MusicalComposition a Proposition, 
which refers more to the conception of the music, and SheetMusic the content bearing 
object that contains information about a particular MusicalComposition.  (09-13-2011)" 
"KJN")

(=> 
  (and
    (instance ?MC MusicalComposition)
    (realization ?MC ?MUSIC))
  (not
    (exists (?LC ?V)
      (and
        (instance ?V MakingVocalMusic)
        (patient ?V ?LC)
        (instance ?LC LyricalContent)
        (subProcess ?V ?MUSIC)))))
        
(subclass Song Music)
(documentation Song EnglishLanguage "&%Song refers to the conception of music that 
includes both &%MusicalComposition and &%LyricalComposition.  While a &%Song can be
interpreted without its &%LyricalContent, or its &%LyricalContent is used elsewhere, 
the idea of &%Song as it was originally conceptualized is that it contains both.")
(termFormat EnglishLanguage Song "song")

(=>
  (and
    (instance ?S Song)
    (realization ?S ?MUSIC))
  (exists (?MM ?MV ?LC ?MC)
    (and
      (instance ?MM MakingMusic)
      (instance ?MV MakingVocalMusic)
      (instance ?LC LyricalContent)
      (instance ?MC MusicalComposition)
      (patient ?MM ?MC)
      (patient ?MV ?LC)
      (subProcess ?MM ?MUSIC)
      (subProcess ?MV ?MUSIC))))
  
      
(subclass LyricalContent Proposition)
(documentation LyricalContent EnglishLanguage "&%LyricalContent is the conceptual 
idea of &%Lyrics.")
(comment LyricalContent "It is important to distinguish the propositional 
content of &%Lyrics from the text that displays it.  Some songs are translated from one 
language to another, but use essentially the same Lyrical content. (09-15-2011)" "KJN")
(termFormat EnglishLanguage LyricalContent "lyrical content")

(=>
  (instance ?X LyricalContent)
  (hasPurpose ?X
    (exists (?S)
      (and
        (instance ?S MakingVocalMusic)
        (patient ?S ?X)))))  
        
(subclass SheetMusic ContentBearingObject)
(documentation SheetMusic EnglishLanguage "&%SheetMusic refers to the &%ContentBearingObject
that contains a representation of a &%MusicalComposition, using different musical 
symbols")
(termFormat EnglishLanguage SheetMusic "sheet music")

(=>
  (instance ?SM SheetMusic)
  (exists (?MC)
    (and
      (instance ?MC MusicalComposition)
      (constainsInformation ?SM ?MC))))

(subclass Recording ContentBearingObject)
(documentation Recording EnglishLanguage "&%Recording refers to a &%ContentBearingObject
that represents some &%Process that happened in real life")
(termFormat EnglishLanguage Recording "recording")

(=>
  (instance ?R Recording)
  (exists (?P)
    (and
      (instance ?P Process)
      (record ?R ?P))))

(comment AudioRecording "In Mid-level-ontology.kif, it says that (&%subclass &%AudioRecording
&%Text).  This does not seem right.  Deleting that statement.  Creating a parent class
called &%Recording which means something that captures a &%Process that happened in real life.
&%AudioRecording and &%VideoRecording will inherit from there.  A &%Photograph is also
a still recording of what happened in real life - as opposed to Graphic Art which is 
more of an &%ArtWork than a &%Recording, so it will also inherit from &%Recording.
(09-14-2011)" "KJN")

(subclass AudioRecording Recording)
(subclass VideoRecording Recording)
(subclass Photograph Recording)      
 
(subclass MusicRecording AudioRecording)
(documentation MusicRecording EnglishLanguage "&%MusicRecording refers to an &%AudioRecording
of the &%Process of &%MakingMusic.")
(termFormat EnglishLanguage MusicRecording "music recording")

(=>
  (instance ?M MusicRecording)
  (exists (?P)
    (and
      (instance ?P MakingMusic)
      (record ?M ?P))))

(subclass RecordingStudio StationaryArtifact)
(documentation RecordingStudio EnglishLanguage "A &%RecordingStudio is a &%StationaryArtifact,
such as a &%Room or &%Building that has the necessary equipment to professionaly 
produce a &%Recording.")
(termFormat EnglishLanguage RecordingStudio "recording studio")

(=>
  (instance ?S RecordingStudio)
  (hasPurpose ?S
    (exists (?R ?P)
      (and
        (instance ?R Recording)
        (result ?P ?R)
        (eventLocated ?P ?S)))))
        
(=>
  (instance ?S RecordingStudio)
  (exists (?D)
    (and
      (instance ?D Device)
      (hasPurpose ?D
        (exists (?R ?P)
          (and
            (instance ?R Recording)
            (instrument ?P ?D)
            (result ?P ?R))))
      (located ?D ?S))))
  
(subclass Album List)
(documentation Album EnglishLanguage "An &%Album is a &%List of &%Recordings that are packaged and sold as a unit.")
(termFormat EnglishLanguage Album "album")

(=>
  (instance ?L Album)
  (forall (?X)
    (=>
      (inList ?X ?L)
      (instance ?X Recording))))    

(subclass Discography Collection)
(documentation Discography EnglishLanguage "A &%Discography is the collection of all
released &%MusicRecording of a &%Musician.  This is different from something like a 
sessionography, which is a collection of all recording sessions, whether they have been
released for sale or not.")
(termFormat EnglishLanguage Discography "discography")

(=>
  (instance ?D Discography)
  (exists (?M)
    (and
      (instance ?M CognitiveAgent)
      (attribute ?M Musician)
      (forall (?X)
        (=>
          (member ?X ?D)
          (exists (?I ?T ?R ?DS)
            (and
              (musician ?X ?M ?I)
              (releaseForSale (AlbumCopiesFn ?X ?DS) ?R ?T))))))))
              
;; ----------------------------------------------------------------------------------
;; Processes Related to Music
;; ----------------------------------------------------------------------------------
      
(subclass ComposingMusic ContentDevelopment)
(documentation ComposingMusic EnglishLanguage "&%ComposingMusic is a type of &%ContentDevelopment
that results in a &%MusicalComposition")
(termFormat EnglishLanguage ComposingMusic "composing music")

(=>
  (instance ?C ComposingMusic)
  (exists (?M)
    (and
      (instance ?M MusicalComposition)
      (result ?C ?M))))

(subclass MakingMusic RadiatingSound)
(documentation MakingMusic EnglishLanguage "&%MakingMusic is a type of &%RadiatingSound
where the &%result is intended to be melodic and is produced delibrately")
(termFormat EnglishLanguage MakingMusic "making music")
(comment MakingMusic "Changing the old Music to &%MakingMusic to be more consistent with
the verb-form that &%Process seem to take. (09-14-2011)" "KJN")

(subclass MakingInstrumentalMusic MakingMusic)
(documentation MakingInstrumentalMusic EnglishLanguage "&%MakingInstrumentalMusic is a type
of &%MakingMusic which is produced using some kind of &%MusicalInstrument")
(termFormat EnglishLanguage MakingInstrumentalMusic "instrumental music")

(=>
  (instance ?M MakingInstrumentalMusic)
  (exists (?I)
    (and
      (instance ?I MusicalInstrument)
      (instrument ?M ?I))))

(subclass MakingVocalMusic MakingMusic)
(subclass MakingVocalMusic Vocalizing)
(documentation MakingVocalMusic EnglishLanguage "&%MakingVocalMusic is a type of
&%MakingMusic which is produced by using the vocal cords")
(termFormat EnglishLanguage MakingVocalMusic "singing")
(comment MakingVocalMusic "Currently, &%VocalMusic also inherits from &%Speaking.  Changing
this to more general &%Vocalizing.  Acapella groups today use their &%VocalCord to create
music in ways that are more than just speaking. (09-14-2011)" "KJN")

(comment ComposingMusic "Removing a definition for Composing, which basically has the
same definition of &%ComposingMusic in Mid-level-ontology.kif. (09-16-2011)" "KJN")


;; ----------------------------------------------------------------------------------
;; Relationships Related to Music or Record
;; ----------------------------------------------------------------------------------

;; ***** RECORDING ******

(subrelation record represents)
(documentation record EnglishLanguage "(&%record ?OBJ ?PHYS), a more specific relationship
than &%represents, means that some &%Physical ?PHYS is captured and interpreted into a 
&%ContentBearingObject that is stored in some &%DataStorageDevice")
(termFormat EnglishLanguage record "record")
(comment record "Adding a more specific relation than &%represents.  While &%represents
can be something like a &%Logo that represents a &%Brand, &%record is more strict in 
the sense that it is an accurate rendering of some &%Process that occurred in real life. 
(09-14-2011)." "KJN")

(domain record 1 ContentBearingObject)
(domain record 2 Physical)    

(=>
  (record ?REC ?PHYS)
  (equivalentContentInstance ?REC ?PHYS))
  
(=>
  (record ?REC ?PHYS)
  (exists (?DS)
    (and
      (instance ?DS DataStorageDevice)
      (stored ?REC ?DS))))
      
(instance stored BinaryPredicate)
(instance stored AntisymmetricRelation)
(instance stored TransitiveRelation)
(documentation stored EnglishLanguage "(&%stored ?REC ?OBJ) means that some 
&%ContentBearingObject, encoded in some format, is saved in some &%DataStorageDevice
and can be accessed in some future date.")
(termFormat EnglishLanguage stored "stored")
(comment stored "Adding a stored method that is specific to storing &%ContentBearingObject
such as &%SymbolicString, &%Recording, etc. in a &%DataStorageDevice.  Will be changing
some axioms to use this instead of other, vaguer ways of describing it." "KJN")

(domain stored 1 ContentBearingObject)
(domain stored 2 DataStorageDevice)

(=>
  (stored ?O ?D)
  (exists (?P)
    (and
      (instance ?P Writing)
      (destination ?P ?D)
      (patient ?P ?O))))
      
(=>
  (equal ?TIME (WhenFn (stored ?O ?D)))
  (holdsDuring ?TIME
    (modalAttribute
      (exists (?P)
        (patient ?P ?O)) Possibility)))
    
(instance producedOn BinaryPredicate)
(documentation producedOn EnglishLanguage "(&%producedOn ?R ?TP) refers to the date
that a &%Recording was finalized into a final copy that is ready for release.")
(termFormat EnglishLanguage producedOn "produced on")

(domain producedOn 1 Recording)
(domain producedOn 2 TimePoint)

(=>
  (producedOn ?R ?D)
  (exists (?P)
    (and
      (instance ?P Process)
      (result ?P ?R)
      (equal ?D
        (WhenFn
          (EndFn ?P))))))
    
(instance producedBy BinaryPredicate)
(documentation producedBy EnglishLanguage "(&%producedBy ?R ?A) &%Human ?A is responsible
for all decision-making processes that resulted in &%Recording ?R")
(termFormat EnglishLanguage producedBy "produced by")

(domain producedBy 1 Recording)
(domain producedBy 2 Human)

(=>
  (producedBy ?R ?A)
  (exists (?M ?P)
    (and
      (instance ?M Managing)
      (agent ?M ?A)
      (patient ?M ?P)
      (instance ?P Process)
      (result ?P ?R))))
      
(instance recordingLength BinaryPredicate)
(documentation recordingLength EnglishLanguage "(&%recordingLength ?R ?T) indicates 
that playing the complete &%Recording ?R from start to finish lasts &%TimeDuration ?T.")
(termFormat EnglishLanguage recordingLength "recording length")

(domain recordingLength 1 Recording)
(domain recordingLength 2 TimeDuration)

(=>
  (and
    (recordingLength ?R ?T)
    (instance ?R AudioRecording))
  (=>
    (and
      (instance ?L Listening)
      (patient ?L ?R))
    (duration (WhenFn ?L) ?T)))

(instance recordingCompany BinaryPredicate)
(documentation recordingCompany EnglishLanguage "(&%recordingCompany ?R ?C) means that 
&%RecordCompany ?C is responsible for the distribution and production of &%Recording ?R.")
(termFormat EnglishLanguage recordingCompany "recording company")

(domain recordingCompany 1 Recording)
(domain recordingCompany 2 Organization)
          
;; ***** MUSIC & MUSIC RECORDING ******
          
(subrelation composer creator)
(documentation composer EnglishLanguage "(&%composer ?AGENT ?COMPOSITION) means that 
&%CognitiveAgent ?AGENT created &%MusicalComposition ?COMPOSITION")
(termFormat EnglishLanguage composer "composer")
(comment composer "Right now, &%composer is a &%subrelation of &%authors, but &%authors
is related to a &%Text versus to a &%Proposition, so I'm changing it such that &%compsoer
now is a &%subrelation of &%creator, so that it can work with &%MusicalComposition, which
is now a &%subclass of &%Proposition. (09-14-2011)" "KJN")
(domain composer 1 CognitiveAgent)
(domain composer 2 MusicalComposition)

(=>
  (composer ?A ?M)
  (exists (?C)
    (and
      (agent ?C ?A)
      (result ?C ?M))))

(subrelation lyricist creator)
(documentation lyricist EnglishLanguage "(&%lyricist ?LC ?A) means that &%CognitiveAgent 
?A is the person who created &%LyricalContent ?LC.")
(termFormat EnglishLanguage lyricist "lyricist")

(domain lyricist 1 LyricalContent)
(domain lyricist 2 CognitiveAgent)      

(=>
  (lyricist ?LC ?A)
  (exists (?C)
    (and
      (agent ?C ?A)
      (result ?C ?LC))))

(instance musicInterpretation BinaryPredicate)
(documentation musicInterpretation EnglishLanguage "(&%musicInterpretation ?MR ?MC)
means that &%MusicRecording ?MR is a &%realization of &%Music ?MC")
(termFormat EnglishLanguage musicInterpretation "music interpretation")

(domain musicInterpretation 1 MusicRecording)
(domain musicInterpretation 2 Music)

(=>
  (musicInterpretation ?MR ?MC)
  (exists (?P)
    (and
      (instance ?P MakingMusic)
      (realization ?P ?MC)
      (record ?MR ?P))))
                
(instance musician TernaryPredicate)
(documentation musician EnglishLanguage "(&%musician ?MR ?P ?I) means that &%Human ?P
played some &%Process ?I as a &%Musician in &%MusicRecording ?MR")
(termFormat EnglishLanguage musician "musician")

(domain musician 1 MusicRecording)
(domain musician 2 Human)
(domainSubclass musician 3 MakingMusic)

(=>
  (musician ?MR ?P ?R)
  (or
    (exists (?I)
      (equal ?R (PlayingInstrumentFn ?I)))
    (equal ?R MakingVocalMusic)))
    
(instance songArtist BinaryPredicate)
(documentation songArtist EnglishLanguage "(&%songArtist ?MR ?A) means that &%CognitiveAgent
?A was the agent in recording &%MusicRecording ?MR")
(termFormat EnglishLanguage songArtist "song artist")

(domain songArtist 1 MusicRecording)
(domain songArtist 2 CognitiveAgent)

(=>
  (songArtist ?MR ?A)
  (exists (?M)
    (and
      (record ?MR ?M)
      (agent ?M ?A))))
      
(instance musicVideo BinaryPredicate)
(documentation musicVideo EnglishLanguage "(&%musicVideo ?M ?V) means that &%VideoRecording 
?V is a video recording that represents &%MusicRecording ?M.")
(termFormat EnglishLanguage musicVideo "music video")

(domain musicVideo 1 MusicRecording)
(domain musicVideo 2 VideoRecording)

(=>
  (musicVideo ?M ?V)
  (part ?M ?V))

(instance discography BinaryPredicate)
(documentation discography EnglishLanguage "(&%discography ?A ?D) means that &%CognitiveAgent
?A has &%Discography ?D")
(termFormat EnglishLanguage discography "discography")

(domain discography 1 CognitiveAgent)
(domain discography 2 Discography)

(=>
  (discography ?A ?D)
  (forall (?X)
    (=>
      (member ?X ?D)
      (exists (?I)
        (musician ?X ?A ?I)))))
        
;; ***** ALBUMS ******

(instance albumRelease BinaryPredicate)
(documentation albumRelease EnglishLanguage "(&%albumRelease ?A ?T) means that by 
&%TimePoint ?T, (&%AlbumCopiesFn ?A ?DS) was &%releaseForSale in some location. ")
(termFormat EnglishLanguage albumRelease "album release")

(domain albumRelease 1 Album)
(domain albumRelease 2 TimePoint)

(=>
  (albumRelease ?A ?T)
  (and
    (exists (?R1 ?DS1)
      (releaseForSale (AlbumCopiesFn ?A ?DS1) ?R1 ?T))
    (not
      (exists (?B ?R2 ?DS2)
        (and
          (before ?B ?T)
          (releaseForSale (AlbumCopiesFn ?A ?DS2) ?R2 ?B))))))          

(instance albumArtist BinaryPredicate)
(documentation albumArtist EnglishLanguage "(&%albumArtist ?A ?P) means that &%Album
?A features &%CognitiveAgent ?P as one of its main contributors")
(termFormat EnglishLanguage albumArtist "album artist")

(domain albumArtist 1 Album)
(domain albumArtist 2 CognitiveAgent)

(=>
  (albumArtist ?A ?P)
  (exists (?R ?M)
    (and
      (instance ?R Recording)
      (inList ?R ?A)
      (record ?R ?M)
      (agent ?M ?P))))

(instance albumType BinaryPredicate)
(documentation albumType EnglishLanguage "(&%albumType ?A ?ATTR) means that &%RecordingAttribute
?ATTR describes the contents of &%Album ?A")
(termFormat EnglishLanguage albumType "album type")

(domain albumType 1 Album)
(domain albumType 2 RelationalAttribute)

(=>
  (and
    (instance ?ATTR RecordingAttribute)
    (albumType ?A ?ATTR))
  (forall (?R)
    (=>
      (inList ?R ?M)
      (attribute ?R ?A))))

(=>
  (and
    (instance ?ATTR AlbumAttribute)
    (albumType ?A ?ATTR))
  (attribute ?A ?ATTR))

(instance albumCoverImage BinaryPredicate)
(documentation albumCoverImage EnglishLanguage "(&%albumCoverImage ?A ?I) means that
&%Album ?A is represented by &%Image ?I.  When a &%DataStorageDevice containing &%Album ?A,
its container would normally have the image on its front.")
(termFormat EnglishLanguage albumCoverImage "album cover")

(domain albumCoverImage 1 Album)
(domain albumCoverImage 2 Image)

(=>
  (albumCoverImage ?A ?I)
  (represents ?I ?A))

(=>
  (and
    (albumCoverImage ?A ?I)
    (instance ?CD (AlbumCopiesFn ?A ?DS))
    (contains ?C ?CD))
  (modalAttribute
    (part ?I (FrontFn ?C)) Likely))
    
(instance albumLength BinaryPredicate)
(documentation albumLength EnglishLanguage "(&%albumLength ?A ?T) means that &%TimeDuration
?T is the time it takes to view / listen to all &%Recording in &%Album ?A")
(termFormat EnglishLanguage slbumLength "album length")

(domain albumLength 1 Album)
(domain albumLength 2 TimeDuration)

(subrelation albumTrack inList)
(documentation albumTrack EnglishLanguage "(&%albumTrack ?A ?T) means that &%Recording
?T is part of &%Album ?A")
(termFormat EnglishLanguage albumTrack "album track")

(domain albumTrack 1 Recording)
(domain albumTrack 2 Album)

(subrelation musicGenre attribute)
(documentation musicGenre EnglishLanguage "(&%musicGenre ?MR ?ATTR) relates the 
&%MusicGenre ?ATTR to the &%MusicRecording ?MR")
(termFormat EnglishLanguage musicGenre "music genre")


;; ***** ANTHEM ******

(subrelation anthem represents)
(documentation anthem EnglishLanguage "(&%anthem ?M ?O) means that &%Music ?M is adopted
as a song that represents &%Object ?O.  This is most commonly used for &%Nation and royal
families.")
(termFormat EnglishLanguage anthem "anthem")

(domain anthem 1 Music)
(domain anthem 2 Object)

;; ----------------------------------------------------------------------------------
;; Attributes
;; ----------------------------------------------------------------------------------

(subclass RecordingAttribute RelationalAttribute)
(documentation RecordingAttribute EnglishLanguage "&%RecordingAttribute refers to 
&%RelationalAttributes that describe the conditions that a &%Recording was
recorded under.")
(termFormat EnglishLanguage RecordingAttribute "recording attribute")

(=>
  (attribute ?M RecordingAttribute)
  (instance ?M Recording))

(instance LiveRecording RecordingAttribute)
(documentation LiveRecording EnglishLanguage "&%LiveRecording refers to a 
&%MusicRecording that was captured directly from a &%Performance")
(termFormat EnglishLanguage LiveRecording "live recording")

(=>
  (and
    (attribute ?M LiveRecording)
    (instance ?M Recording))
  (exists (?P)
    (and
      (instance ?P Performance)
      (record ?M ?P))))
            
(instance StudioRecording RecordingAttribute)
(documentation StudioRecording EnglishLanguage "&%StudioRecording refers to a 
&%MusicRecording that was captured from sessions in a recording studio.")
(termFormat EnglishLanguage StudioRecording "studio recording")

(=> 
  (and
    (attribute ?M StudioRecording)
    (instance ?M Recording))
  (exists (?P)
    (and
      (record ?M ?P)
      (eventLocated ?P ?S)
      (instance ?S RecordingStudio))))

(instance DemoRecording RecordingAttribute)
(documentation DemoRecording EnglishLanguage "A &%DemoRecording refers to a &%Recording
that is meant to be for a smaller group of people and is not meant for release or
distribution to the public")
(termFormat EnglishLanguage DemoRecording "demo recording")

(=>
  (and
    (attribute ?M DemoRecording)
    (instance ?M Recording))
  (hasPurpose ?M
    (exists (?D ?G ?MUSIC)
      (and
        (instance ?D Demonstrating)
        (record ?M ?MUSIC)
        (patient ?D ?MUSIC)
        (destination ?D ?G)
        (instance ?G GroupOfPeople)))))

(instance MashupRecording RecordingAttribute)
(documentation MashupRecording EnglishLanguage "A &%MashupRecording refers to a &%Recording
that consists of two or more songs made into one song.")        
(termFormat EnglishLanguage MashupRecording "mashup")

(=>
  (and
    (attribute ?M MashupRecording)
    (instance ?M Recording))
  (exists (?M1 ?M2 ?S1 ?S2)
    (and
      (musicInterpretation ?M1 ?S1)
      (musicInterpretation ?M2 ?S2)
      (not (equal ?S1 ?S2))
      (part ?M1 ?M)
      (part ?M2 ?M))))

(instance RemixRecording RecordingAttribute)
(documentation RemixRecording EnglishLanguage "A &%RemixRecording refers to a &%Recording
that has an original &%Recording that was somehow altered by some &%CognitiveAgent while
still being able to recognize the original.")
(termFormat EnglishLanguage RemixRecording "remix recording")

(=>
  (and
    (attribute ?M RemixRecording)
    (instance ?M MusicRecording))
  (exists (?O ?A)
    (equal ?M (RemixFn ?O ?A))))

(instance CoverRecording RecordingAttribute)
(documentation CoverRecording EnglishLanguage "A &%CoverRecording refers to a &%MusicRecording
whose &%Music was recorded and released by somebody else before the artist of the current
recording.")
(termFormat EnglishLanguage CoverRecording "cover recording")

(=>
  (and
    (attribute ?MR CoverRecording)
    (instance ?MR MusicRecording)
    (songArtist ?MR ?A)
    (musicInterpretation ?MR ?M)
    (record ?MR ?MM))
  (exists (?ORIG ?ARTIST ?MUSIC)
    (and
      (musicInterpretation ?ORIG ?M)
      (songArtist ?ORIG ?ARTIST)
      (not (equal ?A ?ARTIST))
      (record ?ORIG ?MUSIC)
      (before (WhenFn ?MUSIC) (WhenFn ?MM)))))
      
      
(subclass AlbumAttribute RelationalAttribute)
(documentation AlbumAttribute EnglishLanguage "&%AlbumAttribute is used to describe the
contents of an &%Album")
(termFormat EnglishLanguage AlbumAttribute "album attribute")

(=>
  (and
    (attribute ?A ?ATTR)
    (instance ?ATTR AlbumAttribute))
  (instance ?A Album))
  
(instance CompilationAlbum AlbumAttribute)
(documentaiton CompilationAlbum EnglishLanguage "&%CompilationAlbum is used to describe
an &%Album who has more than one &%albumArtist (i.e. there exists two different artists
that contributed 2 different &%Recording to the album.")
(termFormat EnglishLanguage CompilationAlbum "compilation album")

(=>
  (attribute ?A CompilationAlbum)
  (exists (?A1 ?A2)
    (and
      (albumArtist ?A ?A1)
      (albumArtist ?A ?A2)
      (not (equal ?A1 ?A2)))))

;; --------------- MUSIC GENRE -----------------------------------------      
      
(subclass MusicGenre RelationalAttribute)
(documentation MusicGenre EnglishLanguage "&%MusicGenre is a categorical construct that
identifies musical sound as belonging to a particular category that can be distinguished
from other types of music.  They are attributes instead of subclasses of &%Music as 
the classification of a song to a particular genre is oftentimes arbitrary, as well 
as the fact that there are very closely related genres that oftentime overlap.  It is
applied to a &%MusicRecording instead of &%Music as a piece of &%Music can be reinterpreted
as a different genre by different artists.")
(termFormat EnglishLanguage MusicGenre "music genre")

(=>
  (and
    (instance ?ATTR MusicGenre)
    (attribute ?A ?ATTR))
  (or
    (instance ?A MakingMusic)
    (instance ?A MusicRecording)))
    
(instance Acapella MusicGenre)
(documentation Acapella EnglishLanguage "&%Acapella describes the &%MusicGenre that 
does not have any instrumental backing.")
(termFormat EnglishLanguage Acapella "acapella")

(=>
  (and
    (musicGenre ?MR Acapella)
    (record ?MR ?MM))
  (not
    (exists (?MI)
      (and
        (instance ?MI MakingInstrumentalMusic)
        (subProcess ?MI ?MM)))))

(instance AcidHouse MusicGenre)
(documentation AcidHouse EnglishLanguage "&%AcidHouse is a music style that 
originated in Detroit and Chicago, coming through Ibiza to Britain.")
(termFormat EnglishLanguage AcidHouse "acid house")

(instance AcidJazz MusicGenre)
(documentation AcidJazz EnglishLanguage "&%AcidJazz is a music style that 
combines &%Jazz, &%Funk and &%HipHop.")
(termFormat EnglishLanguage AcidJazz "acid jazz")
(relatedInternalConcept AcidJazz Jazz)
(relatedInternalConcept AcidJazz Funk)
(relatedInternalConcept AcidJazz HipHop)

(instance AcidRock MusicGenre)
(documentation AcidRock EnglishLanguage "&%AcidRock is a music style that 
is a form of psychedelic rock, characterized by long instrumental solos, few
if any, lyrics, and musical improvisation.")
(termFormat EnglishLanguage AcidRock "acid rock")

(instance AcousticMusic MusicGenre)
(documentation AcousticMusic EnglishLanguage "&%AcousticMusic is a music genre style 
that solely uses instruments which produce sound through entirely acoustic means as 
opposed to electric means")
(termFormat EnglishLanguage AcousticMusic "acoustic")

(=>
  (and
    (musicGenre ?MR AcousticMusic)
    (record ?MR ?MM))
  (not
    (exists (?I ?ED)
      (and
        (instance ?I MusicalInstrument)
        (instrument ?MM ?I)
        (instance ?ED ElectronicDevice)
        (part ?ED ?I)))))

(instance AlternativeCountry MusicGenre)
(documentation AlternativeCountry EnglishLanguage "&%AlternativeCountry is a music
style that was a reaction against the 1990s highly-polished Nashville Sound")
(termFormat EnglishLanguage AlternativeCountry "alternative country")
(relatedInternalConcept AlternativeCountry Country)

(instance AlternativeDance MusicGenre)
(documentation AlternativeDance EnglishLanguage "&%AlternativeDance is a music style that
combines elements of dance-pop (or other forms of electronic house or techno) and alternative
rock genres such as indie rock.")
(termFormat EnglishLanguage AlternativeDance "alternative dance")
(relatedInternalConcept AlternativeDance AlternativeRock)
(relatedInternalConcept AlternativeDance DancePop)

(instance AlternativeRock MusicGenre)
(documentation AlternativeRock EnglishLanguage "broad movement born in the 1980s generally
relegated to the underground music scene and operating outsoide of the mainstream.")
(termFormat EnglishLanguage AlternativeRock "alternative rock")

(instance Ballad MusicGenre)
(documentation Ballad EnglishLanguage "&%Ballad is a generic term used for slow, romantic,
despairing and catastrophic songs.")
(termFormat EnglishLanguage Ballad "ballad")

(instance Bebop MusicGenre)
(documentation Bebop EnglishLanguage "&%Bebop is a 1940's jazz style with complex
improvisation and a fast tempo.")
(termFormat EnglishLanguage Bebop "bebop")
(relatedInternalConcept Bebop Jazz)

(instance BigBandMusic MusicGenre)
(documentation BigBandMusic EnglishLanguage "&%BigBandMusic refers to music by 
large orchestras that play a form of swing music.")
(termFormat EnglishLanguage BigBandMusic "big band music")

(instance Bluegrass MusicGenre)
(documentation Bluegrass EnglishLanguage "&%Bluegrass is American country music mixed
with Irish and Scottish influences.")
(termFormat EnglishLanguage Bluegrass "bluegrass")
(relatedInternalConcept Bluegrass CountryMusic)

(instance BluesMusic MusicGenre)
(documentation BluesMusic EnglishLanguage "&%BluesMusic is African-American music
that originated in the Mississippi delta.")
(termFormat EnglishLanguage BluesMusic "blues")

(instance ChamberMusic MusicGenre)
(documentation ChamberMusic EnglishLanguage "&%ChamberMusic is a genre of music based 
around small, acoustic-based ensembles where group interplay is important.")
(termFormat EnglishLanguage ChamberMusic "chamber music")
(relatedInternalConcept ChamberMusic AcousticMusic)

(instance ChristmasMusic MusicGenre)
(documentation ChristmasMusic EnglishLanguage "&%ChristmasMusic is composed of music
that is normally performed or heard around the &%Christmas season.")
(termFormat EnglishLanguage ChristmasMusic "christmas music")

(instance ReligiousMusic MusicGenre)
(documentation ReligiousMusic EnglishLanguage "&%ReligiousMusic is a type of music that
has been written to express either personal or communal belief about a religion.")
(termFormat EnglishLanguage ReligiousMusic "religious music")

(=>
  (musicGenre ?MR ReligiousMusic)
  (exists (?ATTR ?X)
    (and
      (instance ?ATTR ReligiousAttribute)
      (attribute ?X ?ATTR)
      (refers ?MR ?X))))

(subAttribute ChristianMusic ReligiousMusic)
(documentation ChristianMusic EnglishLanguage "&%ChristianMusic is a type of music
that has been written to express either personal or communal belief regarding Christian
life and faith.")
(termFormat EnglishLanguage ChristianMusic "christian music")

(=>
  (musicGenre ?MR ChristianMusic)
  (exists (?X)
    (and
      (attribute ?X Christian)
      (refers ?MR ?X))))
  
(instance ClassicalMusic MusicGenre)
(documentation ClassicalMusic EnglishLanguage "&%ClassicalMusic is a type of music that
is produced in or rooted in the traditions of Western liturgical and secular music, 
encompassing a broad period from roughly the 11th century to present times.  The centra
norms of this tradition became codified between 1550 and 1900, which is known as the
common practice period.")
(termFormat EnglishLanguage ClassicalMusic "classical music")

(instance CountryMusic MusicGenre)
(documentation CountryMusic EnglishLanguage "&%CountryMusic is a popular American music 
style that began in the southern part of the US.")
(termFormat EnglishLanguage CountryMusic "country music")

(subAttribute ElectronicDanceMusic ElectronicMusic)
(documentation ElectronicDanceMusic EnglishLanguage "&%ElectronicDanceMusic is a type
of music that is produced primarily for the purposes of use within a nightclub setting,
or in an environment that is centered upon dance-based entertainment.")
(termFormat EnglishLanguage ElectronicDanceMusic "electronic dance music")

(=>
  (musicGenre ?MR ElectronicDanceMusic)
  (hasPurpose ?MR
    (exists (?NC ?MM)
      (and
        (instance ?NC NightClub)
        (instance ?MM MakingMusic)
        (patient ?MM ?MR)
        (eventLocated ?MM ?NC)))))

(instance ElectronicMusic MusicGenre)
(documentation ElectronicMusic EnglishLanguage "&%ElectronicMusic is a type of music
that is produced using electronic musical instruments and electronic music technology
in its production.")
(termFormat EnglishLanguage ElectronicMusic "electronic music")

(=>
  (musicGenre ?MR ElectronicMusic)
  (exists (?DV ?MM)
    (and
      (instance ?DV ElectricDevice)
      (record ?MR ?MM)
      (instrument ?MM ?DV))))
        
(instance EmoMusic MusicGenre)
(documentation EmoMusic EnglishLanguage "&%EmoMusic describes a style of &%RockMusic 
characterized by melodic musicianship and expressive, often confessional lyrics.  It has
then shifted and changed to blend pop punk and indie rock.")  
(termFormat EnglishLanguage EmoMusic "emo")

(instance FolkMusic MusicGenre)
(documentation FolkMusic EnglishLanguage "&%FolkMusic describes both traditional and
contemporary folk music.  Folk music normally refers to the culture of a particular region,
sometimes commemorating personal and historical events.")
(termFormat EnglishLanguage FolkMusic "folk music")

(instance FunkMusic MusicGenre)
(documentation FunkMusic EnglishLanguage "&%FunkMusic is a type of music that originated
in the mid-late 1960s when African American musicians blended soul music, jazz and R&B
into rhythmic, danceable new form of music.")
(termFormat EnglishLanguage FunkMusic "funk music")

(instance HeavyMetal MusicGenre)
(documentation HeavyMetal EnglishLanguage "&%HeavyMetal is a type of &%RockMusic that
is characterized by highly amplified distortion, extended guitar solos, emphatic beats
and overall loudness.  Heavy metal lyrics and performance styles are generally associated
with masculinity and machismo.")
(termFormat EnglishLanguage HeavyMetal "heavy metal")

(instance HipHopMusic MusicGenre)
(documentation HipHopMusic EnglishLanguage "&%HipHopMusic is a type of music that includes
rhythmic and rhythmic speech that is chanted to musical accompaniment.")
(termFormat EnglishLanguage HipHopMusic "hip hop music")

(=>
  (attribute ?MR HipHopMusic)
  (modalAttribute
    (exists (?MM ?S)
      (and
        (record ?MR ?MM)
        (instance ?S Speaking)
        (subProcess ?S ?MM))) Likely))
        
(instance IndieMusic MusicGenre)
(documentation IndieMusic EnglishLanguage "&%IndieMusic refers to the type of music that
was created without the help of commercial record labels.")
(termFormat EnglishLanguage IndieMusic "indie music")

(=>
  (attribute ?MR IndieMusic)
  (modalAttribute
    (not
      (exists (?R)
        (recordingCompany ?MR ?R))) Likely))
        
(instance JazzMusic MusicGenre)
(documentation JazzMusic EnglishLanguage "&%JazzMusic refers to a musical style that
originated at the beginning of the 20th century in African American communities in 
the Southern United States.  Its West African pedigree is evident in its use of
blue notes, improvisation, polyrhythms, syncopation and the swung note.")
(termFormat EnglishLanguage JazzMusic "jazz music")

(instance NewAgeMusic MusicGenre)
(documentation NewAgeMusic EnglishLanguage "&%NewAgeMusic refers to music of various
styles intended to create artistic inspiration, relaxation and optimism.  It is used by
listeners for yoga, massage, meditation and reading as a method of stress management,
or to create a peaceful atmosphere in their home or other environments, and is often 
associated with environmentalism and New Age spirituality.")
(termFormat EnglishLanguage NewAgeMusic "new age music")

(instance NewWaveMusic MusicGenre)
(documentation NewWaveMusic EnglishLanguage "&%NewWaveMusic is a subgenre of &%RockMusic
that emerged in the late 1970s alongside punk rock.")
(termFormat EnglishLanguage NewWaveMusic "new wave")

(instance PopMusic MusicGenre)
(documentation PopMusic EnglishLanguage "&%PopMusic is usually understood to be commercially-
recorded music, often oriented towards a youth market, usually consisting of relatively
short, simple songs utilizing technological innovations to produce new variations on
existing themes. It is normally considered a softer alternative to &%RockMusic.")
(termFormat EnglishLanguage PopMusic "pop music")

(instance PunkRockMusic MusicGenre)
(documentation PunkRockMusic EnglishLanguage "&%PunkRockMusic is a &%RockMusic genre
that developed between 1974 and 1976 in the US, the UK and Australia.  Punk rock bands
eschewed perceived excesses of maintream 1970s rock.  Punk bands created fast, hard-edged
music, typically with short songs, stripped-down instrumentation, and often political,
anti-establishment lyrics.")
(termFormat EnglishLanguage PunkRock "punk rock")

(instance ReggaeMusic MusicGenre)
(documentation ReggaeMusic EnglishLanguage "&%ReggaeMusic is a music genre first 
developed in Jamaica in the late 1960s. ")
(termFormat EnglishLanguage ReggaeMusic "reggae music")

(instance RockMusic MusicGenre)
(documentation RockMusic EnglishLanguage "&%RockMusic is a genre of &%PopMusic that 
developed during and after the 1960s, particularly in the UK and the US. It has its
roots in 1940s and 1950s rock and roll.")
(termFormat EnglishLanguage RockMusic "rock music")

(instance RockAndRollMusic MusicGenre)
(documentation RockAndRollMusic EnglishLanguage "&%RockAndRollMusic is a genre of
&%PopMusic that originated and evolved in the UnitedStates during the late 1940s and 1950s,
primarily from a combination of the blues, country music, jazz and gospel music.")
(termFormat EnglishLanguage RockAndRollMusic "rock and roll music")

(instance RhythmAndBluesMusic MusicGenre)
(documentation RhythmAndBluesMusic EnglishLanguage "&%RhythmAndBluesMusic is a genre
of popular African-American music that originated in the 1940s.  The term was originally
used by record companies to describe recordings marketed predominantly to urban African-
Americans, at a time when urbane, rocking, jazz-based music with a heavy, insistent
beat was becoming more popular.")
(termFormat EnglishLanguage RhythmAndBluesMusic "rhythm and blues")

(instance ShowTune MusicGenre)
(documentation ShowTune EnglishLanguage "&%ShowTune is a song that is originally written
as part of the score of a show or stage musical or musical movie.")
(termFormat EnglishLanguage ShowTune "show tune")

(instance SkaMusic MusicGenre)
(documentation SkaMusic EnglishLanguage "&%SkaMusic is a music genre that originated in
&%Jamaica in the late 1950s, and was the precursor to rocksteady and reggage.  It 
combined elements of Caribbean mento and calypso with American jazz and rhythm and blues.")
(termFormat EnglishLanguage SkaMusic "ska music")

;; ----------------------------------------------------------------------------------
;; Functions
;; ----------------------------------------------------------------------------------

(instance MusicalInterpretationFn TernaryFunction)
(documentation MusicalInterpretationFn EnglishLanguage "The function 
(&%MusicalInterpretationFn ?A ?M ?T) returns an &%instance of &%MakingMusic that 
refers to a particular instance of &%MakingMusic by &%CognitiveAgent ?A of 
the &%realization of &%Music ?M during &%TimeInterval ?T.")
(termFormat EnglishLanguage MusicalInterpretationFn "musical interpretation")

(domain MusicalInterpretationFn 1 CognitiveAgent)
(domain MusicalInterpretationFn 2 Music)
(domain MusicalInterpretationFn 3 TimeInterval)
(range MusicalInterpretationFn MakingMusic)

(=>
  (equal ?MM (MusicalInterpretationFn ?A ?M ?T))
  (and
    (realization ?MM ?M)
    (equal ?T (WhenFn ?MM))
    (agent ?MM ?A)))
    
(instance SongFn BinaryFunction)
(documentation SongFn EnglishLanguage "The function (&%SongFn ?MC ?LC) returns an
&%instance of &%Song that refers to the conception of a song that has &%MusicalComposition
?MC and &%LyricalContent ?LC.")
(termFormat EnglishLanguage SongFn "song function")

(domain SongFn 1 MusicalComposition)
(domain SongFn 2 LyricalContent)
(range SongFn Song)

(=>
  (and
    (equal ?S (SongFn ?MC ?LC))
    (realization ?S ?MUSIC))
  (exists (?MM ?MV)
    (and
      (patient ?MM ?MC)
      (patient ?MV ?LC)
      (subProcess ?MM ?MUSIC)
      (subProcess ?MV ?MUSIC))))

(instance RemixFn BinaryFunction)
(documentation RemixFn EnglishLanguage "The function (&%RemixFn ?M ?A) returns a
&%MusicRecording instance where an &%CognitiveAgent ?A does something to a &%MusicRecording
?M that alters its arrangement, beat, tempo, etc, but still makes ?M recognizable to
those listening to it.")
(termFormat EnglishLanguage RemixFn "remix function")

(domain RemixFn 1 MusicRecording)
(domain RemixFn 2 CognitiveAgent)
(range RemixFn MusicRecording)

(=>
  (equal ?S (RemixFn ?M ?A))
  (exists (?P)
    (and
      (instance ?P IntentionalProcess)
      (patient ?P ?M)
      (agent ?P ?A)
      (result ?P ?S)
      (not (equal ?S ?M))
      (not (copy ?S ?M)))))
      
(instance MusicalComponentFn UnaryFunction)
(documentation MusicalComponentFn EnglishLanguage "The function (&%MusicalComponentFn
?S) returns the instance of the &%MusicalComposition component of the &%Song ?S")
(termFormat EnglishLanguage MusicalComponentFn "musical composition function")

(domain MusicalComponentFn 1 Song)
(range MusicalComponentFn MusicalComposition)

(=>
  (equal ?M (MusicalComponentFn ?S))
  (subProposition ?M ?S))

(instance LyricalComponentFn UnaryFunction)
(documentation LyricalComponentFn EnglishLanguage "The function (&%LyricalComponentFn ?S) 
returns the instance of the &%LyricalContent component of the &%Song ?S")
(termFormat EnglishLanguage LyricalComponentFn "lyrical component function")

(domain LyricalComponentFn 1 Song)
(range LyricalComponentFn LyricalContent)

(=>
  (equal ?L (LyricalComponentFn ?S))
  (subProposition ?L ?S))

(instance AlbumCopiesFn BinaryFunction)
(documentation AlbumCopiesFn EnglishLanguage "The function (&%AlbumCopiesFn ?A ?DS)
returns a subclass of all &%DataStorageDevice ?DS that contains all &%Recording in
&%Album ?A.")
(termFormat EnglishLanguage AlbumCopiesFn "album copies function")

(domain AlbumCopiesFn 1 Album)
(domainSubclass AlbumCopiesFn 2 DataStorageDevice)
(rangeSubclass AlbumCopiesFn DataStorageDevice)

(=>
  (and
    (equal ?D (AlbumCopiesFn ?A ?DS))
    (instance ?X ?D))
  (forall (?S)
    (=>
      (inList ?S ?A)
      (exists (?C)
        (and
          (copy ?C ?S)
          (stored ?C ?D))))))

(instance NationalAnthemFn UnaryFunction)
(documentation NationalAnthemFn EnglishLanguage "The function (&%NationalAnthemFn ?N)
returns the instance of &%Music that is considered as the national anthem of a particular
&%Nation ?N")
(termFormat EnglishLanguage NationalAnthemFn "national anthem")

(domain NationalAnthemFn 1 Nation)
(range NationalAnthemFn Music)

(=>
  (equal ?M (NationalAnthemFn ?N))
  (anthem ?M ?N))  
  
;; ----------------------------------------------------------------------------------
;; Music Group
;; ----------------------------------------------------------------------------------

(subclass MarchingBand MusicalGroup)
(subclass MarchingBand Organization)
(documentation MarchingBand EnglishLanguage "&%MarchingBand refers to a group of 
instrumental musicians perform outdoors and incorporate some type of marching with their 
musical performance.")
(termFormat EnglishLanguage MarchingBand "marching band")
(comment MarchingBand "Subclassing it from &%Organization as well so that relations
associated to &%Organization can be used to describe it, such as &%subOrganization for
the educational institution it represents, or when it was founded using &%yearOfFounding,
who its director is, etc. 09-28-2011" "KJN")

(=>
  (instance ?GRP MarchingBand)
  (exists (?P)
    (and
      (hasSkill MakingInstrumentalMusic ?P)
      (member ?P ?GRP))))
     
(=> 
  (and
    (instance ?GRP MarchingBand)
    (instance ?MP MusicalPerformance)
    (agent ?MP ?GRP))
  (and
    (instance ?OD Outdoors)
    (eventLocated ?MP ?OD)
    (exists (?AMB)
      (and
        (instance ?AMB Ambulating)
        (subProcess ?AMB ?MP)))))

;; ----------------------------------------------------------------------------------
;; Music Events
;; ----------------------------------------------------------------------------------
        
(subclass MusicContest Contest)
(documentation MusicContest EnglishLanguage "&%MusicContest is a type of &%Contest
where some &%Judging is made on a &%MakingMusic instance.")
(termFormat EnglishLanguage MusicContest "music contest")

(=>
  (instance ?CONTEST MusicContest)
  (exists (?J)
    (and
      (instance ?J Judging)
      (forall (?A)
        (=>
          (contestParticipant ?CONTEST ?A)
          (exists (?MM)
          (and
            (agent ?MM ?A)
            (instance ?MM MakingMusic)
            (subProcess ?MM ?CONTEST)
            (patient ?J ?MM))))))))
            
(subclass SingingContest MusicContest)
(documentation SingingContest EnglishLanguage "&%SingingContest is a type of &%MusicContest
where &%Judging is made on people who are singing, or &%MakingVocalMusic.")
(termFormat EnglishLanguage SingingContest "singing contest")

(=>
  (instance ?CONTEST SingingContest)
  (exists (?J)
    (and
      (instance ?J Judging)
      (forall (?A)
        (=>
          (contestParticipant ?CONTEST ?A)        
          (exists (?MV)
            (and
              (agent ?MV ?A)
              (instance ?MV MakingVocalMusic)
              (subProcess ?MV ?CONTEST)
              (patient ?J ?MV))))))))

(instance ContestFn BinaryFunction)
(documentation ContestFn EnglishLanguage "(&%ContestFn ?CONTEST ?TI) is a &%BinaryFunction
that returns an &%instance of &%Contest that occured during &%TimePoint ?TI")
(termFormat EnglishLanguage ContestFn "contest function")

(domainSubclass ContestFn 1 Contest)
(domain ContestFn 2 TimePoint)
(range ContestFn Contest)

(=>
  (equal ?C (ContestFn ?CONTEST ?TI))
  (and
    (instance ?C ?CONTEST)
    (during (WhenFn ?C) ?TI)))
              
(instance contestOrganizer BinaryPredicate)
(documentation contestOrganizer EnglishLanguage "(&%contestOrganizer ?CONTEST ?ORG) 
means that &%CognitiveAgent ?ORG is responsible for managing and organizer &%Contest 
?CONTEST")
(termFormat EnglishLanguage contestOrganizer "contest organizer")

(domain contestOrganizer 1 Contest)
(domain contestOrganizer 2 CognitiveAgent)

(=>
  (contestOrganizer ?CONTEST ?A)
  (managedBy ?CONTEST ?A))

(instance contestEntry TernaryPredicate)
(documentation contestEntry EnglishLanguage "(&%contestEntry ?OBJ ?AGENT ?CONTEST) is
used for contests where what is being judged is not the person or his performance of
a specific process but whatever he produced.  The relation describes how &%CognitiveAgent
?AGENT entered &%Entity ?OBJ in &%Contest ?CONTEST.")
(termFormat EnglishLanguage contestEntry "contest entry")
(comment contestEntry "&%Entity is used instead of &%Object as there are music contest,
for instance, where it's the &%MusicalComposition or &%LyricalContent (which are 
&%Proposition) that is being judged. 09-30-2011" "KJN")

(domain contestEntry 1 Entity)
(domain contestEntry 2 CognitiveAgent)
(domain contestEntry 3 Contest)

(=>
  (contestEntry ?ENT ?AGENT ?CONT)
  (exists (?P ?J)
    (and
      (instance ?P IntentionalProcess)
      (agent ?P ?AGENT)
      (result ?P ?ENT)
      (instance ?J Judging)
      (patient ?J ?ENT))))
      
(instance contestParticipantRepresentation TernaryPredicate)
(documentation contestParticipantRepresentation EnglishLanguage "(&%contestParticipantRepresentation
?CONT ?AGENT ?OBJ) means that in &%Contest ?CONT, &%CognitiveAgent ?AGENT is entered
as a representative of &%Object ?OBJ")
(termFormat EnglishLanguage contestParticipantRepresentation "contest representation")
(comment contestParticipantRepresentation "This is an additional relation to &%contestParticipant
for those contests where representation is important, such as the &%Olympics.  It has
to be tied to the contest as there are instances when somebody may be a citizen or 
national of one country, for instance, but represent some other country is some other
contest. 09-30-2011" "KJN")

(domain contestParticipantRepresentation 1 Contest)
(domain contestParticipantRepresentation 2 CognitiveAgent)
(domain contestParticipantRepresentation 3 Object)

(=>
  (contestParticipantRepresentation ?CONT ?AGENT ?OBJ)
  (holdsDuring
    (WhenFn ?CONT)
    (represents ?AGENT ?OBJ)))
  
;; ----------------------------------------------------------------------------------
;; Music Charts
;; ----------------------------------------------------------------------------------        

(subclass MusicChart List)
(documentation MusicChart EnglishLanguage "&%MusicChart is a ranked list of &%Album or
&%MusicRecording that is deemed the most popular by some criteria, such as the number
of sales or the airplay it receives from radio stations, and the like.")
(termFormat EnglishLanguage MusicChart "music charts")

(=>
  (instance ?X MusicChart)
  (exists (?P ?OBJ)
    (and
      (instance ?P Selecting)
      (result ?P (inList ?OBJ ?X)))))

(subclass SinglesChart MusicChart)
(documentation SinglesChart EnglishLanguage "&%SinglesChart is a type of &%MusicChart
for particular &%MusicRecording.")
(termFormat EnglishLanguage SinglesChart "singles chart")

(=>
  (instance ?X SinglesChart)
  (exists (?MR)
    (and
      (instance ?MR MusicRecording)
      (inList ?MR ?X))))
      
(subclass AlbumChart MusicChart)
(documentation AlbumChart EnglishLanguage "&%AlbumChart is a type of &%MusicChart for
particular &%Album.")
(termFormat EnglishLanguage AlbumChart "album chart")

(=>
  (instance ?X AlbumChart)
  (exists (?A)
    (and
      (instance ?A Album)
      (inList ?A ?X))))

(instance musicChartBy BinaryPredicate)
(documentation musicChartBy EnglishLanguage "(&%musicChartBy ?CHART ?A) means that 
&%CognitiveAgent ?A was responsible for the process of deciding which objects are 
included in &%MusicChart ?CHART.")
(termFormat EnglishLanguage musicChartBy "music chart by")

(domainSubclass musicChartBy 1 MusicChart)
(domain musicChartBy 2 CognitiveAgent)

(=>
  (musicChartBy ?CHART ?AGENT)
  (exists (?P ?C)
    (and
      (instance ?C ?CHART)
      (instance ?P IntentionalProcess)
      (agent ?P ?AGENT)
      (result ?P ?C))))
      
(instance musicChartPeriod BinaryPredicate)
(documentation musicChartPeriod EnglishLanguage "(&%musicChartPeriod ?CHART ?TIME) means 
that the the &%MusicChart ?CHART was analyzed using information from &%TimeInterval ?TIME")
(termFormat EnglishLanguage musicChartPeriod "music chart period")

(domain musicChartPeriod 1 MusicChart)
(domain musicChartPeriod 2 TimeInterval)

;; ----------------------------------------------------------------------------------
;; Miscellaneous 
;; ----------------------------------------------------------------------------------

(instance comment TernaryPredicate)
(documentation comment EnglishLanguage "(&%comment ?ENT ?STR ?PER) is a convenience 
relationship that allows ontologists represented by &%SymbolicString ?PER to write
down commentaries ?STR on a defined &%Entity ?ENT")
(termFormat EnglishLanguage comment "comment")

(domain comment 1 Entity)
(domain comment 2 SymbolicString)
(domain comment 3 SymbolicString)      
      
(instance originalExpressedInLanguage BinaryPredicate)
(documentation originalExpressedInLanguage EnglishLanguage "(&%originalExpressedInLanguage
?PROP ?LANG) means that &%Proposition ?PROP, the first time it was ever realized in
a &%LinguisticExpression, was first expressed in &%Language ?LANG.")
(termFormat EnglishLanguage originalExpressedInLanguage "original expressed in language")

(domain originalExpressedInLanguage 1 Proposition)
(domain originalExpressedInLanguage 2 Language)

(=>
  (originalExpressedInLanguage ?PROP ?LANG)
  (exists (?PHYS ?TIME)
    (and
      (instance ?PHYS LinguisticExpression)
      (representsInLanguage ?PHYS ?PROP ?LANG)
      (equal ?TIME (WhenFn ?PHYS))
      (not 
        (exists (?BEFORE ?OTHER)
          (and
            (instance ?OTHER LinguisticExpression)
            (represents ?OTHER ?PROP)
            (equal ?BEFORE (WhenFn ?OTHER))
            (before ?BEFORE ?TIME)))))))
            
(instance releaseForConsumption TernaryPredicate)
(documentation releaseForConsumption EnglishLanguage "(&%releaseForConsumption ?OBJ ?AREA
?TIME) means that &%Object ?OBJ was release for some type of consumption - like watching,
eating, listening, reading, etc - in &%GeographicArea ?AREA at &%TimePoint ?TIME")
(termFormat EnglishLanguage releaseForConsumption "release for consumption")

(domainSubclass releaseForConsumption 1 Object)
(domain releaseForConsumption 2 GeographicArea)
(domain releaseForConsumption 3 TimePoint)         

(=>
  (releaseForConsumption ?OBJ ?AREA ?TIME)
  (holdsDuring
    (ImmediateFutureFn ?TIME)
    (exists (?P ?O)
      (and
        (instance ?O ?OBJ)
        (patient ?P ?O)
        (eventLocated ?P ?AREA)))))
            
(subrelation releaseForSale releaseForConsumption)
(documentation releaseForSale EnglishLanguage "(&%releaseForSale ?OBJ ?AREA ?TIME) means that 
&%Object ?OBJ was released for sale in &%GeographicArea ?AREA at &%TimePoint ?TIME")
(termFormat EnglishLanguage releaseForSale "release for sale")

;; after an object's release in an area, it is possible to buy it there
(=>
  (releaseForSale ?OBJ ?AREA ?TIME)
  (holdsDuring
    (ImmediateFutureFn ?TIME)
    (modalAttribute
      (exists (?O ?B)
        (and
          (instance ?O ?OBJ)
          (instance ?B Buying)
          (eventLocated ?B ?AREA)
          (patient ?B ?O))) Possibility)))
          