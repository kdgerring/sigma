;; This is an initial check in of content in an early stage of
;; development and is not yet suitable for general use.

;; Access to and use of these products is governed by the GNU General
;; Public License <http://www.gnu.org/copyleft/gpl.html>.  By using
;; these products, you agree to be bound by the terms of the GPL.

;; Those who are interested in making use of this ontology are urged
;; to contact Adam Pease (adampease@earthlink.net) and Jan Scheffczyk
;; (jan.scheffczyk@gmx.net).  Version date: May, 2006 We ask the
;; people using or referencing this work cite our primary paper:

;; Niles, I., and Pease, A.  2001.  Towards a Standard Upper Ontology.
;; In Proceedings of the 2nd International Conference on Formal
;; Ontology in Information Systems (FOIS-2001), Chris Welty and Barry
;; Smith, eds, Ogunquit, Maine, October 17-19, 2001.  See also
;; http://www.ontologyportal.org

(instance AbortedFn BinaryFunction)
(domain AbortedFn 1 Agent)
(domain AbortedFn 2 Process)
(range AbortedFn Process)
(documentation AbortedFn "(AborteFn ?AGENT ?PROCESS) is the &%Process
?PROCESS after it has gotten aborted by the &%Agent ?AGENT")

(=>
  (instance ?X
    (AbortedFn ?A ?P))
  (exists (?T)
    (and
      (holdsDuring ?T
        (desires ?A
          (exists (?PR)
            (and
              (instance ?PR ?P)
              (agent ?PR ?A)))))
      (earlier ?T (WhenFn ?X))))) 


(instance AbortedMissionFn BinaryFunction)
(domain AbortedMissionFn 2 MilitaryOperation)
(range AbortedMissionFn MilitaryOperation)
(subrelation AbortedMissionFn AbortedFn)
(documentation AbortedMissionFn "(AborteMissionFn ?AGENT ?OP) is the
&%MilitaryOperation ?OP after it has gotten aborted by the &%Agent
?AGENT")

;; the cause of the aborting is not an action of someone who is the
;; enemy of the agent performing the actual mission
(=> (and (instance ?ABORTED
           (AbortedMissionFn ?A ?MISSION))
         (cause ?ACTION ?ABORTED)
         (agent ?ACTION ?OTHER_A)
         (agent ?MISSION ?THIS_A))
    (not (enemy ?OTHER_A ?THIS_A)))


(domain enemy 1 Agent)
(domain enemy 2 Agent)
(instance enemy ObjectAttitude)
(instance enemy SymmetricRelation)
(subrelation enemy inScopeOfInterest)
(documentation enemy "Marks two &%Agents that are enemies of each
other")

(=>
  (enemy ?AGENT1 ?AGENT2)
  (dislikes ?AGENT1 ?AGENT2))

(instance Enemy SocialRole)
(instance Enemy ContestAttribute)
(documentation Enemy "Anyone considered hostile by someone else")

(=>
  (enemy ?AGENT1 ?AGENT2)
  (and
    (believes ?AGENT1
      (attribute ?AGENT2 Enemy))
    (believes ?AGENT2
      (attribute ?AGENT1 Enemy))))

(=>
  (attribute ?P Enemy)
  (exists (?AGENT)
    (enemy ?AGENT ?P)))


(instance AbortedLaunchFn BinaryFunction)
(domain AbortedLaunchFn 2 TakingOff)
(range AbortedLaunchFn TakingOff)
(subrelation AbortedLaunchFn AbortedFn)
(documentation AbortedLaunchFn "(AborteLaunchFn ?AGENT ?TAKEOFF) is
the &%TakingOff ?TAKEOFF after it has gotten aborted by the &%Agent
?AGENT. To discontinue aircraft takeoff or missile launch.")


;; further consequences?
;; some thoughts: abort launch if object still on ground then it will
;; stay on ground abort launch if object is in the air then object
;; destroyed or it will eventually hit the ground

