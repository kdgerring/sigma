;; ============================================================================
;;                  	REARDEN COMMERCE, INC.
;;                  	    Address
;; ============================================================================

;; Created by: Karen Joy Nomorosa (karen.nomorosa [at] reardencommerce [dot] com)
;; Created on: March 22, 2011
;; Version: 1.0
;; Last modified: March 22, 2011
;; Modified by: Karen Joy Nomorosa (karen.nomorosa [at] reardencommerce [dot] com)

;; Description:  This ontology describes the relationship Address

;; Ontology dependencies for Dining.kif: Merge.kif, Mid-level-ontology.kif, Geography.kif

;; Access to and use of these products is governed by the GNU General Public 
;; License <http://www.gnu.org/copyleft/gpl.html>. 
;; By using these products, you agree to be bound by the terms 
;; of the GPL.

;; We ask the people using or referencing this work cite our primary paper:

;; Niles, I., and Pease, A.  2001.  Towards a Standard Upper Ontology.  In 
;; Proceedings of the 2nd International Conference on Formal Ontology in 
;; Information Systems (FOIS-2001), Chris Welty and Barry Smith, eds, 
;; Ogunquit, Maine, October 17-19, 2001.  See also http://www.ontologyportal.org

;; Address Elements (as collected from http://www.bitboost.com/ref/international-address-formats.html)
;; a.) Street Number (can contain letters) --> postStreetNumber from Media.kif
;; b.) Floor Code (can contain letters) --> floorCode
;; c.) Unit Number (can contain letters) --> unitNumber
;; d.) Street Name --> postStreet
;; e.) Subdivision / Neighborhood / Quarter --> postNeighborhood
;; f.) City --> postCity
;; g.) State / Territory --> postDistrict
;; h.) Country --> postCountry
;; i.) Post Office Box Number --> postPostOfficeBox
;; j.) Building Name --> names
;; k.) Province Code --> codeMapping
;; l.) Postal Code (can contain letters) --> postPostcodeArea

;; changed canonicalPostPlaceName to canonicalPlaceName to denote that this can be 
;; applied to different types of areas (countries, continents, etc) and not only to 
;; LocalizablePlace.  Also, canonicalPostPlaceName has domain LocalizablePlace but 
;; it is applied to geographic areas that aren't subclassed or instantiated from 
;; LocalizablePlace
(instance canonicalPlaceName TernaryPredicate)
(documentation canonicalPlaceName EnglishLanguage "(&%canonicalPlaceName ?PLACE 
?LANG ?STRING) means that in the &%Language ?LANG, the &%SymbolicString ?STRING 
is a canonical name for the &%GeographicArea ?PLACE")
(domain canonicalPlaceName 1 Region)
(domain canonicalPlaceName 2 Language)
(domain canonicalPlaceName 3 SymbolicString)

(=>
  (canonicalPlaceName ?PLACE ?LANG ?STR)
  (names ?STR ?PLACE))
  
  
(instance unitNumber BinaryPredicate)
(documentation unitNumber EnglishLanguage "(&%unitNumber ?STR ?PLACE) means that 
?STR represents the particular unit or space within the building that a 
&%PostalPlace is located")
(domain unitNumber 1 SymbolicString)
(domain unitNumber 2 PostalPlace)

(instance floorCode BinaryPredicate)
(documentation floorCode EnglishLanguage "(&%floorCode ?STR ?PLACE) means that ?STR 
represents the &%BuildingLevel that a particular &%PostalPlace can be found at")
(domain floorCode 1 SymbolicString)
(domain floorCode 2 PostalPlace)

(=>
  (and
    (unitNumber ?UNITSTR ?PLACE)
    (floorCode ?FLRCODE ?PLACE))
  (exists (?UNIT ?FLOOR)
    (and
      (instance ?FLOOR BuildingLevel)
      (instance ?UNIT Room)
      (located ?UNIT ?FLOOR)
      (part ?FLOOR ?PLACE)
      (names ?UNITSTR ?UNIT)
      (names ?FLRCODE ?FLOOR))))

(=>
  (and
    (unitNumber ?UNITSTR ?PLACE)
    (not 
      (exists (?FLR)
        (floorCode ?FLR ?PLACE))))
  (exists (?UNIT)
    (and
      (instance ?UNIT Room)
      (names ?UNITSTR ?UNIT)
      (located ?UNIT ?BLDG))))

(subclass Neighborhood GeographicArea)
(documentation Neighborhood EnglishLanguage "&%Neighborhood refers to a 
&%GeographicArea that is a subregion of a larger geographic area, such as a 
&%City, normally with a distinctive feature")
(termFormat EnglishLanguage Neighborhood "neighborhood")

(=>
  (instance ?PLACE Neighborhood)
  (exists (?AREA)
    (geographicSubregion ?PLACE ?AREA)))
      
(instance postNeighborhood BinaryPredicate)
(instance postNeighborhood AsymmetricRelation)
(subrelation postNeighborhood located)
(documentation postNeighborhood EnglishLanguage "(&%postNeighborhood ?PLACE 
?NEIGHBORHOOD) means that ?PLACE is located in ?NEIGHBORHOOD")
(domain postNeighborhood 1 PostalPlace)
(domain postNeighborhood 2 Neighborhood)

(<=>
  (and
    (located ?PLACE ?GEO)
    (instance ?PLACE PostalPlace)
    (instance ?GEO Neighborhood))
  (postNeighborhood ?PLACE ?GEO))

(=>
  (and
    (postNeighborhood ?PLACE ?NEIGHBORHOOD)
    (geographicSubregion ?NEIGHBORHOOD ?CITY)
    (instance ?CITY City))
  (postCity ?PLACE ?CITY))
  
(=>
  (and
    (postNeighborhood ?PLACE ?NEIGHBORHOOD)
    (geographicSubregion ?NEIGHBORHOOD ?STATE)
    (instance ?STATE StateOrProvince))
  (postDistrict ?PLACE ?STATE))    
      
;; ----------------------------------------------------------------------------
;; Definitions from Media.kif; with some additional rules from KNomorosa
;; ----------------------------------------------------------------------------          
      
(subclass LocalizablePlace GeographicArea)

(subclass PostalPlace StationaryArtifact)
(subclass StationaryArtifact LocalizablePlace)
(subclass PostalPlace ContactSite)
(documentation PostalPlace EnglishLanguage "A &%PostalPlace is
any &%LocalizablePlace that can have a postal address, and to
which hardcopy mail (letters, packages, etc.) can be delivered.")

(subclass MilitaryInstallation PostalPlace)
(subclass Residence PostalPlace)
(subclass PlaceOfCommerce PostalPlace)

(instance siteForContact AsymmetricRelation)
(instance siteForContact BinaryPredicate)
(domain siteForContact 1 ContactSite)
(domain siteForContact 2 Agent)
(documentation siteForContact EnglishLanguage "(&%siteForContact
?&%ContactSite ?&%Agent) means that the &%Human or &%Organization
?&%Agent can be reached at or via the point of contact
?&%ContactSite.")

(instance postContactSite AsymmetricRelation)
(instance postContactSite BinaryPredicate)
(domain postContactSite 1 PostalPlace)
(domain postContactSite 2 Agent)
(documentation postContactSite
EnglishLanguage "(&%postContactSite ?&%PostalPlace ?&%Agent)
means that the &%Human or &%Organization ?&%Agent can be
contacted by post (mail) at the location ?&%PostalPlace.")
(subrelation postContactSite siteForContact)

(instance telecomContactDevice AsymmetricRelation)
(instance telecomContactDevice BinaryPredicate)
(domain telecomContactDevice 1 TelephonyDevice)
(domain telecomContactDevice 2 Agent)
(documentation telecomContactDevice
EnglishLanguage "(&%telecomContactDevice ?&%TelephonyDevice
?&%Agent) means that ?&%TelephonyDevice is a &%ContactSite for
the &%Human or &%Organization ?&%Agent.")
(subrelation telecomContactDevice siteForContact)

;; NS: Actually, this is more complicated in the case of "cord
;; phones", where multiple &%FixedPhones may share the same line
;; and, so, the same telephone number.  The phone number uniquely
;; identifies the line (termination or connection location), not
;; the phone (hand set).

(subclass PostalAddressText PlaceAddress)
(subclass PostalAddressText LocalizablePlaceID)
(subclass PostalAddressText SymbolicString)
(subclass PostalAddressText LinguisticExpression)

(=>
  (and
    (postCountry ?PLACE UnitedStates)
    (canonicalPlaceName UnitedStates EnglishLanguage ?COUNTRYSTR)
    (postPostcodeArea ?PLACE ?POST)
    (names ?POST ?POSTSTR)
    (postDistrcit ?PLACE ?STATE)
    (canonicalPlaceName ?STATE EnglishLanguage ?STATESTR)
    (postCity ?PLACE ?CITY)
    (canonicalPlaceName ?CITY EnglishLanguage ?CITYSTR)
    (postStreet ?PLACE ?STREET)
    (canonicalPlaceName ?STREET EnglishLanguage ?STREETSTR)
    (postStreetNumber ?STREETNUM ?PLACE)
    (not (exists (?FC ?UN)
      (and
        (floorCode ?FC ?PLACE)
        (unitNumber ?UN ?PLACE)))))
  (and
    (postAddressText ?TEXT ?PLACE)
    (precedesInString ?STREETNUM ?STREETSTR ?TEXT)
    (precedesInString ?STREETSTR ?CITYSTR ?TEXT)
    (precedesInString ?CITYSTR ?STATESTR ?TEXT)
    (precedesInString ?STATESTR ?POSTSTR ?TEXT)
    (precedesInString ?POSTSTR ?COUNTRYSTR ?TEXT)))
    
(=>
  (and
    (postCountry ?PLACE UnitedStates)
    (canonicalPlaceName UnitedStates EnglishLanguage ?COUNTRYSTR)
    (postPostcodeArea ?PLACE ?POST)
    (names ?POST ?POSTSTR)
    (postDistrcit ?PLACE ?STATE)
    (canonicalPlaceName ?STATE EnglishLanguage ?STATESTR)
    (postCity ?PLACE ?CITY)
    (canonicalPlaceName ?CITY EnglishLanguage ?CITYSTR)
    (postStreet ?PLACE ?STREET)
    (canonicalPlaceName ?STREET EnglishLanguage ?STREETSTR)
    (postStreetNumber ?STREETNUM ?PLACE)
    (unitNumber ?UN ?PLACE)
    (not (exists (?FC)
      (floorCode ?FC ?PLACE))))
  (and
    (postAddressText ?TEXT ?PLACE)
    (precedesInString ?UN ?STREETNUM ?TEXT)
    (precedesInString ?STREETNUM ?STREETSTR ?TEXT)
    (precedesInString ?STREETSTR ?CITYSTR ?TEXT)
    (precedesInString ?CITYSTR ?STATESTR ?TEXT)
    (precedesInString ?STATESTR ?POSTSTR ?TEXT)
    (precedesInString ?POSTSTR ?COUNTRYSTR ?TEXT)))
    
(=>
  (and
    (postCountry ?PLACE UnitedStates)
    (canonicalPlaceName UnitedStates EnglishLanguage ?COUNTRYSTR)
    (postPostcodeArea ?PLACE ?POST)
    (names ?POST ?POSTSTR)
    (postDistrcit ?PLACE ?STATE)
    (canonicalPlaceName ?STATE EnglishLanguage ?STATESTR)
    (postCity ?PLACE ?CITY)
    (canonicalPlaceName ?CITY EnglishLanguage ?CITYSTR)
    (postStreet ?PLACE ?STREET)
    (canonicalPlaceName ?STREET EnglishLanguage ?STREETSTR)
    (postStreetNumber ?STREETNUM ?PLACE)
    (unitNumber ?UN ?PLACE)
    (floorCode ?FC ?PLACE))
  (and
    (postAddressText ?TEXT ?PLACE)
    (precedesInString ?UN ?FC ?TEXT)
    (precedesInString ?FC ?STREETNUM ?TEXT)
    (precedesInString ?STREETNUM ?STREETSTR ?TEXT)
    (precedesInString ?STREETSTR ?CITYSTR ?TEXT)
    (precedesInString ?CITYSTR ?STATESTR ?TEXT)
    (precedesInString ?STATESTR ?POSTSTR ?TEXT)
    (precedesInString ?POSTSTR ?COUNTRYSTR ?TEXT)))

(=>
  (and
    (postCountry ?PLACE UnitedStates)
    (canonicalPlaceName UnitedStates EnglishLanguage ?COUNTRYSTR)
    (postPostcodeArea ?PLACE ?POST)
    (names ?POST ?POSTSTR)
    (postPostOfficeBox ?POBOX ?PLACE)
    (postPostcodeArea ?PLACE ?POST)
    (names ?POST ?POSTSTR)
    (postDistrcit ?PLACE ?STATE)
    (canonicalPlaceName ?STATE EnglishLanguage ?STATESTR)
    (postCity ?PLACE ?CITY)
    (canonicalPlaceName ?CITY EnglishLanguage ?CITYSTR))
  (and
    (postAddressText ?TEXT ?PLACE)
    (precedesInString ?POBOX ?CITYSTR ?TEXT)
    (precedesInString ?CITYSTR ?STATESTR ?TEXT)
    (precedesInString ?STATESTR ?POSTSTR ?TEXT)
    (precedesInString ?POSTSTR ?COUNTRYSTR ?TEXT)))
    
(instance postAddressText AsymmetricRelation)
(instance postAddressText BinaryPredicate)
(domain postAddressText 1 PostalAddressText)
(domain postAddressText 2 PostalPlace)
(documentation postAddressText
EnglishLanguage "(&%postAddressText ?&%PostalAddressText
?&%PostalPlace) means that the &%ContactSite ?&%PostalPlace is
identified by ?&%PostalAddressText.")

(instance postCountry AsymmetricRelation)
(instance postCountry BinaryPredicate)
(domain postCountry 1 PostalPlace)
(domain postCountry 2 GeopoliticalArea)
(subrelation postCountry located)
(documentation postCountry EnglishLanguage "(&%postCountry
?&%PostalPlace ?&%GeopoliticalArea) means that ?&%PostalPlace is
located in the &%Nation or &%DependencyOrSpecialSovereigntyArea
?&%GeopoliticalArea.")

(=>
  (postCountry ?PLACE ?COUNTRY)
  (or
    (instance ?COUNTRY Nation)
    (instance ?COUNTRY DependencyOrSpecialSovereigntyArea)))

(<=>
  (and
    (located ?PLACE ?GEO)
    (instance ?PLACE PostalPlace)
    (or
      (instance ?GEO Nation)
      (instance ?GEO DependencyOrSpecialSovereigntyArea)))
  (postCountry ?PLACE ?GEO))

(=>
  (and
    (postCity ?PLACE ?CITY)
    (geographicSubregion ?CITY ?AREA)
    (instance ?AREA StateOrProvince))
  (postDistrict ?PLACE ?AREA))

(=>
  (and
    (postCity ?PLACE ?CITY)
    (geographicSubregion ?CITY ?AREA)
    (or
      (instance ?AREA Nation)
      (instance ?AREA DependencyOrSpecialSovereigntyArea)))
  (postCountry ?PLACE ?AREA))
  
(instance postDistrict AsymmetricRelation)
(instance postDistrict BinaryPredicate)
(domain postDistrict 1 PostalPlace)
(domain postDistrict 2 StateOrProvince)
(subrelation postDistrict located)
(documentation postDistrict EnglishLanguage "(&%postDistrict
?&%PostalPlace ?&%StateOrProvince) means that ?&%PostalPlace is
located in ?&%StateOrProvince.")

(<=>
  (and
    (located ?PLACE ?GEO)
    (instance ?PLACE PostalPlace)
    (instance ?GEO StateOrProvince))
  (postDistrict ?PLACE ?GEO))

(instance postCity AsymmetricRelation)
(instance postCity BinaryPredicate)
(domain postCity 1 PostalPlace)
(domain postCity 2 City)
(subrelation postCity located)
(documentation postCity EnglishLanguage "(&%postCity
?&%PostalPlace ?&%City) means that ?&%PostalPlace is located in
?&%City.")

(<=>
  (and
    (located ?PLACE ?GEO)
    (instance ?PLACE PostalPlace)
    (instance ?GEO City))
  (postCity ?PLACE ?GEO))

(subclass PostcodeArea LocalizablePlace)
(documentation PostcodeArea EnglishLanguage "An &%instance of
&%PostcodeArea is a &%LocalizablePlace that is identified by a
&%Postcode.")

(=>
  (instance ?AREA PostcodeArea)
  (exists (?GEO)
    (geographicSubregion ?AREA ?GEO)))

(instance postPostcodeArea AsymmetricRelation)
(instance postPostcodeArea BinaryPredicate)
(domain postPostcodeArea 1 PostalPlace)
(domain postPostcodeArea 2 PostcodeArea)
(subrelation postPostcodeArea located)
(documentation postPostcodeArea
EnglishLanguage "(&%postPostcodeArea ?&%PostalPlace
?&%PostcodeArea) means that ?&%PostalPlace is located in
?&%PostcodeArea.")

(<=>
  (and
    (located ?PLACE ?AREA)
    (instance ?PLACE PostalPlace)
    (instance ?AREA PostcodeArea))
  (postPostcodeArea ?PLACE ?AREA))

(=>
  (and
    (postPostcodeArea ?PLACE ?AREA)
    (geographicSubregion ?AREA ?CITY)
    (instance ?CITY City))
  (postCity ?PLACE ?CITY))

(=>
  (and
    (postPostcodeArea ?PLACE ?AREA)
    (geographicSubregion ?AREA ?GEO)
    (instance ?GEO StateOrProvince))
  (postDistrict ?PLACE ?GEO))
  
(instance postStreet AsymmetricRelation)
(instance postStreet BinaryPredicate)
(domain postStreet 1 PostalPlace)
(domain postStreet 2 Roadway)
(documentation postStreet EnglishLanguage "(&%postStreet
?&%PostalPlace ?&%Roadway) means that ?&%PostalPlace is
&%Adjacent to ?&%Roadway.")

(=>
  (postStreet ?POSTPLACE ?ROADWAY)
  (orientation ?POSTPLACE ?ROADWAY Adjacent))

(instance postStreetNumber AsymmetricRelation)
(instance postStreetNumber BinaryPredicate)
(domain postStreetNumber 1 SymbolicString)
(domain postStreetNumber 2 PostalPlace)
(documentation postStreetNumber
EnglishLanguage "(&%postStreetNumber ?&%SymbolicString
?&%PostalPlace) means that ?&%SymbolicString identifies the
sub-city block or building level location of a ?&%PostalPlace.
?&%SymbolicString need not consist exclusively of
&%DigitCharacters.")

(instance postPostOfficeBox AsymmetricRelation)
(instance postPostOfficeBox BinaryPredicate)
(domain postPostOfficeBox 1 SymbolicString)
(domain postPostOfficeBox 2 PostalPlace)
(documentation postPostOfficeBox
EnglishLanguage "(&%postPostOfficeBox ?&%SymbolicString
?&%PostalPlace) means that ?&%SymbolicString identifies the post
office box of a ?&%PostalPlace.  ?&%SymbolicString need not
consist exclusively of &%DigitCharacters.")

;; NS: TO DO: Create *PostOfficeStructure, the Building or part
;; of a Building that is the physical quarters of a local post
;; office Organization.  Create *PostOfficeBox, which is a type
;; of container (real, or virtual) found in *PostOfficeStructures.

;; NS: TO DO: Create *BuildingSection, a subclass of
;; StationaryArtifact, and then rework the relevant hierarchy and
;; rules in Mid-level-ontology.kif.  The current hierarchy under
;; StationaryArtifact is unnecessarily rigid in some places
;; (e.g., Store).  The physical quarters of an organization such
;; as a RetailStore will not necessarily be an entire Building,
;; and a given Building might contain multiple PostalPlaces that
;; do not correspond to Rooms or to BuildingLevels.

;; NS: The PostalAddressLine... concepts below provide no
;; information about the functional contents of the text on a
;; given line.

;; NS: TO DO: Add code mappings for the canonical postal address
;; forms of &%StateOrProvince names, &%Nation names, etc.  Then
;; write rules to compose postal addresses (or, specify the
;; constraints for such) from &%PostalPlaces.


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; NS: End: reworking of legacy address predicates ;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(subclass VirtualPlaceID PlaceID)

(subclass VirtualAddress PlaceAddress)
(subclass VirtualAddress VirtualPlaceID)

(subclass TelecomNumber VirtualAddress)
(subclass TelecomNumber SymbolicString)

(instance deviceTelecomNumber BinaryPredicate)
(instance deviceTelecomNumber AsymmetricRelation)
(domain deviceTelecomNumber 1 TelecomNumber)
(domain deviceTelecomNumber 2 TelephonyDevice)
(documentation deviceTelecomNumber
EnglishLanguage "(&%deviceTelecomNumber ?&%TelecomNumber
?&%TelephonyDevice) means that ?&%TelephonyDevice is identified,
and can be accessed, by ?&%TelecomNumber.")

;; (subclass TelecomNumberPart IdentifierPart)
;; (subclass TelecomNumberPart VirtualPlaceID)
;; (subclass TelecomNumberPart SymbolicString)

(instance telecomCoreNumber BinaryPredicate)
(instance telecomCoreNumber AsymmetricRelation)
(domain telecomCoreNumber 1 SymbolicString)
(domain telecomCoreNumber 2 TelecomNumber)
(subrelation telecomCoreNumber subString)
(documentation telecomCoreNumber
EnglishLanguage "(&%telecomCoreNumber ?&%SymbolicString
?&%TelecomNumber) means that ?&%SymbolicString is the &%part of a
&%TelecomNumber that identifies an individual subscriber line,
not including the area code and any possible extensions.")

(instance telecomCountryCode BinaryPredicate)
(instance telecomCountryCode AsymmetricRelation)
(domain telecomCountryCode 1 SymbolicString)
(domain telecomCountryCode 2 TelecomNumber)
(documentation telecomCountryCode
EnglishLanguage "(&%telecomCountryCode ?&%SymbolicString
&%TelecomNumber) means that ?&%SymbolicString is the &%part of
?&%TelecomNumber that identifies the &%Nation in which the device
identified by ?&%TelecomNumber is located (or registered).
?&%SymbolicString will be standard code conforming to, and
assigned by, ITU-T Recommendation E.164.")
(subrelation telecomCountryCode subString)

(instance telecomAreaCode BinaryPredicate)
(instance telecomAreaCode AsymmetricRelation)
(domain telecomAreaCode 1 SymbolicString)
(domain telecomAreaCode 2 TelecomNumber)
(documentation telecomAreaCode
EnglishLanguage "(&%telecomAreaCode ?&%SymbolicString
&%TelecomNumber) means that ?&%SymbolicString is the &%part of
?&%TelecomNumber that follows the country code.
?&%SymbolicString may denote a &%GeographicArea in which the
&%TelephonyDevice identified by ?&%TelecomNumber is
located (registered), but it may also denote a call billing plan
or status, as for 800 numbers in the North American Numbering
Plan.")
(subrelation telecomAreaCode subString)

(instance telecomCode2 BinaryPredicate)
(instance telecomCode2 AsymmetricRelation)
(domain telecomCode2 1 SymbolicString)
(domain telecomCode2 2 TelecomNumber)
(documentation telecomCode2 EnglishLanguage "(&%telecomCode2
?&%SymbolicString ?&%TelecomNumber) means that ?&%SymbolicString
is the second code (if there is one, such as a sub-area code)
following the part of ?&%TelecomNumber denoted by
&%telecomCountryCode.")
(subrelation telecomCode2 subString)

(instance telecomExtension BinaryPredicate)
(instance telecomExtension AsymmetricRelation)
(domain telecomExtension 1 SymbolicString)
(domain telecomExtension 2 TelecomNumber)
(documentation telecomExtension
EnglishLanguage "(&%telecomExtension ?&%SymbolicString
?&%TelecomNumber) means that ?&%SymbolicString is a &%part of
?&%TelecomNumber that identifies a &%TelephonyDevice within a
group of such &%Devices, the members of which share a local
subscriber line.")
;; NS: TO DO: create &%SubscriberTelephoneLine, relate it to
;; &%MainTelephoneLine and &%TelephoneSystem, which are defined
;; in Communications.kif.

(=>
  (and
    (telecomCoreNumber ?CN ?WHOLE)
    (telecomAreaCode ?AC ?WHOLE))
  (precedesInString ?AC ?CN ?WHOLE))

(=>
  (and
    (telecomCoreNumber ?CN ?WHOLE)
    (telecomCountryCode ?CC ?WHOLE))
  (precedesInString ?CC ?CN ?WHOLE))

(=>
  (and
    (telecomAreaCode ?AC ?WHOLE)
    (telecomCountryCode ?CC ?WHOLE))
  (precedesInString ?CC ?AC ?WHOLE))

(=>
  (and
    (telecomCoreNumber ?CN ?WHOLE)
    (telecomExtension ?EX ?WHOLE))
  (precedesInString ?CN ?EX ?WHOLE))

(=>
  (and
    (telecomCode2 ?C2 ?WHOLE)
    (telecomAreaCode ?AC ?WHOLE))
  (precedesInString ?AC ?C2 ?WHOLE))

(=>
  (and
    (telecomCode2 ?C2 ?WHOLE)
    (telecomCountryCode ?CC ?WHOLE))
  (precedesInString ?CC ?C2 ?WHOLE))

;; NS: It's not clear from the documentation for "TelecomCode2",
;; nor from an otherwise good explanation of telecom number
;; fields (http://en.wikipedia.org/wiki/Area_code), if the
;; portion of a telecom number denoted by "TelecomCode2" can be
;; part of the "CoreTelecomNumber" (e.g., designating the local
;; exchange, as in the xxx part of a US number conforming to the
;; pattern xxx-yyyy), or is something else, different from both
;; the "CoreTelecomNumber" and the area code.  Therefore, the
;; rules above are agnostic on this point, and less complete than
;; they might otherwise be.

(subclass UKTelecomNumber TelecomNumber)
(documentation UKTelecomNumber EnglishLanguage "A
&%UKTelecomNumber is a &%TelecomNumber that conforms to the
format defined for &%TelephonyDevices located (registered) in the
&%UnitedKingdom.")

(subclass NorthAmericanTelecomNumber TelecomNumber)
(documentation NorthAmericanTelecomNumber EnglishLanguage "A
&%NorthAmericanTelecomNumber is a &%TelecomNumber that conforms
to the format specified by the North American Numbering Plan, and
identifies a &%TelephonyDevice located (registered) in
&%NorthAmerica.")

(=>
  (and
    (telecomAreaCode ?AC ?WHOLE)
    (instance ?WHOLE NorthAmericanTelecomNumber))
  (stringLength 3 ?AC))

;; NS: TO DO: Add CodeMaps for the ITU-T Recommendation E.164
;; telecom country codes and North American Numbering Plan (NANP)
;; telecom area codes.

;; NS: edit.  Narrowing from SymbolicString.
(domain telephoneNumber 1 TelecomNumber)

(instance personalPhoneNumber BinaryPredicate)
(instance personalPhoneNumber AsymmetricRelation)
(domain personalPhoneNumber 1 TelecomNumber)
(domain personalPhoneNumber 2 Human)
(subrelation personalPhoneNumber telephoneNumber)
(documentation personalPhoneNumber
EnglishLanguage "(&%personalPhoneNumber ?&%TelecomNumber
?&%Human) means that ?&%TelecomNumber identifies a &%Telephone at
which ?&%Human can be contacted when not a work, or for purposes
other than work.")

(=>
  (and
    (instance ?DEVICE Telephone)
    (holdsDuring ?TIME 
      (and
        (possesses ?AGENT ?DEVICE)
        (deviceTelecomNumber ?NUMBER ?DEVICE))))
  (holdsDuring ?TIME (telephoneNumber ?NUMBER ?AGENT)))

(instance homePhoneNumber BinaryPredicate)
(instance homePhoneNumber AsymmetricRelation)
(domain homePhoneNumber 1 TelecomNumber)
(domain homePhoneNumber 2 Human)
(subrelation homePhoneNumber telephoneNumber)
(documentation homePhoneNumber
EnglishLanguage "(&%homePhoneNumber ?&%TelecomNumber ?&%Human)
means that ?&%TelecomNumber identifies a &%Telephone located at
?&%Human's &%PermanentResidence.")

;; NS: This is too liberal; a person could have multiple "home"
;; addresses.  Use the telecom area code to match the phone's location
;; to the person's address.
;; (=>
;;   (holdsDuring ?TIME
;;     (and
;;       (deviceTelecomNumber ?NUMBER ?DEVICE)
;;       (homePhoneNumber ?NUMBER ?PERSON)
;;       (home ?PERSON ?RESIDENCE)))
;;   (holdsDuring ?TIME (located ?DEVICE ?RESIDENCE)))

(=>
  (holdsDuring ?TIME 
    (and
      (deviceTelecomNumber ?NUMBER ?DEVICE)
      (homePhoneNumber ?NUMBER ?AGENT)
      (located ?DEVICE ?PLACE)
      (instance ?PLACE PermanentResidence)))
  (holdsDuring ?TIME (home ?AGENT ?PLACE)))

;; This is a weaker version of the axiom immediately above.
(=>
  (and
    (instance ?AGENT Human)
    (holdsDuring ?TIME 
      (and
        (deviceTelecomNumber ?NUMBER ?DEVICE)
        (telephoneNumber ?NUMBER ?AGENT)
        (located ?DEVICE ?PLACE)
        (instance ?PLACE Residence))))
  (holdsDuring ?TIME (inhabits ?AGENT ?PLACE)))

(instance workPhoneNumber BinaryPredicate)
(instance workPhoneNumber AsymmetricRelation)
(domain workPhoneNumber 1 TelecomNumber)
(domain workPhoneNumber 2 Agent)
(subrelation workPhoneNumber telephoneNumber)
(documentation workPhoneNumber
EnglishLanguage "(&%workPhoneNumber ?&%TelecomNumber ?&%Agent)
means that ?&%TelecomNumber identifies a &%Telephone at which
?&%Agent can be contacted when at work, or for business
purposes.")

(instance mobilePhoneNumber BinaryPredicate)
(instance mobilePhoneNumber AsymmetricRelation)
(domain mobilePhoneNumber 1 TelecomNumber)
(domain mobilePhoneNumber 2 Agent)
(subrelation mobilePhoneNumber telephoneNumber)
(documentation mobilePhoneNumber
EnglishLanguage "(&%mobilePhoneNumber ?&%TelecomNumber ?&%Agent)
means that ?&%TelecomNumber identifies a &%MobileCellPhone at
which ?&%Agent can be contacted.")

(=>
  (holdsDuring ?TIME
    (and
      (deviceTelecomNumber ?NUMBER ?DEVICE)
      (mobilePhoneNumber ?NUMBER ?AGENT)))
  (instance ?DEVICE MobileCellPhone))

;; NS: Narrowing telephoneNumber -> mobilePhoneNumber.
(=>
  (and
    (instance ?DEVICE MobileCellPhone)
    (holdsDuring ?TIME
      (and
        (deviceTelecomNumber ?NUMBER ?DEVICE)
        (telephoneNumber ?NUMBER ?AGENT))))
  (holdsDuring ?TIME (mobilePhoneNumber ?NUMBER ?AGENT)))

;; NS: This isn't reliably true for Telephones in general, given
;; the rather strict "ownership" sense of possesses.  But it is
;; generally true for cell phones.
(=>
  (holdsDuring ?TIME
    (and
      (deviceTelecomNumber ?NUMBER ?DEVICE)
      (mobilePhoneNumber ?NUMBER ?AGENT)))
  (holdsDuring ?TIME (possesses ?AGENT ?DEVICE)))

(instance faxNumber BinaryPredicate)
(instance faxNumber AsymmetricRelation)
(domain faxNumber 1 TelecomNumber)
(domain faxNumber 2 Agent)
(documentation faxNumber EnglishLanguage "(&%faxNumber
?&%TelecomNumber ?&%Agent) means that ?&%TelecomNumber identifies
a &%FaxMachine at which ?&%Agent can be contacted.")

(=>
  (and
    (instance ?DEVICE FaxMachine)
    (holdsDuring ?TIME 
      (and
        (deviceTelecomNumber ?NUMBER ?DEVICE)
        (possesses ?AGENT ?DEVICE))))
  (holdsDuring ?TIME (faxNumber ?NUMBER ?AGENT)))

;; NS: temporally qualified this way only because telecom numbers
;; can be reassigned to different types of TelephonyDevices.
(=>
  (holdsDuring ?TIME
    (and
      (deviceTelecomNumber ?NUMBER ?DEVICE)
      (faxNumber ?NUMBER ?AGENT)))
  (instance ?DEVICE FaxMachine))      
      
      
      
      
      
      
      
      
      
      
      
      
      
