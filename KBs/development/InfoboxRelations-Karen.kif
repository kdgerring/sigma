(instance versionNumber BinaryPredicate)
(documentation versionNumber EnglishLanguage "(&%versionNumber ?OBJ ?VERSION) means
that &%Artifact ?OBJ, which is a &%version of some other &%Artifact, is in a version
identified by &%SymbolicString ?VERSION")
(termFormat EnglishLanguage versionNumber "version number")

(domainSubclass versionNumber 1 Artifact)
(domain versionNumber 2 SymbolicString)

(=>
  (and
    (version ?OBJ1 ?OBJ2)
    (versionNumber ?OBJ1 ?VERSION1)
    (versionNumber ?OBJ2 ?VERSION2))
  (not (equal ?VERSION1 ?VERSION2)))
  
(=>
  (versionNumber ?OBJ ?VERSION)
  (exists (?OBJ2)
    (version ?OBJ ?OBJ2)))

(subclass ViscosityMeasure FunctionQuantity)
(documentation ViscosityMeasure EnglishLanguage "&%ViscosityMeasure refers to the 
measure of the resistance of a fluid which is being deformed by either shear stress 
or tensile stress.")
(termFormat EnglishLanguage ViscosityMeasure "viscosity")

(=>
  (and
    (measure ?OBJ ?MEAS)
    (instance ?MEAS ViscosityMeasure))
  (instance ?OBJ Fluid))
  
(=>
  (equal
    (PerFn (MeasureFn ?NUMBER Pascal) (MeasureFn 1 SecondDuration)) ?QUANT)
  (instance ?QUANT ViscosityMeasure))

;;(instance utcOffset BinaryPredicate)
;;(documentation utcOffset EnglishLanguage "(&%utcOffset ?TZ ?OFFSET ?REL) means that 
;;&%TimeZone ?TZ is &%TimeDuration ?OFFSET ahead or behind of &%CoordinatedUniversalTimeZone. 
;;?REL is the &%AssociativeFunction used to determine if ?OFFSET is added or
;;subtracted from UTC time.")
;;(termFormat EnglishLanguage utcOffset "utc offset")

;;(domain utcOffset 1 TimeZone)
;;(domain utcOffset 2 TimeDuration)
;;(domain utcOffset 3 AssociativeFunction)

;;(=>
;;  (utcOffset ?TZ ?OFFSET ?REL)
;;  (exists (?UTC ?TIME)
;;    (and
;;      (equal ?UTC (RelativeTimeFn ?TIME ?TZ))
;;      (equal ?OFFSET (?REL ?UTC ?TIME)))))

;;(=>
;;  (utcOffset ?TZ ?OFFSET ?REL)
;;  (or
;;    (equal ?REL SubtractionFn)
;;    (equal ?REL AdditionFn)))
   
  
(instance timezone BinaryPredicate)
(documentation timezone EnglishLanguage "(&%timezone ?AREA ?ZONE) relates an area
to a specific timezone.")
(termFormat EnglishLanguage timezone "timezone")

(domain timezone 1 GeographicArea)
(domain timezone 2 TimeZone)


(instance Watching IntentionalProcess)
(documentation Watching EnglishLanguage "&%Watching, in the sense of 'watching a show'
or 'watching TV' denotes that there is some element of &%Interpreting, as well as
&%Looking and &%Listening to dialogue.")
(termFormat EnglishLanguage Watching "watching")

(=>
  (instance ?W Watching)
  (exists (?LOOK ?LISTEN ?INTERPRET)
    (and
      (instance ?LOOK Looking)
      (instance ?LISTEN Listening)
      (instance ?INTERPRET Interpreting)
      (subProcess ?LOOK ?W)
      (subProcess ?LISTEN ?W)
      (subProcess ?INTERPRET ?W))))

(subAttribute VoiceActor Actor)
(documentation VoiceActor EnglishLanguage "Like an &%Actor, a &%VoiceActor is also an
agent of the dramatic performance.  However, only his voice can be heard and not the
actor himself")
(termFormat EnglishLanguage VoiceActor "voice actor")

(=>
  (and
    (attribute ?ACTOR VoiceActor)
    (instance ?DRAMA DramaticPerformance)
    (agent ?DRAMA ?ACTOR)
    (instance ?SPEAK LinguisticCommunication)
    (agent ?SPEAK ?ACTOR)
    (subProcess ?SPEAK ?DRAMA)
    (instance ?W Watching)
    (patient ?W ?DRAMA)
    (agent ?W ?VIEWER))
  (and
    (not
      (exists (?S)
        (and
          (instance ?S Seeing)
          (patient ?S ?ACTOR)
          (agent ?S ?VIEWER))))
    (exists (?H)
      (and
        (instance ?H Hearing)
        (patient ?H ?ACTOR)
        (agent ?H ?VIEWER)))))
        
(instance voltageRequirement BinaryPredicate)
(documentation voltageRequirement EnglishLanguage "(&%voltageRequirement ?OBJ ?MEAS)
means that &%Object ?OBJ needs &%Measure ?MEAS in order to function")
(termFormat EnglishLanguage voltageRequirement "voltage requirement")

(domainSubclass voltageRequirement 1 Object)
(domain voltageRequirement 2 Measure)

(=>
  (and
    (voltageRequirement ?CLASS ?MEAS)
    (instance ?OBJ ?CLASS)
    (instance ?PROC Process)
    (instrument ?PROC ?OBJ))
  (exists (?ELEC)
    (and
      (instance ?ELEC Electricity)
      (resource ?PROC ?ELEC)
      (measure ?ELEC ?MEAS))))
      
(instance yearManufactured BinaryPredicate)
(documentation yearManufactured EnglishLanguage "(&%yearsManufactured ?OBJ ?TIME)
means that &%Object ?OBJ was manufactured during the &%TimeInterval ?TIME.")
(termFormat EnglishLanguage yearManufactured "year manufactured")

(domainSubclass yearManufactured 1 Object)
(domainSubclass yearManufactured 2 Year)

(=>
  (yearManufactured ?CLASS ?YEAR)
  (exists (?OBJ ?PROC ?TIME)
    (and
      (instance ?OBJ ?CLASS)
      (instance ?PROC Manufacturing)
      (result ?PROC ?OBJ)
      (instance ?TIME ?YEAR)
      (temporallyBetweenOrEqual
        (BeginFn ?TIME)
        (EndFn (WhenFn ?PROC))
        (EndFn ?TIME)))))
        
(instance attributeAtTime TernaryPredicate)
(documentation attributeAtTime EnglishLanguage "(&%attributeAtTime ?ENT ?ATTR ?TIME) 
means that the &%Attribute ?ATTR applies to &%Entity ?ENT during &%TimeInterval ?TIME")
(termFormat EnglishLanguage attributeAtTime "attribute at time")

(domain attributeAtTime 1 Entity)
(domain attributeAtTime 2 Attribute)
(domain attributeAtTime 3 TimePoint)

(=>
  (attributeAtTime ?ENT ?ATTR ?TIME)
  (holdsDuring ?TIME
    (attribute ?ENT ?ATTR)))

(instance view BinaryPredicate)
(documentation view EnglishLanguage "(&%view ?REGION ?PHS) means that a person in
?REGION can see ?PHS.  This is different from &%viewType as &%viewType is more generic, 
i.e. it relates the type of thing that a person can see (like a &%Mountain or &%Lake). 
This relationship relates an instance of something (like Mt. Rushmore)")
(termFormat EnglishLanguage view "view")

(domain view 1 Object)
(domain view 2 Physical)

(=>
  (view ?OBJ ?VIEW)
  (modalAttribute
    (exists (?HUMAN ?SEE)
      (and
        (instance ?HUMAN Human)
        (located ?HUMAN ?OBJ)
        (instance ?SEE Seeing)
        (patient ?SEE ?VIEW)
        (agent ?SEE ?HUMAN))) Possibility))
        
(subrelation brandSlogan refers)
(documentation brandSlogan EnglishLanguage "(&%brandSlogan ?SLOGAN ?BRAND) means
that &%SymbolicString ?SLOGAN is a statement that refers and is popularly associated
with &%Brand ?BRAND")
(termFormat EnglishLanguage brandSlogan "brand slogan")

(=>
  (brandSlogan ?SLOGAN ?BRAND)
  (and
    (instance ?SLOGAN SymbolicString)
    (instance ?BRAND Brand)))
    
(subclass MaritalStatusAttribute RelationalAttribute)
(documentation MaritalStatusAttribute EnglishLanguage "A &%MaritalStatusAttribute is
a &%RelationalAttribute that descibes whether a person is married, single, divorced,
or widowed.")
(termFormat EnglishLanguage MaritalStatusAttribute "marital status")

(=>
  (and
    (attribute ?X ?ATTR)
    (instance ?ATTR MaritalStatusAttribute))
  (instance ?X Human))

(instance SingleStatus MaritalStatusAttribute)
(documentation SingleStatus EnglishLanguage "&%SingleStatus refers to someone who
has never been married.")
(termFormat EnglishLanguage SingleStatus "single")

(=>
  (attribute ?HUMAN SingleStatus)
  (not
    (exists (?TIME ?SPOUSE)
      (holdsDuring (?TIME)
        (spouse ?HUMAN ?SPOUSE)))))

(instance MarriedStatus MaritalStatusAttribute)
(documentation MarriedStatus EnglishLanguage "&%MarriedStatus refers to someone who
is currently married.")
(termFormat EnglishLanguage MarriedStatus "married")

(=>
  (attribute ?HUMAN MarriedStatus)
  (exists (?SPOUSE)
    (spouse ?HUMAN ?SPOUSE)))
    
(instance DivorcedStatus MaritalStatusAttribute)
(documentation DivorcedStatus EnglishLanguage "&%DivorcedStatus refers to someone 
who was married at some point but who underwent &%Divorcing")
(termFormat EnglishLanguage DivorcedStatus "divorced")

(=>
  (attribute ?HUMAN DivorcedStatus)
  (exists (?DIVORCE)
    (and
      (instance ?DIVORCE Divorcing)
      (agent ?DIVORCE ?HUMAN))))
      
(instance Widowed MaritalStatusAttribute)

(subrelation artist creator)
(documentation artist EnglishLanguage "(&%artist ?AGENT ?OBJ) refers to the &%CognitiveAgent
?AGENT responsible for some &%ArtWork")
(termFormat EnglishLanguage artist "artist")

(=>
  (artist ?AGENT ?OBJ)
  (and
    (instance ?AGENT CognitiveAgent)
    (instance ?OBJ ArtWork)))

(instance memberForPeriod TernaryPredicate)
(documentation memberForPeriod EnglishLanguage "(&%memberForPeriod ?MEM ?COL ?TI) means
that &%SelfConnectedObject ?MEM is a &%member of &%Collection ?COL for &%TimeInterval
?TI")
(termFormat EnglishLanguage memberForPeriod "member period")

(domain memberForPeriod 1 SelfConnectedObject)
(domain memberForPeriod 2 Collection)
(domain memberForPeriod 3 TimeInterval)

(=>
  (memberForPeriod ?MEM ?COL ?TI)
  (holdsDuring ?TI
    (member ?MEM ?COL)))
    
(instance contestOutcome TernaryPredicate)
(documentation contestOutcome EnglishLanguage "(&%contestOutcome ?CONTEST ?ATTR ?TEAM)
means that ?TEAM was applied the &%ContestAttribute ?ATTR after the &%Contest ?CONTEST
was done")
(termFormat EnglishLanguage contestOutcome "contest outcome")

(domain contestOutcome 1 Contest)
(domain contestOutcome 2 ContestAttribtue)
(domain contestOutcome 3 Agent)

(=>
  (contestOutcome ?CONTEST ?ATTR ?AGENT)
  (holdsDuring
    (EndFn
      (WhenFn ?CONTEST))
    (attribute ?AGENT ?ATTR)))
    
(instance contestPrize BinaryPredicate)
(documentation contestPrize EnglishLanguage "(&%contestPrize ?CONTEST ?PRIZE) means
that &%Entity ?PRIZE is the prize given to the winner of &%Contest ?CONTEST")
(termFormat EnglishLanguage contestPrize "prize")

(domain contestPrize 1 Contest)
(domainSubclass contestPrize 2 Entity)

;; if ?PRIZE is the prize for a ?CONTEST, then if a contest has a winner, that 
;; ?PRIZE is given to the winner
(=>
  (and
    (contestPrize ?CONTEST ?PRIZE)
    (subclass ?PRIZE Physical))
  (=>
    (contestOutcome ?CONTEST Won ?TEAM)
    (exists (?GIVE ?ITEM)
      (and
        (instance ?GIVE UnilateralGiving)
        (patient ?GIVE ?ITEM)
        (destination ?GIVE ?TEAM)
        (instance ?ITEM ?PRIZE)))))

(=>
  (and
    (contestPrize ?CONTEST ?PRIZE)
    (subclass ?PRIZE Proposition))
  (=>
    (contestOutcome ?CONTEST Won ?TEAM)
    (exists (?GIVE ?ITEM ?PROC)
      (and
        (instance ?GIVE UnilateralGiving)
        (instance ?ITEM ?PRIZE)
        (realization ?PROC ?ITEM)
        (patient ?GIVE ?PROC)
        (destination ?GIVE ?TEAM)))))

(instance instrumentSubclass BinaryPredicate)
(documentation instrumentSubclass EnglishLanguage "Similar to &%instrument, only
that it specificies a &%subclass instead of an &%instance of an &%Object that is
used by an &%Agent in bringing about a &%Process.")
(termFormat EnglishLanguage instrumentSubclass "instrument subclass")

(domain instrumentSubclass 1 Process)
(domainSubclass instrumentSubclass 2 Object)

(=>
  (instrumentSubclass ?PROC ?OBJ)
  (exists (?ITEM)
    (and
      (instance ?ITEM ?OBJ)
      (instrument ?PROC ?ITEM))))
      
(subrelation patentOwner possesses)
(documentation patentOwner EnglishLanguage "Relates a &%Patent with the &%Agent that
owns it.")
(termFormat EnglishLanguage patentOwner "patent owner")

(=>
  (patentOwner ?AGENT ?PATENT)
  (instance ?PATENT Patent))

(instance totalProductionQty QuaternaryPredicate)
(documentation totalProductionQty EnglishLanguage "(totalProductionQty ?AGENT ?MEAS ?OBJ ?TI) means
that &%CognitiveAgent ?AGENT produced &%Quantity ?MEAS of &%Object ?OBJ in &%TimeInterval
?TI")
(termFormat EnglishLanguage totalProductionQty "total production")

(domain totalProductionQty 1 CognitiveAgent)
(domain totalProductionQty 2 Quantity)
(domainSubclass totalProductionQty 3 Object)
(domain totalProductionQty 4 TimeInterval)

(=>
  (and
    (totalProductionQty ?AGENT ?MEAS ?OBJ ?TI)
    (instance ?MEAS Number))
  (exists (?COLL ?UOM)
    (and
      (instance ?COLL Collection)
      (forall (?ITEM)
        (=>
          (and
            (instance ?MAKE Making)
            (during ?MAKE ?TI)
            (agent ?MAKE ?AGENT)
            (patient ?MAKE ?ITEM)
            (instance ?ITEM ?OBJ))
          (member ?ITEM ?COLL)))
      (holdsDuring
        (EndFn ?TI)
        (memberCount ?COLL ?MEAS)))))

(=>
  (and
    (totalProductionQty ?AGENT ?MEAS ?OBJ ?TI)
    (instance ?MEAS PhysicalQuantity))
  (exists (?COLL ?UOM)
    (and
      (instance ?COLL Collection)
      (forall (?ITEM)
        (=>
          (and
            (instance ?MAKE Making)
            (during ?MAKE ?TI)
            (agent ?MAKE ?AGENT)
            (patient ?MAKE ?ITEM)
            (instance ?ITEM ?OBJ))
          (member ?ITEM ?COLL)))
      (holdsDuring
        (EndFn ?TI)
        (measure ?COLL ?MEAS)))))       

(subclass AlphabetSet Collection)
(documentation AlphabetSet EnglishLanguage "&%CharacterSet is a &%Collection of 
&%Characters that is associated with a &%Language")
(termFormat EnglishLanguage AlphabetSet "alphabet set")

(=>
  (instance ?X AlphabetSet)
  (memberType ?X Character))
  
(instance alphabet BinaryPredicate)
(documentation alphabet EnglishLanguage "(&%alphabet ?LANGUAGE ?SET) means that
&%Language ?LANG uses &%AlphabetSet ?SET")
(termFormat EnglishLanguage alphabet "alphabet")

(domain alphabet 1 Language)
(domain alphabet 2 AlphabetSet)

(=>
  (and
    (alphabet ?LANG ?SET)
    (expressedInLanguage ?X ?LANG)
    (instance ?X SymbolicString))
  (forall (?CHAR)
    (=>
      (inString ?CHAR ?X)
      (member ?CHAR ?SET))))
      
(instance succeededInPosition QuaternaryPredicate)
(documentation succeededInPosition EnglishLanguage "(&%succeededInPosition ?PERSON1 ?PERSON2 ?ROLE ?ORG) 
means that &%Human ?PERSON2 was the person right after &%Human ?PERSON1 to fulfill
the &%Position ?ROLE in &%Organization ?ORG")
(termFormat EnglishLanguage succeededInPosition "succeeded in position")

(domain succeededInPosition 1 Human)
(domain succeededInPosition 2 Human)
(domain succeededInPosition 3 Position)
(domain succeededInPosition 4 Organization)

(=>
  (succeededInPosition ?PERSON1 ?PERSON2 ?ROLE ?ORG)
  (exists (?TI1 ?TI2)
    (and
      (holdsDuring ?TI1
        (occupiesPosition ?PERSON1 ?ROLE ?ORG))
      (holdsDuring ?TI2
        (occupiesPosition ?PERSON2 ?ROLE ?ORG))
      (before ?TI1 ?TI2)
      (not
        (exists (?TI3 ?PERSON3)
          (and
            (holdsDuring ?TI3
              (occupiesPosition ?PERSON3 ?ROLE ?ORG))
            (temporallyBetween ?TI1 ?TI3 ?TI2)))))))

(subclass DigitalImage Image)
(documentation DigitalImage EnglishLanguage "&%DigitalImage is a type of &%Image that
is stored as a numeric representation.")
(termFormat EnglishLanguage DigitalImage "digital image")

(=>
  (instance ?IMAGE DigitalImage)
  (exists (?DS)
    (and
      (instance ?DS ElectronicDataStorageDevice)
      (part ?IMAGE ?DS))))
      
(subclass RasterImage DigitalImage)
(documentation RasterImage EnglishLanguage "&%RasterImage is a type of &%DigitalImage
that is represented by a grid, with each grid having its own unique code that represents
color at any given point.")
(termFormat EnglishLanguage RasterImage "raster image")

(=>
  (instance ?IMAGE RasterImage)
  (exists (?SIZE)
    (measure ?IMAGE (MeasureFn ?SIZE Pixel))))
     
(subclass VectorImage DigitalImage)
(documentation VectorImage EnglishLanguage "&%VectorImage is a type of &%DigitalImage 
uses geometrical primitives such as points, lines, curves, shapes, which are all based
on mathematical equations, to represent images.")
(termFormat EnglishLanguage VectorImage "vector image")

(=>
  (instance ?IMAGE VectorImage)
  (exists (?FIG ?GEO)
    (and
      (containsInformation ?IMAGE ?GEO)
      (instance ?GEO Equation)
      (represents ?GEO ?FIG)
      (instance ?FIG GeometricFigure))))
              
(instance Pixel UnitOfInformation)
(documentation Pixel EnglishLanguage "&%Pixel refers to the smallest unit of picture 
that can be represented or controlled.  It is a single point in a raster image.")
(termFormat EnglishLanguage Pixel "pixel")

(=>
  (measure ?PIXEL (MeasureFn 1 Pixel))
  (exists (?INFO ?COLOR)
    (and
      (containsInformation ?PIXEL ?INFO)
      (represents ?INFO ?COLOR)
      (instance ?COLOR ColorAttribute))))

(=>
  (measure ?IMAGE (MeasureFn ?SIZE Pixel))
  (exists (?LENGTH ?WIDTH)
    (and
      (length ?IMAGE (MeasureFn ?LENGTH Pixel))
      (width ?IMAGE (MeasureFn ?WIDTH Pixel))
      (equal ?SIZE (MultiplicationFn ?LENGTH ?WIDTH)))))
      
(instance contestRank TernaryPredicate)
(documentation contestRank EnglishLanguage "(&%contestRank ?CONTEST ?AGENT ?RANK) means
that in the &%Contest ?CONTEST, &%CognitiveAgent ?AGENT has &%NonnegativeInteger rank
?RANK.  The ?AGENT with rank = 1 is the winner of that contest.")
(termFormat EnglishLanguage contestRank "rank")

(domain contestRank 1 Contest)
(domain contestRank 2 CognitiveAgent)
(domain contestRank 3 NonnegativeInteger)

(=>
  (contestRank ?CONTEST ?AGENT 1)
  (contestOutcome ?CONTEST Won ?AGENT))

(=>
  (contestRank ?CONTEST ?AGENT ?RANK)
  (exists (?COLL ?NUM)
    (and
      (forall (?X)
        (=>
          (contestParticipant ?CONTEST ?X)
          (member ?X ?COLL)))
      (memberCount ?COLL ?NUM)
      (greaterThanOrEqualTo ?NUM ?RANK))))
      
        
(instance teamMemberCount BinaryPredicate)
(documentation teamCount EnglishLanguage "(&%teamCount ?GAME ?NUM) means that there are
&%NonnegativeInteger ?NUM number of teams that participates in the &%Game ?GAME")
(termFormat EnglishLanguage teamCount "team count")

(domainSubclass teamCount 1 Game)
(domainSubclass teamCount 2 NonnegativeIntegerNumber)

(=>
  (teamCount ?GAMECLASS ?NUM)
  (modalAttribute
    (exists (?TEAM ?GAME)
      (and
        (instance ?GAME ?GAMECLASS)
        (contestParticipant ?GAME ?TEAM)
        (instance ?TEAM GroupOfPeople)
        (memberCount ?TEAM ?NUM))) Necessity))
        
(instance avgGameTime BinaryPredicate)
(documentation avgGameTime EnglishLanguage "(&%avgGameTime ?GAME ?TIME) means
that on average, &%Game ?GAME takes &%TimeDuration ?TIME to completely play.")
(termFormat EnglishLanguage avgGameTime "average game time")

(domainSubclass avgGameTime 1 Game)
(domain avgGameTime 2 TimeDuration)

(=>
  (avgGameTime ?GAMECLASS ?TIME)
  (modalAttribute
    (=>
      (instance ?GAME ?GAMECLASS)
      (duration (WhenFn ?GAME) ?TIME)) Likely))
      
(instance contestFinalScore TernaryPredicate)
(documentation contestFinalScore EnglishLanguage "(&%contestFinalScore ?GAME ?AGENT ?NUM)
means that at the end of &%Contest ?GAME, &%Group ?AGENT has the score &%RealNumber ?NUM")
(termFormat EnglishLanguage contestFinalScore "final score for contest")

(domain contestFinalScore 1 Contest)
(domain contestFinalScore 2 Agent)
(domain contestFinalScore 3 RealNumber)

(=>
  (contestFinalScore ?GAME ?AGENT ?NUM)
  (contestParticipant ?GAME ?AGENT))

(=>
  (contestParticipantScore ?GAME ?AGENT ?NUM)
  (hasPurpose ?NUM
    (exists (?SCORE)
      (and
        (instance ?SCORE Score)
        (represents ?NUM ?SCORE)))))

(instance PopulationByYearFn BinaryFunction)
(documentation PopulationByYearFn EnglishLanguage "(PopulationByYearFn ?AREA ?YEAR) 
denotes the integer that represents the count of the number of people inhabiting the 
geopolitical area ?AREA during a specific Year. This number gives an estimate from 
the US Bureau of the Census based on statistics from population censuses, vital statistics 
registration systems, or sample surveys pertaining to the recent past and on assumptions 
about future trends. The total population presents one overall measure of the potential 
impact of the country on the world and within its region.")
(termFormat EnglishLanguage PopulationByYearFn "population by year")

(domain PopulationByYearFn 1 GeopoliticalArea)
(domain PopulationByYearFn 2 Year)
(range PopulationByYearFn Integer)

(=>
  (equal ?NUM (PopulationByYearFn ?AREA ?YEAR))
  (holdsDuring ?YEAR
    (modalAttribute
      (exists (?COLL)
        (and
          (instance ?COLL GroupOfPeople)
          (forall (?X)
            (=>
              (and
                (home ?X ?HOME)
                (located ?HOME ?AREA))
              (member ?X ?COLL)))
          (memberCount ?COLL ?NUM))) Likely)))
          
(instance PopulationDensityByYearFn BinaryFunction)
(documentation PopulationDensityByYearFn EnglishLanguage "(&%PopulationDensityByYearFn 
?AREA ?YEAR) returns the &%PopulationFn ?AREA per 1 &%UnitOfAerea for &%Year ?YEAR.")
(termFormat EnglishLanguage PopulationDensityByYearFn "population density by year")

(domain PopulationDensityByYearFn 1 GeopoliticalArea)
(domain PopulationDensityByYearFn 2 Year)
(range PopulationDensityByYearFn FunctionQuantity)

(=>
  (and
    (equal ?NUM (PopulationDensityByYearFn ?AREA ?YEAR))
    (measure ?AREA ?AREAMEAS))
  (equal ?NUM
    (DivisionFn (PopulationByYearFn ?AREA ?YEAR) ?AREAMEAS)))

(instance originalExpressedInLanguage BinaryPredicate)
(documentation originalExpressedInLanguage EnglishLanguage "(&%originalExpressedInLanguage
?PROP ?LANG) means that &%Proposition ?PROP, the first time it was ever realized in
a &%LinguisticExpression, was first expressed in &%Language ?LANG.")
(termFormat EnglishLanguage originalExpressedInLanguage "original expressed in language")

(domain originalExpressedInLanguage 1 Proposition)
(domain originalExpressedInLanguage 2 Language)

(=>
  (originalExpressedInLanguage ?PROP ?LANG)
  (exists (?PHYS ?TIME)
    (and
      (instance ?PHYS LinguisticExpression)
      (representsInLanguage ?PHYS ?PROP ?LANG)
      (equal ?TIME (WhenFn ?PHYS))
      (not 
        (exists (?BEFORE ?OTHER)
          (and
            (instance ?OTHER LinguisticExpression)
            (represents ?OTHER? PROP)
            (equal ?BEFORE (WhenFn ?OTHER))
            (before ?BEFORE ?TIME)))))))
            
(instance organizationServiceArea BinaryPredicate)
(documentation organizationServiceArea EnglishLanguage "(&%organizationServiceArea ?ORG ?AREA
means that &%Organization ?ORG realizes its aims or vision within &%Region ?REGION.")
(termFormat EnglishLanguage organizationServiceArea "organization service area")

(domain organizationServiceArea 1 Organization)
(domain organizationServiceArea 2 GeographicArea)

(=>
  (and
    (organizationServiceArea ?ORG ?AREA)
    (aimOfOrganization ?ORG ?AIM))
  (exists (?PROP)
    (and
      (represents ?AIM ?PROP)
      (forall (?PROC ?RES)
        (=>
          (and
            (realization ?PROC ?PROP)
            (agent ?PROC ?ORG)
            (result ?PROC ?RES))
          (located ?RES ?AREA))))))

(instance precedesIn TernaryPredicate)
(documentation precedesIn EnglishLanguage "(&%precedesIn ?ENT1 ?ENT2 ?CONTEXT) means
that &%Entity ?ENT2 comes after &%Entity ?ENT2 in some context ?CONTEXT.  This is
very general purpose, and has to have subrelations that describe what exactly 'succeeds'
means. ")
(termFormat EnglishLanguage precedesIn "succeeds in")

(domain precedesIn 1 Entity)
(domain precedesIn 2 Entity)
(domain precedesIn 3 Entity)

(subrelation precedesInAlbum precedesIn)
(documentation precedesInAlbum EnglishLanguage "(&%precedesInAlbum ?ENT1 ?ENT2 ?ALBUM)
means that &%AudioRecording ?ENT1 comes before &%AudioRecording ?ENT2 in the &%List
?ALBUM")
(termFormat EnglishLanguage precedesInAlbum "succeeds in album")

(domain precedesInAlbum 1 AudioRecording)
(domain precedesInAlbum 2 AudioRecording)
(domain precedesInAlbum 3 List)

(=>
  (and
    (precedesInAlbum ?AUDIO1 ?AUDIO2 ?ALBUM)
    (equal ?AUDIO1 (ListOrderFn ?ALBUM ?N)))
  (exists (?N2)
    (and
      (equal ?N2 (AdditionFn ?N 1))
      (equal ?AUDIO2 (ListOrderFn ?ALBUM ?N2)))))
      
      
(instance precedes BinaryPredicate)
(documentation precedes EnglishLanguage "(&%precedes ?ENT1 ?ENT2) is a very
general-purpose relationship that defines how ?ENT1 existed before ?ENT2.")
(termFormat EnglishLanguage precedes "precedes")

(domain precedes 1 Entity)
(domain precedes 2 Entity)

(=>
  (precedes ?ENT1 ?ENT2)
  (before (BeginFn (WhenFn ?ENT1)) (BeginFn (WhenFn ?ENT2))))

(subrelation manufacturer creator)
(documentation manufacturer EnglishLanguage "(&%manufacturer ?AGENT ?OBJ) means that
&%Agent ?AGENT was the &%agent in a &%Manufacture process that produced &%Object ?OBJ")
(termFormat EnglishLanguage manufacturer "manufacturer")

(domain manufacturer 1 Agent)
(domain manufacturer 2 Object)

(=>
  (manufacturer ?AGENT ?OBJ)
  (exists (?MANUFACTURE)
    (and
      (instance ?M Manufacture)
      (agent ?M ?AGENT)
      (result ?M ?OBJ))))

(instance dateOfClosing BinaryPredicate)
(documentation dateOfClosing EnglishLanguage "(&%dateOfClosing ?AGENT ?DATE) means
that &%Organization ?AGENT stopped its operations - i.e. participating in any process -
after the &%TimePoint ?DATE")
(termFormat EnglishLanguage dateOfClosing "date of closing")

(domain dateOfClosing 1 Organization)
(domain dateOfClosing 2 TimePoint)

;; there does not exist a time after the time indicated in dateOfClosing where 
;; Organization was part of a process
(=>
  (dateOfClosing ?ORG ?DATE)
  (not
    (exists (?P ?T)
      (and
        (before ?DATE ?T)
        (instance ?P Process)
        (agent ?P ?ORG)))))

(instance dateOfOpening BinaryPredicate)
(documentation dateOfOpening EnglishLanguage "(&%dateOfOpening ?AGENT ?DATE) means
that &%Organization ?AGENT started its operations - i.e. participating in any process 
that involves a customer - after the &%TimePiont ?DATE")
(termFormat EnglishLanguage dateOfOpening "date of opening")

(domain dateOfOpening 1 Organization)
(domain dateOfOpening 2 TimePoint)

;; during the time between an organization's opening and closing, it is possible
;; for that organization to have customers. this is different from the year of
;; founding or date of establishment, as an organization may not be operational 
;; until other things are in place, and so they are not yet technically 'open'
(=>
  (and
    (dateOfOpening ?ORG ?OPEN)
    (dateOfClosing ?ORG ?CLOSE))
  (exists (?TO ?TC)
    (holdsDuring
      (TimeIntervalFn ?OPEN ?CLOSE)
      (modalAttribute
        (exists (?C ?P)
          (and
            (customer ?C ?ORG)
            (agent ?P ?ORG)
            (or
              (destination ?P ?C)
              (patient ?P ?C)))) Possibility))))
        
(instance releaseForSale TernaryPredicate)
(documentation releaseForSale EnglishLanguage "(&%releaseForSale ?OBJ ?AREA ?TIME) means that 
&%Object ?OBJ was released for sale in &%GeographicArea ?AREA at &%TimePoint ?TIME")
(termFormat EnglishLangauge releaseForSale "release for sale")

(domainSubclass releaseForSale 1 Object)
(domain releaseForSale 2 GeographicArea)
(domain releaseForSale 3 TimePoint)

;; after an object's release in an area, it is possible to buy it there
(=>
  (releaseForSale ?OBJ ?AREA ?TIME)
  (holdsDuring
    (ImmediateFutureFn ?TIME)
    (modalAttribute
      (exists (?O ?B)
        (and
          (instance ?O ?OBJ)
          (instance ?B Buying)
          (eventLocated ?B ?AREA)
          (patient ?B ?O))) Possibility)))

          