;; This is an initial check in of content in an early stage of
;; development and is not yet suitable for general use.

;; Access to and use of these products is governed by the GNU General
;; Public License <http://www.gnu.org/copyleft/gpl.html>.  By using
;; these products, you agree to be bound by the terms of the GPL.

;; Those who are interested in making use of this ontology are urged
;; to contact Adam Pease (adampease@earthlink.net) and Jan Scheffczyk
;; (jan.scheffczyk@gmx.net).  Version date: July, 2006
;; We ask the people using or referencing this work cite our primary
;; paper:

;; Niles, I., and Pease, A.  2001.  Towards a Standard Upper Ontology.
;; In Proceedings of the 2nd International Conference on Formal
;; Ontology in Information Systems (FOIS-2001), Chris Welty and Barry
;; Smith, eds, Ogunquit, Maine, October 17-19, 2001.  See also
;; http://www.ontologyportal.org

(instance weaponCarryingCapability TernaryPredicate)
(instance weaponCarryingCapability TotalValuedRelation)

(domain weaponCarryingCapability 1 MilitaryVehicle)
(domainSubclass weaponCarryingCapability 2 Weapon)
(domain weaponCarryingCapability 3 PositiveInteger)

(documentation weaponCarryingCapability "(&%weaponCarryingCapability
?MV ?WC ?I) means that the &%MilitaryVehicle ?MV is able to carry ?I
&%Weapons of class ?WC.")

;; being capable of carrying some weapon type enables the military
;; vehicle to do what the weapon does in case of some shooting or
;; damaging

(=>
  (and
    (weaponCarryingCapability ?MV ?WC ?COUNT)
    (instance ?WEAPON ?WC)
    (capability ?PC ?ROLE ?WEAPON)
    (or
      (subclass ?PC Shooting)
      (subclass ?PC Damaging)))
  (capability ?PC ?ROLE ?MV))

;; if some military vehicle can take part in a shooting then it must
;; carry some weapon which is able to do so

(=>
  (and
    (capability ?PC ?ROLE ?MV)
    (subclass ?PC Shooting))
  (exists (?WEAPON)
    (and
      (instance ?WEAPON Weapon)
      (part ?WEAPON ?MV)
      (capability ?PC ?ROLE ?WEAPON))))

;; is some weapon is part of a vehicle then it is in fact a military
;; vehicle

(=>
  (and
    (part ?WEAPON ?MV)
    (instance ?MV Vehicle))
  (instance ?MV MilitaryVehicle))

(instance personTransportCapability BinaryPredicate)
(instance personTransportCapability TotalValuedRelation)

(domain personTransportCapability 1 PassengerVehicle)
(domain personTransportCapability 2 PositiveInteger)

(documentation personTransportCapability "(&%personTransportCapability
?PV ?I) means that the &%PassengerVehicle ?PV is able to carry ?I
&%Humans.")

(instance maximumPayloadCapacity BinaryPredicate)
(instance maximumPayloadCapacity TotalValuedRelation)

(domain maximumPayloadCapacity 1 Vehicle)
(domain maximumPayloadCapacity 2 MassMeasure)

(documentation maximumPayloadCapacity "(&%maximumPayloadCapacity ?V
?MM) means that the &%Vehicle ?V has a maximum payload of ?MM. This
means that the vehicle can transport &%Objects weighing less than ?MM,
provided that their height and width are within the limits of
&%maximumPayloadHeightWidth.")

;; maximumPayloadCapacity limits the ability to transport goods

(=>
  (maximumPayloadCapacity ?V
    (MeasureFn ?LOAD ?UNITLOAD))
  (not
    (exists (?TP ?O)
      (and
        (instance ?TP Transport)
        (instrument ?TP ?V)
        (patient ?TP ?O)
        (weight ?O
          (MeasureFn ?WO ?WOU))
        (equal ?WOU ?UNITLOAD)
        (greaterThan ?WO ?LOAD)))))




(instance maximumPayloadHeightWidth TernaryPredicate)
(instance maximumPayloadHeightWidth TotalValuedRelation)

(domain maximumPayloadHeightWidth 1 Vehicle)
(domain maximumPayloadHeightWidth 2 LengthMeasure)
(domain maximumPayloadHeightWidth 3 LengthMeasure)

(documentation maximumPayloadHeightWidth "(&%maximumHeightWidth ?V
?LMHEIGHT ?LMWIDTH) means that the &%Vehicle ?V can transport
&%Objects with a &%height less then or equal to ?LMHEIGHT and &%width
less than or equal to ?LMWIDTH, provided that the &%weight of these
&%Objects is less than or equal to &%maximumPayloadCapacity.")

;; maximumPayloadHeightWidth limits the ability to transport goods

(=>
  (maximumPayloadHeightWidth ?V
    (MeasureFn ?HEIGHT ?UNITHEIGHT)
    (MeasureFn ?WIDTH ?UNITWIDTH))
  (not
    (exists (?TP ?O)
      (and
        (instance ?TP Transport)
        (instrument ?TP ?V)
        (patient ?TP ?O)
        (width ?O
          (MeasureFn ?WO ?WOU))
        (height ?O
          (MeasureFn ?HO ?HOU))
        (equal ?WOU ?UNITWIDTH)
        (equal ?HOU ?UNITHEIGHT)
        (greaterThan ?WO ?WIDTH) 
        (greaterThan ?HO ?HEIGHT)))))

;; maximumPayloadCapacity and maximumPayloadHeightWidth enable a
;; vehicle to transport certain goods that are within weight limits
;; and are small enough

(=>
  (and
    (maximumPayloadCapacity ?V
      (MeasureFn ?WEIGHT ?UNITWEIGHT))
    (maximumPayloadHeightWidth ?V
      (MeasureFn ?HEIGHT ?UNITHEIGHT)
      (MeasureFn ?WIDTH ?UNITWIDTH))
    (instance ?O SelfConnectedObject)
    (weight ?O
      (MeasureFn ?WEO ?WEOU))
    (width ?O
      (MeasureFn ?WO ?WOU))
    (height ?O
      (MeasureFn ?HO ?HOU))
    (equal ?WEOU ?UNITWEIGHT)
    (equal ?WOU ?UNITWIDTH)
    (equal ?HOU ?UNITHEIGHT)
    (lessThanOrEqual ?WEO ?WEIGHT)
    (lessThanOrEqual ?WO ?WIDTH) 
    (lessThanOrEqual ?HO ?HEIGHT))
  (capability
    (KappaFn ?TRANSPORT
      (and
        (instance ?TRANSPORT Transport)
        (patient ?TRANSPORT ?O)))
     instrument ?V))
