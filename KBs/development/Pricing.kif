;; ============================================================================
;;                    	    REARDEN COMMERCE, INC.
;;                	            Agreements Ontology
;; ============================================================================

;; Created by: Karen Joy Nomorosa (karen.nomorosa [at] reardencommerce [dot] com)
;; Created on: June 17, 2011
;; Last modified: 
;; Modified by: Karen Joy Nomorosa (karen.nomorosa [at] reardencommerce [dot] com)

;; Description:  This ontology describes different concepts attached to Pricing

;; Access to and use of these products is governed by the GNU General Public 
;; License <http://www.gnu.org/copyleft/gpl.html>. 
;; By using these products, you agree to be bound by the terms 
;; of the GPL.

;; We ask the people using or referencing this work cite our primary paper:

;; Niles, I., and Pease, A.  2001.  Towards a Standard Upper Ontology.  In 
;; Proceedings of the 2nd International Conference on Formal Ontology in 
;; Information Systems (FOIS-2001), Chris Welty and Barry Smith, eds, 
;; Ogunquit, Maine, October 17-19, 2001.  See also http://www.ontologyportal.org


(instance propositionOwner BinaryPredicate)
(documentation propositionOwner EnglishLanguage "(&%propositionOwner ?AGENT ?PROP) 
means that &%CognitiveAgent ?AGENT was the one who conceptualized or created the 
&%Proposition ?PROP")
(termFormat EnglishLanguage propositionOwner "proposition owner")

(domain propositionOwner 1 CognitiveAgent)
(domain propositionOwner 2 Proposition)

(=>
  (and
    (instance ?CREATE Creation)
    (result ?CREATE ?PROP)
    (instance ?PROP Proposition)
    (agent ?CREATE ?AGENT))
  (propositionOwner ?AGENT ?PROP))

;; ---------------------------------------------------------------------------------
;; Pricing Scheme
;; ---------------------------------------------------------------------------------

(subclass PricingScheme Proposition)
(documentation PricingScheme EnglishLanguage "&%PricingScheme refers to the conditions
attached to the price of a product of service")
(termFormat EnglishLanguage PricingScheme "pricing scheme")

(=>
  (instance ?PS PricingScheme)
  (exists (?AGENT ?CREATE)
    (and
      (instance ?CREATE Creation)
      (result ?CREATE ?PS)
      (agent ?CREATE ?AGENT))))

(instance priceRange QuaternaryPredicate)
(docume ntation priceRange EnglishLanguage "(&%priceRange ?OBJ ?MIN ?MAX ?AGENT) 
means that &%Agent ?AGENT attaches range of possible &%productPrice for ?OBJ with
minimum ?MIN and maximum ?MAX")
(termFormat EnglishLanguage priceRange "price range")

(domain priceRange 1 Entity)
(domain priceRange 2 CurrencyMeasure)
(domain priceRange 3 CurrencyMeasure)
(domain priceRange 4 Agent)

(instance validFor BinaryPredicate)
(documentation validFor EnglishLanguage "(&%validFor ?SCHEME ?AGENT) means that 
&%CurrencyMeasure that &%PricingScheme refers to applies to &%Agent ?AGENT")
(termFormat EnglishLanguage validFor "valid for")

(domain validFor 1 PricingScheme)
(domain validFor 2 Agent)

(instance validityPeriod BinaryPredicate)
(documentation validityPeriod EnglishLanguage "(&%validityPeriod ?SCHEME ?TIMEINT) means
that the &%CurrencyMeasure that &%PricingScheme refers to is valid for the given 
&%TimeInterval")
(termFormat EnglishLanguage validityPeriod "validity period")

(domain validityPeriod 1 PricingScheme)
(domain validityPeriod 2 TimeInterval)

(instance validPaymentType BinaryPredicate)
(documentation validPaymentType EnglishLanguage "(&%validPaymentType ?SCHEME ?PAYMENT)
means that the &%CurrencyMeasure that &%PricingScheme refers to is valid for the given
&%Payment class")
(termFormat EnglishLanguage validPaymentType "valid payment type")

(domain validPaymentType 1 PricingScheme)
(domainSubclass validPaymentType 2 Payment)
    
(instance pricePolicy BinaryPredicate)
(documentation pricePolicy EnglishLanguage "(&%pricePolicy ?SCHEME ?POLICY) describes 
the &%Policy ?POLICY attached to the given rate with the ?SCHEME")
(termFormat EnglishLanguage pricePolicy "rate policy")

(domain pricePolicy 1 PricingScheme)
(domain pricePolicy 2 Policy)    



;; ---------------------------------------------------------------------------------
;; Pricing Relationships
;; ---------------------------------------------------------------------------------

(instance negotiatedPrice TernaryPredicate)
(documentation negotiatedPrice EnglishLanguage "(&%negotiatedPrice ?ENT ?PRICE ?AGREE)
means that according to &%Agreement ?AGREE - which is agreed upon by seller and buyer -
the &%CurrencyMeasure ?PRICE is given to &%Entity ?ENT")
(domainSubclass negotiatedPrice 1 Entity)
(domain negotiatedPrice 2 CurrencyMeasure)
(domain negotiatedPrice 3 Agreement)

(=>
  (and
    (negotiatedPrice ?ENT ?PRICE ?AGREE)
    (partyToAgreement ?SELLER ?AGREE)
    (partyToAgreement ?BUYER ?AGREE)
    (subclass ?ENT Physical))
  (modalAttribute
    (=>
      (and
        (instance ?S Selling)
        (patient ?S ?ITEM)
        (instance ?ITEM ?ENT)
        (agent ?S ?SELLER)
        (destination ?S ?BUYER))
      (transactionAmount ?S ?PRICE)) Promise))

(=>
  (and
    (negotiatedPrice ?ENT ?PRICE ?AGREE)
    (partyToAgreement ?SELLER ?AGREE)
    (partyToAgreement ?BUYER ?AGREE)
    (subclass ?ENT Proposition))
  (modalAttribute
    (=>
      (and
        (instance ?ITEM ?ENT)
        (realization ?PROCESS ?ITEM)
        (instance ?S Selling)
        (patient ?S ?PROCESS)
        (agent ?S ?SELLER)
        (destination ?S ?BUYER))
      (transactionAmount ?S ?PRICE)) Promise))
      
;; TODO: Add rule (once Agreement ontology is finished) that states that there exists
;; a clause in Agreement that sets price to CurrencyMeasure. Also, that the partyToAgreement
;; in this case is the buyer and the seller, and that Physical is given monetaryValue
;; of CurrencyMeasure

(instance publishedPrice QuaternaryPredicate)
(documentation publishedPrice EnglishLanguage "(&%publishedPrice ?ENT ?PRICE ?AGENT ?PS)
means that the &%CurrencyMeasure ?PRICE is given by &%Agent ?AGENT to &%Entity ?ENT, 
based on conditions outlined in &%PricingScheme ?PS")
(termFormat EnglishLanguage publishedPrice "published price")

(domainSubclass publishedPrice 1 Entity)
(domain publishedPrice 2 CurrencyMeasure)
(domain publishedPrice 3 CognitiveAgent)
(domain publishedPrice 4 PricingScheme)


(instance unitPrice QuaternaryPredicate)
(documentation unitPrice EnglishLanguage "(&%unitPrice ?ENT ?QUANT ?AGENT ?PS) is meant
for objects that are not sold by the piece but by a certain unit of measure, for 
instance, vegetables that are sold by the pound.  &%FunctionQuantity ?QUANT, in this
case, refers to (&%PerFn &%CurrencyMeasure (&%MeasureFn &%RealNumber &%UnitOfMeasure)),
which reads something like X amount of money per Y unit.  This can be attached to
a &%PricingScheme ?PS by &%CognitiveAgent ?AGENT") 
(domainSubclass unitPrice 1 Entity)
(domain unitPrice 2 FunctionQuantity)
(domain unitPrice 3 CognitiveAgent)
(domain unitPrice 4 PricingScheme)

(=>
  (unitPrice ?ENT ?QUANT ?AGENT ?PS)
  (exists (?MEAS ?AMT ?UOM)
    (and
      (equal ?QUANT (PerFn ?MEAS (MeasureFn ?AMT ?UOM)))
      (instance ?MEAS CurrencyMeasure)))) 
            
