;;;;				Ontology of Transportation 			;;;;

;; Access to and use of these products is governed by the GNU General Public 
;; License <http://www.gnu.org/copyleft/gpl.html>. 
;; By using these products, you agree to be bound by the terms 
;; of the GPL.

;; Those who are interested in making use of this ontology are requested 
;; to contact Adam Pease (adampease@earthlink.net).
;; Version date: July, 2004
;; We ask the people using or referencing this work cite our primary paper:

;; Niles, I., and Pease, A.  2001.  Towards a Standard Upper Ontology.  In 
;; Proceedings of the 2nd International Conference on Formal Ontology in 
;; Information Systems (FOIS-2001), Chris Welty and Barry Smith, eds, 
;; Ogunquit, Maine, October 17-19, 2001. 

;; Sources:
;; This file creates terms to represent transport-related material in the 
;; CIA World Fact Book 2002 (http://www.cia.gov/cia/publications/factbook/).  
;; Additional concepts from Universal Joint Task List (version 4) 
;; (http://www.dtic.mil/doctrine/jel/cjcsd/cjcsm/m3500_4b.pdf) 
;; Additional references include: on-line Glossary of Landform and 
;; Geologic Terms at http://www.statlab.iastate.edu/soils/nssh/629.htm. 

;; Ontology dependencies: Merge.txt, Geography.kif, Government.kif

;;------------------------------------------------------------------------

;; Outline:
;;
;; I. Transportation concepts for CIA World Fact Book
;;	A. Railways
;;	B. Highways
;;	C. Waterways
;;	D. Pipelines
;;	E. Ports and harbors
;;	F. Merchant marine
;;	G. Airports
;;	H. Airports - with paved runways
;;	J. Heliports
;;	K. Transportation - note
;;
;; II. General Transportation Concepts
;;	A. Translocation
;;	B. Transitways
;;	   1. Land Transitways
;;		a. Roadways
;;		b. Railways
;;	   2. Water Transitways
;;	   3. Air Transitways
;;	   4. Pipelines
;;	C. Vehicles
;;	   1. Land Vehicles
;;		a. Road Vehicles
;;		b. Rail Vehicles
;;		c. Other
;;	   2. Water Vehicles
;;	   3. Air Vehicles
;;	D. Trafficability
;;	   1. Traffic Compatibility
;;	   2. Transitway State	
;;	E. Transit Systems and Routes
;;	   1. Physical Systems
;;	   2. Transit Systems
;;	   3. Transit Terminals
;;	   4. Transitway Junctions
;;	   5. Transit Routes
;;	F. Trips
;;	G. Transitway Capacity
;;	H. Transitway Obstacles
;;	I. Traffic Regulation
;;		1. Transit Authority
;;		2. Transit Control Systems
;;		3. Transit Control Devices
;;		4. Tolls or Usage Fees
;;	J. Transportation Businesses
;;		1. Business Types
;;		2. Personnel

;;========================================================================

;; I. Transportation Concepts for CIA World Fact Book

;;	A. Railways

(instance totalLengthOfRailwaySystem BinaryPredicate)
(domain totalLengthOfRailwaySystem 1 GeographicArea)
(domain totalLengthOfRailwaySystem 2 LengthMeasure)

(documentation totalLengthOfRailwaySystem 
"(&%totalLengthOfRailwaySystem ?AREA ?LENGTH) means that the sum  
length of all railway routes in the &%GeographicArea ?AREA 
is the &%LengthMeasure ?LENGTH.")


(<=>
    (totalLengthOfRailwaySystem ?AREA ?LENGTH)
    (length
            (KappaFn ?RAILWAYS
                    (and
                            (instance ?RAILWAYS Railway)
                            (located ?RAILWAYS ?AREA))
            ?LENGTH)))	

(=>
    (and
            (totalLengthOfRailwaySystem ?AREA ?LENGTH)
            (greaterThan ?LENGTH 0))
    (exists (?RAILWAY)
            (and
                    (instance ?RAILWAY Railway)
                    (located ?RAILWAY ?AREA))))

(instance lengthOfElectrifiedRailway BinaryPredicate)
(domain lengthOfElectrifiedRailway 1 GeographicArea)
(domain lengthOfElectrifiedRailway 2 LengthMeasure)

(documentation lengthOfElectrifiedRailway 
"(&%lengthOfElectrifiedRailway ?AREA ?LENGTH) means that the sum  
length of all &%ElectrifiedRailway routes in the &%GeographicArea 
?AREA is the &%LengthMeasure ?LENGTH.")

(<=>
    (lengthOfElectrifiedRailway ?AREA ?LENGTH)
    (length
            (KappaFn ?RAILWAYS
                    (and
                            (instance ?RAILWAYS ElectrifiedRailway)
                            (located ?RAILWAYS ?AREA))
            ?LENGTH)))	

(=>
    (and
            (lengthOfElectrifiedRailway ?AREA ?LENGTH)
            (greaterThan ?LENGTH 0))
    (exists (?RAILWAY)
            (and
                    (instance ?RAILWAY ElectrifiedRailway)
                    (located ?RAILWAY ?AREA))))

(instance lengthOfMultipleTrackRailway  BinaryPredicate)
(domain lengthOfMultipleTrackRailway  1 GeographicArea)
(domain lengthOfMultipleTrackRailway  2 LengthMeasure)

(documentation lengthOfMultipleTrackRailway  
"(&%lengthOfMultipleTrackRailway ?AREA ?LENGTH) means that the sum  
length of all &%MultipleTrackRailway routes in the &%GeographicArea 
?AREA is the &%LengthMeasure ?LENGTH.")

(<=>
    (lengthOfMultipleTrackRailway ?AREA ?LENGTH)
    (length
            (KappaFn ?RAILWAYS
                    (and
                            (instance ?RAILWAYS MultipleTrackRailway)
                            (located ?RAILWAYS ?AREA)))
            ?LENGTH))	

(=>
    (and
            (lengthOfMultipleTrackRailway ?AREA ?LENGTH)
            (greaterThan ?LENGTH 0))
    (exists (?RAILWAY)
            (and
                    (instance ?RAILWAY MultipleTrackRailway)
                    (located ?RAILWAY ?AREA))))

(instance lengthOfBroadGaugeRailway BinaryPredicate)
(domain lengthOfBroadGaugeRailway 1 GeographicArea)
(domain lengthOfBroadGaugeRailway 2 LengthMeasure)

(documentation lengthOfBroadGaugeRailway 
"(&%lengthOfBroadGaugeRailway ?AREA ?LENGTH) means that the sum length 
of broad gauge railway routes in the &%GeographicArea ?AREA is the 
&%LengthMeasure ?LENGTH.")

(<=>
    (lengthOfBroadGaugeRailway ?AREA ?LENGTH)
    (length
            (KappaFn ?RAILWAYS
                    (and
                            (instance ?RAILWAYS BroadGaugeRailway)
                            (located ?RAILWAYS ?AREA)))
            ?LENGTH))

(=>
    (and
            (lengthOfBroadGaugeRailway ?AREA (MeasureFn ?LENGTH ?UNIT))
            (instance ?UNIT UnitOfMeasure)
            (greaterThan ?LENGTH 0))
    (exists (?RAILWAY)
            (and
                    (instance ?RAILWAY BroadGaugeRailway)
                    (located ?RAILWAY ?AREA))))

(instance lengthOfDualGaugeRailway BinaryPredicate)
(domain lengthOfDualGaugeRailway 1 GeographicArea)
(domain lengthOfDualGaugeRailway 2 LengthMeasure)

(documentation lengthOfDualGaugeRailway 
"(&%lengthOfDualGaugeRailway ?AREA ?LENGTH) means that the sum length 
of dual gauge railway routes in the &%GeographicArea ?AREA is the 
&%LengthMeasure ?LENGTH.")

(<=>
    (lengthOfDualGaugeRailway ?AREA ?LENGTH)
    (length
            (KappaFn ?RAILWAYS
                    (and
                            (instance ?RAILWAYS DualGaugeRailway)
                            (located ?RAILWAYS ?AREA))
            ?LENGTH)))	

(=>
    (and
            (lengthOfDualGaugeRailway ?AREA (MeasureFn ?LENGTH ?UNIT))
            (instance ?UNIT UnitOfMeasure)
            (greaterThan ?LENGTH 0))
    (exists (?RAILWAY)
            (and
                    (instance ?RAILWAY DualGaugeRailway)
                    (located ?RAILWAY ?AREA))))

(instance lengthOfNarrowGaugeRailway BinaryPredicate)
(domain lengthOfNarrowGaugeRailway 1 GeographicArea)
(domain lengthOfNarrowGaugeRailway 2 LengthMeasure)

(documentation lengthOfNarrowGaugeRailway 
"(&%lengthOfNarrowGaugeRailway ?AREA ?LENGTH) means that the sum length 
of narrow gauge railway routes in the &%GeographicArea ?AREA is the 
&%LengthMeasure ?LENGTH.")

(<=>
    (lengthOfNarrowGaugeRailway ?AREA ?LENGTH)
    (length
            (KappaFn ?RAILWAYS
                    (and
                            (instance ?RAILWAYS NarrowGaugeRailway)
                            (located ?RAILWAYS ?AREA))
            ?LENGTH)))	

(=>
    (and
            (lengthOfNarrowGaugeRailway ?AREA (MeasureFn ?LENGTH ?UNIT))
            (instance ?UNIT UnitOfMeasure)
            (greaterThan ?LENGTH 0))
    (exists (?RAILWAY)
            (and
                    (instance ?RAILWAY NarrowGaugeRailway)
                    (located ?RAILWAY ?AREA))))

(instance lengthOfStandardGaugeRailway BinaryPredicate)
(domain lengthOfStandardGaugeRailway 1 GeographicArea)
(domain lengthOfStandardGaugeRailway 2 LengthMeasure)

(documentation lengthOfStandardGaugeRailway 
"(&%lengthOfStandardGaugeRailway ?AREA ?LENGTH) means that the sum length 
of standard gauge railway routes in the &%GeographicArea ?AREA is the 
&%LengthMeasure ?LENGTH.")

(<=>
    (lengthOfStandardGaugeRailway ?AREA ?LENGTH)
    (length
            (KappaFn ?RAILWAYS
                    (and
                            (instance ?RAILWAYS StandardGaugeRailway)
                            (located ?RAILWAYS ?AREA)))
            ?LENGTH))	

(=>
    (and
            (lengthOfStandardGaugeRailway ?AREA (MeasureFn ?LENGTH ?UNIT))
            (instance ?UNIT UnitOfMeasure)
            (greaterThan ?LENGTH 0))
    (exists (?RAILWAY)
            (and
                    (instance ?RAILWAY StandardGaugeRailway)
                    (located ?RAILWAY ?AREA))))

(instance lengthOfUnclassifiedGaugeRailway BinaryPredicate)
(domain lengthOfUnclassifiedGaugeRailway 1 GeographicArea)
(domain lengthOfUnclassifiedGaugeRailway 2 LengthMeasure)

(documentation lengthOfUnclassifiedGaugeRailway 
"(&%lengthOfUnclassifiedGaugeRailway ?AREA ?LENGTH) means that the sum length 
of railway routes in the &%GeographicArea ?AREA classified as something 
other than broad, dual, narrow, or standard gauge is the &%LengthMeasure 
?LENGTH.")

(<=>
    (lengthOfUnclassifiedGaugeRailway ?AREA ?LENGTH)
    (length
            (KappaFn ?RAILWAYS
                    (and
                            (located ?RAILWAYS ?AREA)
                            (not
                              (instance ?RAILWAYS 
                                       (UnionFn StandardGaugeRailway 
                                       (UnionFn BroadGaugeRailway 
                                       (UnionFn DualGaugeRailway 
                                                    NarrowGaugeRailway)))))))
            ?LENGTH))	

(=>
    (and
            (lengthOfUnclassifiedGaugeRailway ?AREA (MeasureFn ?LENGTH ?UNIT))
            (instance ?UNIT UnitOfMeasure)
            (greaterThan ?LENGTH 0))
    (exists (?RAILWAY)
            (and
                    (instance ?RAILWAY Railway)
                    (located ?RAILWAY ?AREA))))

(subclass Railway LandTransitway) ; &%Transitway is defined in Part II.
(subclass Railway StationaryArtifact)

(documentation Railway "&%Railway is the subclass of 
&%LandTransitways that have rails along which &%Trains may travel.  
A railway consists of the rail bed, sleepers, tracks, electric 
rails, switches, sensors, lights, crossing grades, and any other 
integral machinery or parts of a section of railway.")

(subclass BroadGaugeRailway Railway)
(subclass DualGaugeRailway Railway)
(subclass NarrowGaugeRailway Railway)
(subclass StandardGaugeRailway Railway)

(subclass ElectrifiedRailway Railway)

(documentation ElectrifiedRailway "&%ElectrifiedRailway is the subclass 
of &%Railway representing electrified railways.")

(subclass MultipleTrackRailway Railway)

(documentation MultipleTrackRailway "&%MultipleTrackRailway is the 
subclass of &%Railway whose instances consists of two or more sets of 
tracks running in parallel, allowing motion in both directions along 
a route without the need for sidings and delays.")

(=>
	(instance ?RAIL MultipleTrackRailway)
	(exists (?TRACK1 ?TRACK2)
		(and
			(instance ?TRACK1 RailroadTrack)
			(instance ?TRACK2 RailroadTrack)
			(not (equal ?TRACK1 ?TRACK2))
			(part ?TRACK1 ?RAIL)
			(part ?TRACK2 ?RAIL))))

(subclass RailroadTrack StationaryArtifact)

(documentation RailroadTrack "&%RailroadTrack is the class of 
&%StationaryArtifacts consisting of rails laid on supports to form 
a track for railway vehicles.")

(subclass TrackGauge InternalAttribute)

(documentation TrackGauge "&%TrackGauge is the collection of 
attributes that characterize sections of railways, according 
to the set distances between the two tracks of the &%Railway.  
Precisely, the measurement of track gauge is the distance 
between the inner vertical surfaces of the heads of the rails.  
Track gauges include broad, dual, standard, and narrow gauges.")

(instance trackWidth BinaryPredicate)
(subrelation trackWidth measure)
(documentation trackWidth "The distance between the two rails
of a &%Railway.")
(domain trackWidth 1 Railway)
(domain trackWidth 2 LengthMeasure)
                              
(instance BroadGauge TrackGauge)

(documentation BroadGauge "&%BroadGauge is the attribute of 
any &%Railway that has a &%TrackGauge wider than &%StandardGauge.")

(=>
	(and
		(instance ?RR Railway)
		(property ?RR BroadGauge)
		(trackWidth ?RR ?WIDTH))
	(greaterThan ?WIDTH (MeasureFn 1.44 Meter)))

(instance StandardGauge TrackGauge)

(documentation StandardGauge "&%StandardGauge is the attribute  
of &%Railways having the standardized track width that is 
used in North America and most Western European countries.  
The standard is typically a distance of 4 ft., 8-1/2 inches 
(1.44 meters). There is some variation within which usage is 
compatible, e.g., 1.35 meters. Standard gauge originated in 
England and was mandated by the U.S. Federal government for the 
U.S. Transcontinental Railroad.  It is also used in Canada, 
Great Britain, and most of Western Europe (but not in Ireland, 
or Spain and Portugal.") 

(=>
	(and
		(instance ?RR Railway)
		(property ?RR StandardGauge)
		(trackWidth ?RR ?WIDTH))
	(greaterThanOrEqualTo ?WIDTH (MeasureFn 1.435 Meter)))

(=>
	(and
		(instance ?RR Railway)
		(property ?RR StandardGauge)
		(trackWidth ?RR ?WIDTH))
	(lessThanOrEqualTo ?WIDTH (MeasureFn 1.44 Meter)))

(instance NarrowGauge TrackGauge)

(documentation NarrowGauge "&%NarrowGauge is the attribute  
of any &%Railway that has a &%TrackGauge narrower than 
&%StandardGauge.  There are several common track widths 
among &%NarrowGauge railways.") 

(=>
	(and
		(instance ?RR Railway)
		(property ?RR NarrowGauge)
		(trackWidth ?RR ?WIDTH))
	(lessThanOrEqualTo ?WIDTH (MeasureFn 1.435 Meter)))

(instance DualGauge TrackGauge)

(documentation DualGauge "&%DualGauge is the attribute of  
any &%Railway that has three parallel rails, thus allowing 
two different gauges of rolling stock to travel over it.") 

;;----------------------------------------------------------------------

;;	B. Highways

(instance totalLengthOfHighwaySystem BinaryPredicate)
(domain totalLengthOfHighwaySystem 1 GeographicArea)
(domain totalLengthOfHighwaySystem 2 LengthMeasure)

(documentation totalLengthOfHighwaySystem 
"(&%totalLengthOfHighwaySystem ?AREA ?LENGTH) means that the total 
length of the highway system in the &%GeographicArea ?AREA is ?LENGTH.  
The figure includes both paved and unpaved roads.")

(<=>
    (totalLengthOfHighwaySystem ?AREA ?LENGTH)
    (length (KappaFn ?HIGHWAYS
                    (and
                            (instance ?HIGHWAYS Roadway)
                            (located ?HIGHWAYS ?AREA)))
            ?LENGTH))

(=>
    (and
            (totalLengthOfHighwaySystem ?AREA (MeasureFn ?LENGTH ?UNIT))
            (instance ?UNIT UnitOfMeasure)
            (greaterThan ?LENGTH 0))
    (exists (?HIGHWAY)
            (and                       
                    (instance ?HIGHWAY Roadway)
                    (located ?HIGHWAY ?AREA))))

(=>
	(and
		(totalLengthOfHighwaySystem ?AREA ?LENGTH)
		(lengthOfPavedHighway ?AREA ?LENGTH1)
		(lengthOfUnpavedHighway ?AREA ?LENGTH2))
	(equal ?LENGTH (AdditionFn ?LENGTH1 ?LENGTH2)))

(=>
	(and
		(totalLengthOfHighwaySystem ?AREA (MeasureFn ?LENGTH ?UNIT))
		(lengthOfPavedHighway ?AREA (MeasureFn ?LENGTH1 ?UNIT))
		(lengthOfUnpavedHighway ?AREA (MeasureFn ?LENGTH2 ?UNIT))
		(instance ?UNIT UnitOfMeasure)
		(subclass ?UNIT LengthMeasure))
	(totalLengthOfHighwaySystem ?AREA 
		(MeasureFn (AdditionFn ?LENGTH1 ?LENGTH2) ?UNIT)))

(=>
	(and
		(totalLengthOfHighwaySystem ?AREA ?TOTAL)
		(lengthOfPavedHighway ?AREA ?PAVED))
	(greaterThanOrEqualTo ?TOTAL ?PAVED))

(=>
	(and
		(totalLengthOfHighwaySystem ?AREA ?TOTAL)
		(lengthOfUnpavedHighway ?AREA ?UNPAVED))
	(greaterThanOrEqualTo ?TOTAL ?UNPAVED))

(instance lengthOfPavedHighway BinaryPredicate)
(domain lengthOfPavedHighway 1 GeographicArea)
(domain lengthOfPavedHighway 2 LengthMeasure)

(documentation lengthOfPavedHighway 
"(&%lengthOfPavedHighway ?AREA ?LENGTH) means that the total length 
of &%SurfacedRoadway in the &%GeographicArea ?AREA is ?LENGTH.")

(<=>
    (lengthOfPavedHighway ?AREA ?LENGTH)
    (length (KappaFn ?HIGHWAYS
                    (and
                            (instance ?HIGHWAYS SurfacedRoadway)
                            (located ?HIGHWAYS ?AREA)))
            ?LENGTH))

(=>
    (and
            (lengthOfPavedHighway ?AREA (MeasureFn ?LENGTH ?UNIT))
            (instance ?UNIT UnitOfMeasure)
            (greaterThan ?LENGTH 0))
    (exists (?HIGHWAY)
            (and
                    (instance ?HIGHWAY SurfacedRoadway)
                    (located ?HIGHWAY ?AREA))))

(instance lengthOfExpresswaySystem BinaryPredicate)
(domain lengthOfExpresswaySystem 1 GeographicArea)
(domain lengthOfExpresswaySystem 2 LengthMeasure)

(documentation lengthOfExpresswaySystem 
"(&%lengthOfExpresswaySystem ?AREA ?LENGTH) means that the total length 
of &%Expressway in the &%GeographicArea ?AREA is ?LENGTH.")

(<=>
    (lengthOfExpresswaySystem ?AREA ?LENGTH)
    (length (KappaFn ?HIGHWAYS
                    (and
                            (instance ?HIGHWAYS Expressway)
                            (located ?HIGHWAYS ?AREA)))
            ?LENGTH))

(=>
    (and
            (lengthOfExpresswaySystem ?AREA (MeasureFn ?LENGTH ?UNIT))
            (instance ?UNIT UnitOfMeasure)
            (greaterThan ?LENGTH 0))
    (exists (?HIGHWAY)
            (and
                    (instance ?HIGHWAY Expressway)
                    (located ?HIGHWAY ?AREA))))

(=>
	(and
		(lengthOfExpresswaySystem ?AREA ?LENGTH1)
		(lengthOfPavedHighway ?AREA ?LENGTH2))
	(greaterThanOrEqualTo ?LENGTH2 ?LENGTH1))

(instance lengthOfUnpavedHighway BinaryPredicate)
(domain lengthOfUnpavedHighway 1 GeographicArea)
(domain lengthOfUnpavedHighway 2 LengthMeasure)

(documentation lengthOfUnpavedHighway 
"(&%lengthOfUnpavedHighway ?AREA ?LENGTH) means that the total length 
of &%UnsurfacedRoadway in the &%GeographicArea ?AREA is ?LENGTH.")

(<=>
    (lengthOfUnpavedHighway ?AREA ?LENGTH)
    (length (KappaFn ?HIGHWAYS
                    (and
                            (instance ?HIGHWAYS UnsurfacedRoadway)
                            (located ?HIGHWAYS ?AREA)))
            ?LENGTH))

(=>
    (and
            (lengthOfUnpavedHighway ?AREA (MeasureFn ?LENGTH ?UNIT))
            (instance ?UNIT UnitOfMeasure)
            (greaterThan ?LENGTH 0))
    (exists (?HIGHWAY)
            (and
                    (instance ?HIGHWAY UnsurfacedRoadway)
                    (located ?HIGHWAY ?AREA))))

(subclass Expressway SurfacedRoadway)

(documentation Expressway "&%Expressway is the subclass of 
&%SurfacedRoadways that are multiple-lane, limited-access highways 
designed for rapid travel by &%MotorVehicles.")

(subclass SurfacedRoadway Roadway)

(documentation SurfacedRoadway "&%SurfacedRoadway is the subclass of 
&%Roadways that have been improved by covering them with a substance 
to increase the hardness and smoothness of the surface.  Covering 
materials include pavement, concrete, asphalt, macadam, and gravel.")

(subclass UnsurfacedRoadway Roadway)

(documentation UnsurfacedRoadway "&%UnsurfacedRoadway is the subclass 
of &%Roadways that have natural, unimproved surfaces of dirt or sand.")

(disjoint SurfacedRoadway UnsurfacedRoadway)

;;----------------------------------------------------------------------

;;	C. Waterways

(instance totalLengthOfWaterways BinaryPredicate)
(domain totalLengthOfWaterways 1 GeographicArea)
(domain totalLengthOfWaterways 2 LengthMeasure)

(documentation totalLengthOfWaterways 
"(&%totalLengthOfWaterways ?AREA ?LENGTH) means that the 
total length of navigable &%Waterways in the &%GeographicArea ?AREA 
is the &%LengthMeasure ?LENGTH.")

(<=>
    (totalLengthOfWaterways ?AREA ?LENGTH)
    (length (KappaFn ?WATERWAY
                    (and
                            (instance ?WATERWAY Waterway)
                            (partlyLocated ?WATERWAY ?AREA))
            ?LENGTH)))

(=>
    (and
            (totalLengthOfWaterways ?AREA (MeasureFn ?LENGTH ?UNIT))
            (instance ?UNIT UnitOfMeasure)
            (greaterThan ?LENGTH 0))
    (exists (?WATERWAY)
            (and
                    (instance ?WATERWAY Waterway)
                    (located ?WATERWAY ?AREA))))

(subclass Waterway Transitway)
(subclass Waterway WaterArea)

(documentation Waterway "&%Waterway is the class of navigable waters, 
including &%Oceans, &%SeaLanes, &%Rivers, &%Canals, &%Lakes, and inland 
bodies of water.")

;; See definition in Geography.kif.  
;; Note: (instance <river> Waterway) asserted only for navigable rivers.

;;----------------------------------------------------------------------

;;	D. Pipelines

(instance totalPipelineInArea BinaryPredicate)
(domain totalPipelineInArea 1 GeographicArea)
(domain totalPipelineInArea 2 LengthMeasure)

(documentation totalPipelineInArea 
"(&%totalPipelineInArea ?AREA ?LENGTH) means that the &%GeopoliticalArea 
?AREA has ?LENGTH of &%Pipelines.")

(<=>
    (totalPipelineInArea ?AREA ?LENGTH)
    (length (KappaFn ?PIPE
                    (and
                            (instance ?PIPE Pipeline)
                            (located ?PIPE ?AREA)))
            ?LENGTH))

(=>
    (and
            (totalPipelineInArea ?AREA (MeasureFn ?LENGTH ?UNIT))
            (instance ?UNIT UnitOfMeasure)
            (greaterThan ?LENGTH 0))
    (exists (?PIPE)
            (and
                    (instance ?PIPE Pipeline)
                    (located ?PIPE ?AREA))))

(instance lengthOfCrudeOilPipeline BinaryPredicate)
(domain lengthOfCrudeOilPipeline 1 GeographicArea)
(domain lengthOfCrudeOilPipeline 2 LengthMeasure)

(documentation lengthOfCrudeOilPipeline 
"(&%lengthOfCrudeOilPipeline ?AREA ?AMOUNT) means that in the 
&%GeograpicArea ?AREA there is the &%LengthMeasure ?AMOUNT of 
&%CrudeOilPipeline.")

(<=>
    (lengthOfCrudeOilPipeline ?AREA ?LENGTH)
    (length 
            (KappaFn ?PIPELINE
                    (and
                            (instance ?PIPELINE CrudeOilPipeline)
                            (located ?PIPELINE ?AREA)))
            ?LENGTH))

    (=>
            (and
                    (lengthOfCrudeOilPipeline ?AREA ?AMOUNT1)
                    (totalPipelineInArea ?AREA ?AMOUNT2))
            (lessThanOrEqualTo ?AMOUNT1 ?AMOUNT2))

(instance lengthOfNaturalGasPipeline BinaryPredicate)
(domain lengthOfNaturalGasPipeline 1 GeographicArea)
(domain lengthOfNaturalGasPipeline 2 LengthMeasure)

(documentation lengthOfNaturalGasPipeline 
"(&%lengthOfNaturalGasPipeline ?AREA ?AMOUNT) means that in the 
&%GeograpicArea ?AREA there is the &%LengthMeasure ?AMOUNT of 
&%NaturalGasPipeline.")

(<=>
    (lengthOfNaturalGasPipeline ?AREA ?LENGTH)
    (length 
            (KappaFn ?PIPELINE
                    (and
                            (instance ?PIPELINE NaturalGasPipeline)
                            (located ?PIPELINE ?AREA)))
            ?LENGTH))

    (=>
            (and
                    (lengthOfNaturalGasPipeline ?AREA ?AMOUNT1)
                    (totalPipelineInArea ?AREA ?AMOUNT2))
            (lessThanOrEqualTo ?AMOUNT1 ?AMOUNT2))

(instance lengthOfPetroleumProductPipeline BinaryPredicate)
(domain lengthOfPetroleumProductPipeline 1 GeographicArea)
(domain lengthOfPetroleumProductPipeline 2 LengthMeasure)

(documentation lengthOfPetroleumProductPipeline 
"(&%lengthOfPetroleumProductPipeline ?AREA ?AMOUNT) means that in the 
&%GeograpicArea ?AREA there is the &%LengthMeasure ?AMOUNT of 
&%PetroleumProductPipeline.")

(<=>
    (lengthOfPetroleumProductPipeline ?AREA ?LENGTH)
    (length 
            (KappaFn ?PIPELINE
                    (and
                            (instance ?PIPELINE PetroleumProductPipeline)
                            (located ?PIPELINE ?AREA)))
            ?LENGTH))

    (=>
            (and
                    (lengthOfPetroleumProductPipeline ?AREA ?AMOUNT1)
                    (totalPipelineInArea ?AREA ?AMOUNT2))
            (lessThanOrEqualTo ?AMOUNT1 ?AMOUNT2))

(subclass Pipeline Transitway)

(documentation Pipeline "&%Pipeline is the class of pipelines used 
to transport various kinds of fluids.")

(=>
	(and 
		(instance ?PIPE Pipeline)
		(instance ?MOTION Motion)
		(instrument ?MOTION ?PIPE)
		(patient ?MOTION ?STUFF))
	(instance ?STUFF (ExtensionFn Fluid)))

(subclass CrudeOilPipeline Pipeline)

(documentation CrudeOilPipeline "&%CrudeOilPipeline is the subclass of 
&%Pipelines that are used to carry &%CrudeOil.")

(=>
	(and 
		(instance ?PIPE CrudeOilPipeline)
		(instance ?MOTION Motion)
		(instrument ?MOTION ?PIPE)
		(patient ?MOTION ?OIL))
	(instance ?OIL Petroleum))

(subclass NaturalGasPipeline Pipeline)

(documentation NaturalGasPipeline "&%NaturalGasPipeline is the subclass 
of &%Pipelines that are used to carry &%NaturalGas.")

(=>
	(and 
		(instance ?PIPE NaturalGasPipeline)
		(instance ?MOTION Motion)
		(instrument ?MOTION ?PIPE)
		(patient ?MOTION ?GAS))
	(instance ?GAS NaturalGas))

(subclass PetroleumProductPipeline Pipeline)

(documentation PetroleumProductPipeline 
"&%PetroleumProductPipeline is the subclass of &%Pipelines that are 
used to carry &%PetroleumProducts.")

(=>
	(and 
		(instance ?PIPE PetroleumProductPipeline)
		(instance ?MOTION Motion)
		(instrument ?MOTION ?PIPE)
		(patient ?MOTION ?STUFF))
	(instance ?STUFF PetroleumProduct))

;;----------------------------------------------------------------------

;;	E. Ports and harbors

(subclass PortCity City)

(documentation PortCity "&%PortCity is the subclass of &%City whose 
instances are cities or towns located adjacent to a &%Harbor, which is 
included in the administrative area of the city.")

(=>
	(instance ?CITY PortCity)
	(exists (?HARBOR)
		(and 
			(instance ?HARBOR Harbor)
			(geographicSubregion ?HARBOR ?CITY))))

(subclass RiverPort PortCity)

(documentation RiverPort "&%RiverPort is the subclass of &%PortCity 
whose instances are port cities &%Adjacent to a navigable &%River.")

(=>
	(instance ?PORT RiverPort)
	(exists (?RIVER)
		(and
			(instance ?RIVER River)
			(instance ?RIVER Waterway)
			(meetsSpatially ?PORT ?RIVER)))) 

(=>
	(meetsSpatially ?OBJECT1 ?OBJECT2)
	(orientation ?OBJECT1 ?OBJECT2 Adjacent))

(subclass SeaPort PortCity)

(documentation SeaPort "&%SeaPort is the subclass of &%PortCity 
whose instances are port cities on or closely linked to a &%Sea or 
&%Ocean.")

(=>
	(instance ?PORT SeaPort)
	(exists (?SEA)
		(and
			(or
				(instance ?SEA Sea)
				(instance ?SEA Ocean))
			(or 
				(orientation ?PORT ?SEA Adjacent)
				(orientation ?PORT ?SEA Near)))))

(subclass ContainerPort PortCity)
(relatedInternalConcept ContainerPort ContainerShip)

(subclass DeepDraftPort PortCity)
(=>
	(instance ?PORT DeepDraftPort)
	(exists (?HARBOR)
		(and
			(instance ?HARBOR DeepDraftHarbor)
			(geographicSubregion ?HARBOR ?PORT))))

(subclass DeepDraftHarbor Harbor)

(documentation DeepDraftHarbor "&%DeepDraftHarbor is the subclass 
of &%Harbors that have a &%waterDepth sufficient to accommodate 
vessels of a &%ladenDraft of 45 feet (13.7 meters) or greater.")

(=>
	(instance ?HARBOR DeepDraftHarbor)
	(navigableForDraft ?HARBOR (MeasureFn 13.7 Meter)))

(=>
	(instance ?HARBOR DeepDraftHarbor)
	(navigableForDraft ?HARBOR (MeasureFn 45 Foot)))

(subclass DeepwaterPort PortFacility)

(documentation DeepwaterPort "&%DeepwaterPort is the subclass of 
&%PortFacility whose instances meet the criteria defined under 33 U.S.C.  section 1502(1) as 'any fixed or floating man-made structures other than 
a vessel, or any group of such structures, located beyond the territorial 
sea and off the coast of the United States and which are used or intended 
for use as a port or terminal for the loading or unloading and further 
handling of oil for transportation to any State.... The term includes all associated components and equipment including pipelines, pumping stations, service platforms, mooring buoys, and similar appurtenances to the extent 
they are located seaward of the high water mark.'")

(subclass Harbor WaterArea)

(documentation Harbor "&%Harbor is the subclass of &%WaterAreas that 
provide shelter and anchorage for &%Watercraft.")

(subclass Anchorage WaterArea)

(documentation Anchorage "&%Anchorage is the subclass of &%WaterAreas 
where &%Watercraft may anchor with some shelter or safety.  Anchorages 
may be inside a &%Harbor or offshore.")

(subclass OffshoreAnchorage Anchorage)

(documentation OffshoreAnchorage "&%OffshoreAnchorage is the subclass 
of &%Anchorages that are located offshore and not within a &%Harbor.")

(=>
	(instance ?ANCHOR OffshoreAnchorage)
	(not 
		(exists (?HARBOR)
			(and
				(instance ?HARBOR Harbor)
				(located ?ANCHOR ?HARBOR)))))

(subclass PortFacility GeopoliticalArea)

(documentation PortFacility "&%PortFacility is the class of port 
complexes, including piers and docking space, moorings, cargo-handling 
and other support facilities for marine traffic.  Ships are loaded and 
unloaded at a &%PortFacility.")

;; FUNCTION:
(instance PortFacilityFn UnaryFunction)
(domain PortFacilityFn 1 PortCity)
(range PortFacilityFn PortFacility)

(documentation PortFacilityFn "(&%PortFacilityFn ?CITY) denotes the 
&%PortFacility, including mooring areas, docking space, and on-land 
support facilities for marine traffic, of the &%Port ?CITY, considered 
as a whole.")

;;----------------------------------------------------------------------

;;	F. Merchant marine

(subclass MerchantMarine Collection)

(documentation MerchantMarine "&%MerchantMarine is a class of 
&%Collections of &%Ships, each collection belonging to a particular 
&%Nation or &%GeopoliticalArea, in whose &%ShipRegister the member 
ships are enrolled.  For example, the merchant marine of &%France.")

;; FUNCTION:
(instance MerchantMarineFn UnaryFunction)
(domain MerchantMarineFn 1 GeopoliticalArea)
(range MerchantMarineFn MerchantMarine)

(documentation MerchantMarineFn "(&%MerchantMarineFn ?AREA) denotes 
the &%Collection of all commercial ships registered in the 
&%ShipRegister of the &%GeopoliticalArea ?AREA.")

(=>
	(and
		(instance ?AREA GeopoliticalArea)
		(member ?SHIP (MerchantMarineFn ?AREA)))
	(instance ?SHIP MerchantMarineShip))

(=>
	(and
		(instance ?AREA GeopoliticalArea)
		(instance (MerchantMarineFn ?AREA) MerchantMarine))
	(possesses ?AREA (MerchantMarineFn ?AREA)))


(instance fleetGrossRegisteredTonnage BinaryPredicate)
(domain fleetGrossRegisteredTonnage 1 Collection)
(domain fleetGrossRegisteredTonnage 2 PhysicalQuantity)
(subrelation fleetGrossRegisteredTonnage measure)

(documentation fleetGrossRegisteredTonnage 
"(&%fleetGrossRegisteredTonnage ?FLEET ?AMOUNT) means that the 
&%Collection of &%Ships ?FLEET has a total carrying capacity of ?AMOUNT 
in &%RegistryTons.  This is the total &%vesselGrossRegisteredTonnage of 
all the vessels combined.  Gross Registered Tonnage, or GRT, is the 
capacity of a vessel calculated on an equivalence of 100 cubic feet of 
sheltered area per ton.")

(=>
	(and
		(instance ?UNIT UnitOfMeasure)
		(fleetGrossRegisteredTonnage ?FLEET (MeasureFn ?NUMBER ?UNIT)))
	(equal ?UNIT RegistryTon))

(instance fleetDeadWeightTonnage BinaryPredicate)
(domain fleetDeadWeightTonnage 1 Collection)
(domain fleetDeadWeightTonnage 2 MassMeasure)
(subrelation fleetDeadWeightTonnage measure)

(documentation fleetDeadWeightTonnage 
"(&%fleetDeadWeightTonnage ?FLEET ?AMOUNT) means that the &%Collection 
of &%Ships ?FLEET has a total carrying capacity of ?AMOUNT in &%LongTons.  
This is the total &%vesselDeadWeightTonnage of all the vessels combined.  
Dead Weight Tonnage, or DWT, is the weight of cargo plus stores that a  
vessel can carry when immersed to the proper load line.")

(=>
	(and
		(instance ?UNIT UnitOfMeasure)
		(fleetDeadWeightTonnage ?FLEET (MeasureFn ?NUMBER ?UNIT)))
	(equal ?UNIT LongTon))

(subclass MerchantMarineShip Ship)
(names "merchant ship" MerchantMarineShip)
(names "commercial vessel" MerchantMarineShip)

(documentation MerchantMarineShip "&%MerchantMarineShip is the class 
of &%Ships that carry goods or passengers in exchange for payment.  
This excludes military ships, as well as working ships such as tugboats 
and fishing vessels.  Merchant Marine ships belong to the 
&%MerchantMarine of some country and are registered in the related 
&%ShipRegister.")

    (=>
            (and
                    (instance ?SHIP MerchantMarineShip)
                    (measure ?SHIP (MeasureFn ?GRT RegistryTon)))
            (greaterThanOrEqualTo ?GRT 1000))

(instance memberType BinaryPredicate)
(domain memberType 1 Collection)
(domain memberType 2 SetOrClass)

(documentation memberType "(&%memberType ?GROUP ?TYPE) means that all 
the members of the &%Collection ?GROUP belong to the &%SetOrClass 
?TYPE.")

(=>
    (and
            (memberType ?GROUP ?TYPE)
            (member ?MEMBER ?GROUP))
    (instance ?MEMBER ?TYPE))

(instance memberTypeCount TernaryPredicate)
(domain memberTypeCount 1 Collection)
(domain memberTypeCount 2 SetOrClass)
(domain memberTypeCount 3 NonnegativeInteger)

(documentation memberTypeCount 
"(&%memberTypeCount ?GROUP ?TYPE ?NUMBER) means that the 
&%Collection ?GROUP has ?NUMBER members of the kind ?TYPE.")

(=>
    (memberTypeCount ?GROUP ?TYPE ?NUMBER)
    (exists (?SUBGROUP)
            (and
                    (subCollection ?SUBGROUP ?GROUP)
                    (memberCount ?SUBGROUP ?NUMBER)
                    (memberType ?SUBGROUP ?TYPE))))

(=>
        (and
                (memberCount ?GROUP ?NUMBER1)
                (memberTypeCount ?GROUP ?TYPE ?NUMBER2))
        (greaterThanOrEqualTo ?NUMBER1 ?NUMBER2))

(=>
    (and
            (memberTypeCount ?GROUP ?TYPE ?NUMBER)
            (equal ?NUMBER 0))
    (not
            (exists (?ITEM)
                    (and
                            (instance ?ITEM ?TYPE)
                            (member ?ITEM ?GROUP)))))

(instance cargoType BinaryPredicate)
(domain cargoType 1 TransportationDevice)
(domainSubclass cargoType 2 Object)

(documentation cargoType "(&%cargoType ?DEVICE ?TYPE) means that the 
&%TransportationDevice ?DEVICE typically carries cargo of the kind 
?TYPE.")

(subclass CargoShip Ship)
(documentation CargoShip "CargoShip is the subclass of Ships that 
transport goods in exchange for payment.  CargoShip includes ships 
that carry all kinds of cargo, including oil and bulk products as well 
as packaged, palletized, or containerized goods.")

(subclass PetroleumTankerShip CargoShip)
(names "petroleum tanker" PetroleumTankerShip)
(names "oil tanker" PetroleumTankerShip)
(=>
	(instance ?SHIP PetroleumTankerShip)
	(cargoType ?SHIP PetroleumProduct))

(subclass ChemicalTankerShip CargoShip)
(names "chemical carrier" ChemicalTankerShip)
(=>
	(instance ?SHIP ChemicalTankerShip)
	(cargoType ?SHIP ChemicalProduct))

(documentation ChemicalTankerShip "&%ChemicalTankerShip is the 
subclass of ships that carry &%ChemicalProducts.")

(subclass Chemical-OilTankerShip ChemicalTankerShip)

(subclass LiquefiedGasTankerShip CargoShip)
(names "Liquefied gas carrier" LiquefiedGasTankerShip)
(=>
	(instance ?SHIP LiquefiedGasTankerShip)
	(cargoType ?SHIP ChemicalProduct))
(=>
	(instance ?SHIP LiquefiedGasTankerShip)
	(cargoType ?SHIP (ExtensionFn Liquid)))

(subclass LiquefiedGas-ChemicalTankerShip LiquefiedGasTankerShip)

(subclass CombinationBulkCarrierShip CargoShip)
(names "combination carrier" CombinationBulkCarrierShip)

(subclass CombinationBulk-OilCarrierShip CombinationBulkCarrierShip)
(=>
	(instance ?SHIP CombinationBulk-OilCarrierShip)
	(cargoType ?SHIP Object))
(=>
	(instance ?SHIP CombinationBulk-OilCarrierShip)
	(cargoType ?SHIP Petroleum))

(subclass CombinationOre-OilCarrierShip CombinationBulkCarrierShip)
(=>
	(instance ?SHIP CombinationOre-OilCarrierShip)
	(cargoType ?SHIP Mineral))
(=>
	(instance ?SHIP CombinationOre-OilCarrierShip)
	(cargoType ?SHIP Petroleum))

(subclass DryBulkCarrierShip CargoShip)

(subclass BulkCargoShip DryBulkCarrierShip)
(subclass OreCarrierShip DryBulkCarrierShip)
(subclass SelfDischargingBulkCarrierShip DryBulkCarrierShip)
(subclass CementCarrierShip DryBulkCarrierShip)
(subclass WoodChipsCarrierShip DryBulkCarrierShip)
(subclass UreaCarrierShip DryBulkCarrierShip)

(subclass GeneralCargoShip CargoShip)
(names "freighter" CargoShip)

(=>
	(instance ?SHIP GeneralCargoShip)
	(cargoType ?SHIP Product))

(subclass PalletizedCargoShip GeneralCargoShip)
(subclass DeckCargoShip GeneralCargoShip)

(subclass ContainerShip CargoShip)
(=>
	(instance ?SHIP ContainerShip)
	(cargoType ?SHIP ShipContainer))

(subclass ShipContainer SelfConnectedObject)

(documentation ShipContainer "&%ShipContainer is the class of specialized 
large containers designed for shipping goods aboard &%ContainerShips.")

(subclass RefrigeratedCargoShip CargoShip)
(names "refrigerated carrier" RefrigeratedCargoShip)

(subclass RollOnRollOffCargoShip CargoShip)
(names "roll-on roll-off" RollOnRollOffCargoShip)
(names "Ro-Ro" RollOnRollOffCargoShip)

(subclass Container-RoRoCargoShip RollOnRollOffCargoShip)

(subclass VehicleCarrierShip RollOnRollOffCargoShip)
(=>
	(instance ?SHIP VehicleCarrierShip)
	(cargoType ?SHIP Vehicle))

(subclass Passenger-LandingCraft RollOnRollOffCargoShip)
(subclass Passenger-LandingCraft PassengerAndCargoShip)

(subclass RailcarCarrierShip RollOnRollOffCargoShip)
(=>
	(instance ?SHIP RailcarCarrierShip)
	(cargoType ?SHIP RollingStock))

(subclass LivestockCarrierShip CargoShip)
(=>
	(instance ?SHIP LivestockCarrierShip)
	(cargoType ?SHIP Livestock))

(subclass BargeCarrierShip CargoShip)

(subclass MultifunctionalLargeLoadCarrierShip CargoShip)
(names "heavy lift carrier" MultifunctionalLargeLoadCarrierShip)
(names "heavy cargo carrier" MultifunctionalLargeLoadCarrierShip)

(documentation PassengerShip "&%PassengerShip is the subclass of 
&%Watercraft designed for the purpose of carrying passengers.")

(subclass PassengerShip Ship)
(=>
	(instance ?SHIP PassengerShip)
	(cargoType ?SHIP Human))

(subclass PassengerAndCargoShip PassengerShip)
(subclass PassengerAndCargoShip CargoShip)

(subclass ShortSeaPassengerShip PassengerShip)

(subclass SpecializedTankerShip CargoShip)
(=>
	(instance ?SHIP SpecializedTankerShip)
	(cargoType ?SHIP (ExtensionFn Fluid)))

(subclass FishingShip Watercraft)

(subclass Trawler FishingShip)
(subclass FishFactoryShip FishingShip)
(subclass FishCarrierShip FishingShip)
(subclass FishingVessel FishingShip)

(subclass OffshoreSupplyShip Ship)
(subclass OffshoreSupportShip Ship)
(subclass OffshoreWellProductionShip Ship)
(subclass DrillingShip Ship)
(subclass ResearchShip Ship)
(subclass PusherTug TugBoat)
(subclass Dredger Ship)
(subclass HopperDredger Dredger)
(subclass MotorHopper Ship)
(subclass SludgeDisposalVessel Ship)
(subclass CraneShip Ship)
(subclass CableShip Ship)
(subclass IceBreakerShip Ship)

;;-----------------------------------

(subclass ShipRegistration ContentBearingObject)
(names "ship registration" ShipRegistration)

(documentation ShipRegistration "&%ShipRegistration is the official 
document containing information about the ownership, size, and 
flag state (flag of registry) of an individual &%Ship, as registered 
in the &%ShipRegister maintained by the maritime authorities of a 
particular &%Nation or &%OverseasArea of a nation.  A ship flies the 
flag of its registered nation or area, and the ship is subject to the 
maritime regulations and rules of taxation of its &%flagState.")

(=>
	(and
		(instance ?REGISTRATION ShipRegistration)
		(instance ?SHIP Ship)
		(possesses ?SHIP ?REGISTRATION)
		(instance ?AREA GeopoliticalArea)
		(flagState ?SHIP ?AREA))
	(subsumesContentInstance (ShipRegisterFn ?AREA) ?REGISTRATION))

;; If a ship's registration shows that its flag of registry is <place>, 
;; then a Proposition to that effect is in the registry of that <place> as well. 

(instance marineInventory BinaryPredicate)
(domain marineInventory 1 MerchantMarine)
(domain marineInventory 2 ShipRegister)
(documentation marineInventory "A relation between a &%MerchantMarine
and a &%ShipRegister which is a member of that &%MerchantMarine")

(subclass ShipRegister ContentBearingObject)

(documentation ShipRegister "A &%ShipRegister is a record of each &%Ship 
and owner registered with the maritime authorities of a country or 
possession, colony, or territory of a country.  Ships on the 
&%ShipRegister of a given region fly the flag of that region and are 
subject to its maritime regulations and rules of taxation.") 

(=>
    (instance ?MM (MerchantMarineFn ?AREA))
    (exists (?REGISTER)
            (and
                    (instance ?REGISTER ShipRegister)
                    (possesses ?AREA ?REGISTER)
                    (marineInventory ?MM ?REGISTER))))

(subclass NationalShipRegister ShipRegister)

(documentation NationalShipRegister "A &%NationalShipRegister 
is a record of the &%Ships that are officially registered with 
a particular &%Nation, including their tonnage and ownership.")

(=>
	(and
		(instance ?NATIONAL NationalShipRegister)
		(possesses ?AREA ?NATIONAL))
	(instance ?AREA Nation))

(instance ShipRegisterFn UnaryFunction)
(domain ShipRegisterFn 1 GeopoliticalArea)
(range ShipRegisterFn ShipRegister)

(documentation ShipRegisterFn "(&%ShipRegisterFn ?AREA) 
denotes the &%ShipRegister of the &%Ships that fly the flag of 
the &%GeopoliticalArea ?AREA.")

(=>
	(and
		(instance ?AREA GeopoliticalArea)
		(instance (ShipRegisterFn ?AREA) ShipRegister))
	(possesses ?AREA (ShipRegisterFn ?AREA)))

(=>
	(and
		(instance (ShipRegisterFn ?AREA) ShipRegister)
		(instance ?AREA Nation))
	(instance (ShipRegisterFn ?AREA) NationalShipRegister))

(=>
	(and
		(instance (ShipRegisterFn ?AREA) ShipRegister)
		(instance ?AREA OverseasArea))
	(instance (ShipRegisterFn ?AREA) OffshoreShipRegister))

(=>
	(and
		(instance ?SHIP Ship)
		(instance ?AREA GeopoliticalArea)
		(member ?SHIP (MerchantMarineFn ?AREA)))
	(exists (?REGISTRATION)
		(and
			(instance ?REGISTRATION ShipRegistration)
			(possesses ?SHIP ?REGISTRATION)
			(subsumesContentInstance (ShipRegisterFn ?AREA) ?REGISTRATION))))
		
(subclass InternalShipRegister ShipRegister)

(documentation InternalShipRegister "&%InternalShipRegister is 
a subset of a &%NationalShipRegister.  Ships on an internal 
register fly the same flag as on the national register but are 
subject to different taxation and crewing rules, which are 
typically more lenient.  An internal register may function 
primarily as a &%FlagOfConvenienceRegister.")

(=>
	(and
		(instance ?INTERNAL InternalShipRegister)
		(possesses ?AREA ?INTERNAL))
	(instance ?AREA Nation))

(subclass OffshoreShipRegister ShipRegister)
(names "captive register" OffshoreShipRegister)
(names "offshore ship register" OffshoreShipRegister)

(documentation OffshoreShipRegister "&%OffshoreShipRegister is 
the class of &%ShipRegisters maintained by a colony, territory, or 
possession (&%OffshoreArea) of a nation.  Typically such a register has more lenient maritime 
regulations with respect to taxation and crewing of ships than does 
the national register associated with the country of which the 
offshore area is a dependency.")

(=>
	(and
		(instance ?OFFSHORE OffshoreShipRegister)
		(possesses ?AREA ?OFFSHORE))
	(instance ?AREA Nation))

(subclass FlagOfConvenienceRegister ShipRegister)
(names "flag of convenience" FlagOfConvenienceRegister)
(names "open register" FlagOfConvenienceRegister)

(documentation FlagOfConvenienceRegister 
"&%FlagOfConvenienceRegister is the subclass of &%ShipRegisters 
in which most of the registered ships are owned outside of the 
&%GeopoliticalArea to which the registry belongs.  
&%InternalShipRegisters and &%OffshoreShipRegisters both may act as 
&%FlagOfConvenienceRegisters, if permitted by the maritime 
regulations of the registry owner.")

(instance fOCShipsByOrigin TernaryPredicate)
(domain fOCShipsByOrigin 1 MerchantMarine)
(domain fOCShipsByOrigin 2 GeopoliticalArea)
(domain fOCShipsByOrigin 3 NonnegativeInteger)

(documentation fOCShipsByOrigin 
"(&%fOCShipsByOrigin ?MM ?AREA ?COUNT) means that the 
&%MerchantMarine ?MM has ?COUNT number of ships from the 
&%GeopoliticalArea ?AREA in its &%ShipRegister, using it as 
a &%FlagOfConvenience, although the owner of the ships is in 
?AREA.")

(=>
    (and
            (fOCShipsByOrigin ?MM ?HOME ?COUNT)
            (equal ?MM (MerchantMarineFn ?AREA)))
    (not (equal ?HOME ?AREA)))


(=>
    (and
            (fOCShipsByOrigin ?MM ?HOME ?COUNT)
            (greaterThan ?COUNT 0)
            (marineInventory ?MM ?REGISTER))
    (instance ?REGISTER FlagOfConvenienceRegister))

(instance flagState BinaryPredicate)	
(names "flag state" flagState)
(names "flag of registry" flagState)
(domain flagState 1 Watercraft)
(domain flagState 2 GeopoliticalArea)

(documentation flagState "(&%flagState ?SHIP ?AREA) means that 
the &%Ship ?SHIP is enrolled in the &%ShipRegister of the 
&%GeopoliticalArea ?AREA and is subject to its maritime laws, 
regulations for operation of the ship, and rules of taxation.")

;;----------------------------------------------------------------------

;;	G. Airports

(instance totalFacilityTypeInArea TernaryPredicate)
(domain totalFacilityTypeInArea 1 GeographicArea)
(domain totalFacilityTypeInArea 2 Class)
(domain totalFacilityTypeInArea 3 NonnegativeInteger)

(documentation totalFacilityTypeInArea 
"(&%totalFacilityTypeInArea ?AREA ?TYPE ?COUNT) means that in the 
&%GeographicArea ?AREA there a total of ?COUNT number of facilities 
of type ?TYPE.")

(<=>
    (totalFacilityTypeInArea ?AREA ?TYPE ?COUNT)
    (cardinality 
                    (KappaFn ?ITEM
                            (and
                                    (instance ?ITEM ?TYPE)
                                    (located ?ITEM ?AREA))) 
                    ?COUNT))

(=>
    (totalFacilityTypeInArea ?AREA ?TYPE ?COUNT)
    (exists (?ITEM)
            (and
                    (instance ?ITEM ?TYPE)
                    (located ?ITEM ?AREA)))) 

(=>
    (and 
            (totalFacilityTypeInArea ?AREA ?TYPE ?COUNT)
            (equal ?COUNT 0))
    (not
            (exists (?ITEM)
                    (and
                            (instance ?ITEM ?TYPE)
                            (located ?ITEM ?AREA)))))	

(subclass AirTransitway Transitway)
(documentation AirTransitway "The subclass of &%Transitways that are through
the &%EarthsAtmosphere.")
(=>
   (instance ?WAY AirTransitway)
   (hasPurpose (exists (?TRANSPORT) 
                  (and 
                     (instance ?TRANSPORT Transportation)
                     (path ?TRANSPORT ?WAY)
                     (partlyLocated ?WAY EarthsAtmosphere)))))
                     
(subclass Airport TransitTerminal)
(subclass Airport AirTransitway)
(subclass Airport LandTransitway)

(documentation Airport "&%Airport is the subclass of &%TransitTerminals 
for &%Airplanes (fixed-wing &%Aircraft).")
(subclass AircraftCarrier MilitaryShip)
(documentation AircraftCarrier "A MilitaryShip on which MilitaryAircraft can land 
and take off.")
(subclass Airway Transitway)
(documentation Airway "The class of Transitways used to transport Air 
to a location where it is absent or insufficient.")

;;----------------------------------------------------------------------

;;	H. Airports - with paved runways

;; Use &%totalFacilityTypeInArea (defined above)
;; with (ExtensionFn AirportWithPavedRunway).  

(<=>
    (totalFacilityTypeInArea 
            ?AREA (ExtensionFn AirportWithPavedRunway) ?COUNT)
    (cardinality 
                    (KappaFn ?AIRPORT
                            (exists (?RUNWAY)
                               (and
                                    (instance ?AIRPORT Airport)
                                    (instance ?RUNWAY PavedRunway)
                                    (part ?RUNWAY ?AIRPORT)
                                    (located ?AIRPORT ?AREA))))
                    ?COUNT))


(=>
    (totalFacilityTypeInArea 
            ?AREA (ExtensionFn AirportWithPavedRunway) ?COUNT)
    (exists (?AIRPORT ?RUNWAY) 
            (and
                    (instance ?AIRPORT Airport)
                    (instance ?RUNWAY PavedRunway)
                    (part ?RUNWAY ?AIRPORT)
                    (located ?AIRPORT ?AREA))))

(subclass Runway LandTransitway)  

(documentation Runway "&%Runway is the class of &%Transitways that are 
used for the takeoff and landing of &%Airplanes.  &%Runways are 
&%Transitways for an intermodal transit, which begins with a land transit 
and ends with air transit, or vice versa.  The &%Airspace immediately 
above (and adjacent to) a &%Runway is an &%AirTransitway.")

(=>
	(instance ?RUNWAY Runway)
	(exists (?LENGTH)
		(and
			(instance ?LENGTH LengthMeasure)
			(length ?RUNWAY ?LENGTH))))

(subclass PavedRunway Runway)

(documentation PavedRunway "&%PavedRunway is the subclass of &%Runways 
that are surfaced with concrete or asphalt.")

(=>
	(and
		(instance ?RUNWAY PavedRunway)
		(surface ?SURFACE ?RUNWAY))
	(or
		(instance ?SURFACE Asphalt)
		(instance ?SURFACE Concrete)))

(=>
	(and
		(instance ?RUNWAY Runway)
		(surface ?SURFACE ?RUNWAY)
		(instance ?SURFACE Asphalt))
	(instance ?RUNWAY PavedRunway))

(=>
	(and
		(instance ?RUNWAY Runway)
		(surface ?SURFACE ?RUNWAY)
		(instance ?SURFACE Concrete))
	(instance ?RUNWAY PavedRunway))

(subclass AirportClassification Attribute)

(documentation AirportClassification "&%AirportClassification 
is a class of &%Attributes for representing systems that categorize 
&%Airports according to some criteria.  There are several such systems, 
including the International Civil Aviation Organization categories A to 
E, based on runway lengths; the Federal Aviation Administration system 
associated with airport functions, and the airport categorization by 
runway length used in the CIA World Fact Book.")

(subclass AirportByRunwaySurface AirportClassification)

(documentation AirportByRunwaySurface "&%AirportByRunwaySurface is a 
subclass of &%AirportClassification attributes used to describe an 
airport according to the surface type of its longest runway.")

(instance AirportWithPavedRunway AirportByRunwaySurface)

(documentation AirportWithPavedRunway "&%AirportWithPavedRunway is an 
&%AirportClassification attribute used to describe an airport whose 
longest runway is a &%PavedRunway.")

(=>
        (and
                (instance ?AIRPORT Airport)
                (attribute ?AIRPORT AirportWithPavedRunway))
        (exists (?RUNWAY)
                (and
                        (instance ?RUNWAY PavedRunway)
                        (part ?RUNWAY ?AIRPORT))))

(instance AirportWithUnpavedRunway AirportByRunwaySurface)

(documentation AirportWithUnpavedRunway "&%AirportWithUnpavedRunway is 
an &%AirportClassification attribute used to describe an airport whose 
longest runway is an &%UnpavedRunway.")

(=>
        (and
                (instance ?AIRPORT Airport)
                (attribute ?AIRPORT AirportWithUnpavedRunway))
        (exists (?RUNWAY)
                (and
                        (instance ?RUNWAY UnpavedRunway)
                        (part ?RUNWAY ?AIRPORT))))

(subclass CIAAirportLengthClassification AirportClassification)

(documentation CIAAirportLengthClassification 
"&%CIAAirportLengthClassification is a class of &%Attributes used to 
characterize &%Airports according to the length of their longest  
usable runway.")

(instance VeryShortRunwayAirport CIAAirportLengthClassification)

(documentation VeryShortRunwayAirport "&%VeryShortRunwayAirport is a CIA 
category for &%Airports whose longest runway is less than 914 meters 
long.")

(=>
	(and
		(instance ?AIRPORT Airport)
		(attribute ?AIRPORT VeryShortRunwayAirport))
	(exists (?RUNWAY ?LENGTH)
		(and
			(instance ?RUNWAY Runway)
			(part ?RUNWAY ?AIRPORT)
			(length ?RUNWAY ?LENGTH)			
			(lessThan ?LENGTH (MeasureFn 914 Meter)))))

(instance ShortRunwayAirport CIAAirportLengthClassification)

(documentation ShortRunwayAirport "&%ShortRunwayAirport is a CIA 
category for &%Airports whose longest runway has a length between 914 
meters and 1523 meters, inclusive.")

(=>
	(and
		(instance ?AIRPORT Airport)
		(attribute ?AIRPORT ShortRunwayAirport))
	(exists (?RUNWAY ?LENGTH)
		(and
			(instance ?RUNWAY Runway)
			(part ?RUNWAY ?AIRPORT)
			(length ?RUNWAY ?LENGTH)
		(or
			(greaterThanOrEqualTo ?LENGTH (MeasureFn 914 Meter))
			(lessThanOrEqualTo ?LENGTH (MeasureFn 1523 Meter))))))

(instance MediumLengthRunwayAirport CIAAirportLengthClassification)

(documentation MediumLengthRunwayAirport "&%MediumLengthRunwayAirport is a CIA 
category for &%Airports whose longest runway has a length between  
1,524 meters and 2,437 meters, inclusive.")

(=>
	(and
		(instance ?AIRPORT Airport)
		(attribute ?AIRPORT ShortRunwayAirport))
	(exists (?RUNWAY ?LENGTH)
		(and
			(instance ?RUNWAY Runway)
			(part ?RUNWAY ?AIRPORT)
			(length ?RUNWAY ?LENGTH)
		(or
			(greaterThanOrEqualTo ?LENGTH (MeasureFn 1524 Meter))
			(lessThanOrEqualTo ?LENGTH (MeasureFn 2437 Meter))))))

(instance LongRunwayAirport CIAAirportLengthClassification)

(documentation LongRunwayAirport "&%LongRunwayAirport is a CIA 
category for &%Airports whose longest runway has a length between  
2,438 meters and 3,047 meters, inclusive.")

(=>
	(and
		(instance ?AIRPORT Airport)
		(attribute ?AIRPORT LongRunwayAirport))
	(exists (?RUNWAY ?LENGTH)
		(and
			(instance ?RUNWAY Runway)
			(part ?RUNWAY ?AIRPORT)
			(length ?RUNWAY ?LENGTH)
			(or
				(greaterThanOrEqualTo ?LENGTH (MeasureFn 2438 Meter))
				(lessThanOrEqualTo ?LENGTH (MeasureFn 3047 Meter))))))

(instance VeryLongRunwayAirport CIAAirportLengthClassification)

(documentation VeryLongRunwayAirport "&%VeryLongRunwayAirport is a CIA 
category for &%Airports whose longest runway has a length greater 
than 3,047 meters.")

(=>
	(and
		(instance ?AIRPORT Airport)
		(attribute ?AIRPORT VeryLongRunwayAirport))
	(exists (?RUNWAY ?LENGTH)
		(and
			(instance ?RUNWAY Runway)
			(part ?RUNWAY ?AIRPORT)
			(length ?RUNWAY ?LENGTH)
			(greaterThan ?LENGTH (MeasureFn 3047 Meter)))))

;;----------------------------------------------------------------------

;;	I. Airports - with unpaved runways

;; Use &%totalFacilityTypeInArea (defined above)
;; with (ExtensionFn AirportWithUnpavedRunway)

(=>
    (and
            (totalFacilityTypeInArea 
                    ?AREA (ExtensionFn AirportWithUnpavedRunway) ?COUNT)
            (greaterThan ?COUNT 0))
    (exists (?AIRPORT ?RUNWAY)
            (and
                    (instance ?AIRPORT Airport)
                    (instance ?RUNWAY UnpavedRunway)
                    (part ?RUNWAY ?AIRPORT)
                    (located ?AIRPORT ?AREA))))

(subclass UnpavedRunway Runway)

(documentation UnpavedRunway "&%UnpavedRunways include &%Runways with 
grass, dirt, sand, or gravel surfaces.  Contrast with &%PavedRunway.")

(disjoint PavedRunway UnpavedRunway)

;;----------------------------------------------------------------------

;;	J. Heliports
;;		5 (2002)

;; Use &%totalFacilityTypeInArea  (defined above)

(subclass Heliport TransitTerminal)
(names "heliport" Heliport)
(names "helipad" Heliport)

(documentation Heliport "&%Heliport is a &%TransitTerminal designed 
for the takeoff and landing of &%Helicopters.")

(=>
	(instance ?HELO Heliport)
	(trafficableForTrafficType ?HELO Helicopter))

;;----------------------------------------------------------------------

;;	K. Transportation - note [for comments on individual countries]

;;========================================================================

;; II. General Transportation Concepts
;;	A. Translocation
;;	B. Transitways
;;	   1. Land Transitways
;;		a. Roadways
;;		b. Railways
;;	   2. Water Transitways
;;	   3. Air Transitways
;;	   4. Pipelines
;;	C. Vehicles
;;	   1. Land Vehicles
;;		a. Road Vehicles
;;		b. Rail Vehicles
;;		c. Other
;;	   2. Water Vehicles
;;	   3. Air Vehicles
;;	D. Trafficability
;;	   1. Traffic Compatibility
;;	   2. Transitway State	
;;	E. Transit Systems and Routes
;;	   1. Physical Systems
;;	   2. Transit Systems
;;	   3. Transit Terminals
;;	   4. Transitway Junctions
;;	   5. Transit Routes
;;	F. Trips
;;	G. Transitway Capacity
;;	H. Transitway Obstacles
;;	I. Traffic Regulation
;;		1. Transit Authority
;;		2. Transit Control Systems
;;		3. Transit Control Devices
;;		4. Tolls or Usage Fees
;;	J. Transportation Businesses
;;		1. Business Types
;;		2. Personnel

;;-------------------------------------------------------------------------

;;	A. Translocation


(instance TransportationFn UnaryFunction)
(domainSubclass TransportationFn 1 TransportationDevice)
(rangeSubclass TransportationFn Transportation)

(documentation TransportationFn 
"(&%TransportationFn ?TYPE) denotes the subclass of &%Transportation 
events in which a &%TransportationDevice of ?TYPE is the vehicle.")

(=>
	(and
		(subclass ?TYPE TransportationDevice)
		(subclass (TransportationFn ?TYPE) Transportation)
		(instance ?TRIP (TransportationFn ?TYPE)))
	(exists (?VEHICLE)
		(and 
			(instance ?VEHICLE ?TYPE)
			(instrument ?TRIP ?VEHICLE))))

(instance TripFn UnaryFunction)
(domain TripFn 1 Vehicle)
(rangeSubclass TripFn Transportation)

(documentation TripFn 
"(&%TripFn ?VEHICLE) denotes the subclass of &%Transportation 
events in which a particular &%TransportationDevice ?VEHICLE is the 
vehicle. Contrast this function with &%TransportationFn, which is 
used to denote transportation events by a specific kind of vehicle.")

(=>
	(and
		(instance ?VEHICLE TransportationDevice)
		(instance ?TRIP (TripFn ?VEHICLE)))
	(instrument ?TRIP ?VEHICLE))

;;-------------------------------------------------------------------------

;;	B. Transitways

(instance TransitFn UnaryFunction)
(domain TransitFn 1 Transitway)
(rangeSubclass TransitFn Translocation)

(documentation TransitFn "(&%TransitFn ?WAY) denotes the class of 
&%Translocations that consist of travelling along the &%Transitway 
?WAY.")

(=>
	(and
		(instance ?GOING (TransitFn ?WAY))
		(instance ?WAY Transitway))
	(path ?GOING ?WAY))

(subrelation path partlyLocated)

;; 	1. Land Transitways
;;	   a. Roadways

(instance Paved Attribute)
(instance Unpaved Attribute)

(subclass Bridge LandTransitway) 
(subclass Bridge StationaryArtifact) 

(documentation Bridge "&%Bridge is the subclass of &%LandTransitways 
that are artifacts used for crossing water or air-filled gaps that 
could not be transited over a natural surface.")

(subclass FixedBridge Bridge)
(subclass FixedBridge StationaryArtifact)
(subclass MovableBridge Bridge)
(subclass Drawbridge MovableBridge) ; part or all of it can move
(subclass PontoonBridge MovableBridge) ; in fact, portable

(documentation Tunnel "&%Tunnel is a subclass of &%Transitways that 
consist of a lengthwise enclosed &%Hole that allows for transit 
underground, as through mountains, below a body of water, or beneath a 
city.")

(subclass Tunnel LandTransitway)
(subclass Tunnel StationaryArtifact)

(subclass SecondaryHighway Roadway)
(subclass Street Roadway)
(subclass Road Roadway)
(subclass Lane Roadway) ; one-lane auto-passable roadway
(subclass Trail LandTransitway) ; walkable, skateable, bikeable tracks (snowmobiles, skis?)

;;	(1) b. Railways

;; Railway is defined in Part I.

; CIA factbook gauge types for Railways:
(subclass RailGauge Attribute)
(instance BroadGaugeRail RailGauge)
(instance StandardGaugeRail RailGauge)
(instance NarrowGaugeRail RailGauge)
(instance DualGaugeRail RailGauge)
(contraryAttribute BroadGaugeRail StandardGaugeRail NarrowGaugeRail DualGaugeRail)

;;----------------------------------
;;	2. Water Transitways

;; Waterway is defined in Part I, above

(instance NorthwestPassage Waterway)
(names "Northwest Passage" NorthwestPassage)

(documentation NorthwestPassage "&%NorthwestPassage represents the 
seasonal waterway in the &%ArcticOcean adjacent to &%Canada and the 
&%UnitedStates.")

(geographicSubregion NorthwestPassage ArcticOcean)
(geographicSubregion NorthwestPassage WesternHemisphere)

(instance NorthernSeaRoute Waterway)
(names "Northern Sea Route" NorthernSeaRoute)

(documentation NorthernSeaRoute "&%NorthernSeaRoute represents the 
seasonal waterway in the &%ArcticOcean adjacent to &%Russia and 
&%Norway.")

(geographicSubregion NorthernSeaRoute ArcticOcean)
(geographicSubregion NorthernSeaRoute EasternHemisphere)

(subclass ShippingLane Waterway)
(subclass ShippingChannel Waterway)
(subclass SeaLane Waterway)  

;; Only navigable Rivers are Waterways:
(=>
	(and
		(instance ?WATER River)
		(trafficableForTrafficType ?WATER ?TYPE)
		(subclass ?TYPE Watercraft))
	(instance ?RIVER Waterway))

(subclass Channel Waterway) 
(subclass CanalLock Waterway)
(subclass CanalLock StationaryArtifact)
(subclass Harbor Waterway)  ; cf. &%PortCity

;;	3. Air Transitways

; Airport defined in Part I, above

;; 	4. Pipelines

;; Pipeline is defined in Part I, above

;;-------------------------------------------------------------------------

;;	C. Vehicles

(instance equipmentCount TernaryPredicate)
(domain equipmentCount 1 Object)
(domainSubclass equipmentCount 2 Device)
(domain equipmentCount 3 Quantity)

(documentation equipmentCount 
"(&%equipmentCount ?OBJECT ?TYPE ?QUANTITY) means that ?OBJECT 
is equipped with devices of the type ?TYPE, in the number ?QUANTITY.  
Equipment associated with an ?OBJECT may be a &%component of ?OBJECT 
(such as the emergency oxygen system built into passenger jets) or it may 
be a device simply located on or with ?OBJECT (such as a first aid kit).")

(instance powerComponent BinaryPredicate)
(instance powerComponent AsymmetricRelation)
(instance powerComponent IrreflexiveRelation)
(domain powerComponent 1 Device)
(domainSubclass powerComponent 2 Artifact)
(subrelation powerComponent component)

(documentation powerComponent "(&%powerComponent ?GENERATOR ?THING) 
means that the &%Device ?THING is the power source for the &%Artifact 
?THING.")

(subclass TransportationEquipment ManufacturedProduct)
(subclass TransportationDevice TransportationEquipment)

(subclass PassengerVehicle Vehicle)
(documentation PassengerVehicle "A &%Vehicle that is designed to
carry &%Humans.  Note that &%Vehicles that are not designed to
carry people may still do so.  For example, a boxcar might still
transport homeless people, but was not built to do so.")
(=>
  (and
    (instance ?VEHICLE PassengerVehicle)
    (instance ?HUMAN Human))
  (capability Transportation patient ?HUMAN))

(subclass CargoVehicle Vehicle)

(documentation CargoVehicle "A &%Vehicle that is designed to
carry &%Objects.  Note that &%Vehicles that are primarily designed to carry
people rather than cargo may still carry cargo.  For example, a passenger sedan
might be capable of carrying lumber strapped to the roof.  For this
reason, &%PassengerVehicle and &%CargoVehicle are not disjoint.")
(=>
  (and
    (instance ?VEHICLE CargoVehicle)
    (instance ?OB 
      (KappaFn ?O
        (not 
          (instance ?O Human)))))
  (capability Transportation patient ?OB))

(subclass UnpoweredVehicle Vehicle)
(documentation UnpoweredVehicle "A &%Vehicle that lacks a &%powerComponent.
It coasts like a glider or skateboard, thus deriving its power from the
potential energy of gravity, or by the power of its agent, as in a bicycle.")
(=>
  (instance ?UV UnpoweredVehicle)
  (not
    (exists (?P)
      (powerComponent ?P ?UV))))

(subclass PoweredVehicle Vehicle)
(documentation PoweredVehicle "A &%Vehicle that has a &%powerComponent.
Note that &%PoweredVehicles include those vehicles that have a &%powerComponent
where the user can and does often choose not to use it, such as a moped with pedals.")
(disjoint PoweredVehicle UnpoweredVehicle)
(=>
  (instance ?UV PoweredVehicle)
  (exists (?P)
    (powerComponent ?P ?UV)))

(subclass AgentPoweredVehicle Vehicle)
(documentation AgentPoweredVehicle "A &%Vehicle which is powered by
one or more of its passengers or driver, for example, a &%Bicycle.")

;;-------------------------------------
;;	1. Land Vehicles

(subclass LandVehicle Vehicle)

(documentation LandVehicle 
"&%LandVehicle is the class of &%TransportationDevices that travel on 
land.  The two main types of &%LandVehicle are &%RoadVehicle and 
&%RailVehicle. Note that this includes vehicles which travel on any solid
surface, including a frozen body of water or snow.")

;;	(1) a. Road Vehicles

(subclass RoadVehicle LandVehicle)
(documentation RoadVehicle "The class of LandVehicles that are not 
RollingStock.")

(subclass Automobile RoadVehicle) 
(subclass Automobile PoweredVehicle) 
(subclass Automobile PassengerVehicle) 

(documentation Automobile "A &%Vehicle designed primarily for carrying
passengers.")

(subclass Truck RoadVehicle)
(subclass Truck CargoVehicle)
(subclass Truck PoweredVehicle)
(documentation Truck "Any &%Vehicle that is intended to carry substantial
amounts of cargo, in addition to passengers.  This includes 18-wheelers,
pickup trucks, tanker trucks etc.  Consumer vehicles with trunks or enclosed
rear areas that can carry cargo are not defined as trucks.")

(subclass Trailer RoadVehicle)	; also a CargoContainer
(subclass Trailer UnpoweredVehicle)
(disjoint Trailer SelfPoweredVehicle)
(disjoint Trailer AgentPoweredVehicle)
(documentation Trailer "Any &%RoadVehicle that is also an &%UnpoweredVehicle,
and intended to be towed by a &%PoweredVehicle.")

(subclass LightTruck Truck)

(subclass Motorcycle RoadVehicle)	; except ATV motocross bikes

(subclass MotorScooter RoadVehicle)

(subclass EmergencyVehicle SelfPoweredVehicle)
(documentation EmergencyVehicle "EmergencyVehicle is the subclass of 
Vehicles that are used for special-purpose emergency response.")

(subclass EmergencyRoadVehicle EmergencyVehicle)
(subclass EmergencyRoadVehicle SelfPoweredRoadVehicle)
(documentation EmergencyRoadVehicle "EmergencyRoadVehicle is the 
subclass of EmergencyVehicle that includes RoadVehicles designed 
for special use in emergencies, e.g., Ambulances, FireEngines.")

(subclass FireEngine EmergencyRoadVehicle)
(documentation FireEngine "FireEngine is the subclass of 
EmergencyRoadVehicles that represents the various vehicles
used by a fire department in fighting fires.")

(subclass Ambulance EmergencyRoadVehicle)

; misc. motor or battery powered, e.g., forklift, tractor, lawnmower, snowmobile, various construction equipment such as bulldozer, backhoe.  Some of these are devices for moving stuff around, but moving their riders from one place to another is not the main point.

(subclass Cycle LandVehicle)
(subclass Cycle AgentPoweredVehicle)
(documentation Cycle "Cycle is a class of wheeled, pedal-driven 
UserPoweredVehicles that are designed to be ridden on roads or trails.")

(subclass Bicycle Cycle)

(subclass Scooter LandVehicle)
(subclass Scooter AgentPoweredVehicle)

; misc. user-powered, skateboard, rollerskates, rollerblades, etc.

;;	(1) b. Rail Vehicles

(subclass RailVehicle LandVehicle)
(documentation RailVehicle "A Vehicle designed to move on &%Railways.")

(=>
  (instance ?X RailVehicle)
  (hasPurpose ?X
    (exists
      (?EV ?SURF)
      (and
        (instance ?RAIL Railway)
        (instance ?EV Transportation)
        (holdsDuring
          (WhenFn ?EV)
          (meetsSpatially ?X ?RAIL))))))
 
(subclass Train RailVehicle)
(subclass Train SelfPoweredVehicle)
(subclass Train Collection)
(documentation Train "&%Train is the subclass of 
&%TransportationDevice whose instances are linked sequences 
of &%RollingStock.")

(=>
  (instance ?TRAIN Train)
  (exists (?X ?Y)
    (and
      (instance ?X RollingStock)
      (instance ?Y RollingStock)
      (not 
        (equal ?X ?Y)))))

(subclass TrainStation TerminalBuilding)
(documentation TrainStation "TrainStation is the subclass of 
&%Buildings that are located at a &%RailwayTerminal and used in support  
of its functions, especially for the handling of passengers and freight.")

(subclass RailTransportationSystem TransportationSystem)
(documentation RailTransportationSystem "RailTransportationSystem 
is the subclass of &%TransportationSystems whose routes are &%Railways.")
(subclass Railcar RollingStock)
(disjoint Railcar SelfPoweredVehicle)
(documentation Railcar "Railcar is the subclass of &%RollingStock that 
includes all non-locomotive, non-self-powered &%RailVehicles.")
(subclass RailwayTerminal TransitTerminal)
(documentation RailwayTerminal "RailwayTerminal is the subclass of 
&%TransitTerminals designed for &%Trains.  A RailwayTerminal includes 
all the &%RailroadTrack and any outbuildings or other related structure 
in the terminal, as well as the &%TrainStation (if there is one).")

(subclass RollingStock RailVehicle)
(documentation RollingStock "A single rail car.  Any &%RailVehicle that is 
not composed of other &%RailVehicles.") 

(=>
  (instance ?TRAIN Train)
  (not 
    (exists (?X ?Y)
      (and
        (instance ?X RollingStock)
        (instance ?Y RollingStock)
        (not 
          (equal ?X ?Y))))))           
      
(subclass Locomotive RollingStock)
(subclass Locomotive SelfPoweredVehicle)
(documentation Locomotive "An individual rail vehicle, i.e. a
&%RollingStock which is also a &%PoweredVehicle.  Modern
locomotives are typically diesel or electric powered, while
older locomotives ran on &%Coal.")

(subclass PassengerRailcar RollingStock)
(subclass PassengerRailcar PassengerVehicle)
(documentation PassengerRailcar "A train car that is designed to
carry &%Humans.")

(=>
  (instance ?CAR PassengerRailcar)
  (capability 
    (KappaFn ?CARRY
      (and
        (instance ?CARRY Transportation)
        (exists (?HUMAN)
          (and
            (instance ?HUMAN Human)
            (patient ?CARRY ?HUMAN))))) instrument ?CAR))
          

(subclass FreightCar RollingStock)
(partition RollingStock PassengerRailcar FreightCar)
(documentation FreightCar "A train car that is designed to
carry freight, and not &%Humans.")

(subclass Boxcar FreightCar)
(documentation Boxcar "Boxcar is the subclass of Railcars that are 
general-purpose closed cars for hauling freight.")

(subclass BusinessRailcar PassengerRailcar)

(subclass CabCar RollingStock) 

(documentation CabCar "&%CabCar is the class of passenger railcars 
that have an operating cab in one end of the from which train motion 
can be controlled in 'push' mode.  A &%CabCar is placed on the 
opposite end of the train from the locomotive.")

(subclass OutfitCar RollingStock) 

(documentation OutfitCar "&%OutfitCars are &%Railcars used for housing 
railway construction or maintenance workers in the field.  Also called 
'Camp Cars'.")

(subclass CrewDormCar PassengerRailcar) 
(documentation CrewDormCar "&%CrewDormCars are &%Railcars used for 
housing the employee staff on long-distance trains.")

(subclass ElectrifiedRailwayCar RollingStock)
(subclass ElectrifiedRailwayCar SelfPoweredVehicle)
(subclass ElectrifiedRailwayCar ElectricDevice)
(documentation ElectrifiedRailwayCar "ElectrifiedRailwayCar is the 
subclass of railway cars that are powered by electricity, which is 
provided to the car through an overhead link or electrified third rail.")

(subclass FiveWellStackCar FreightCar)
(documentation FiveWellStackCar "&%FiveWellStackCars are five-unit 
that carry double-stacked containers.")

(subclass Flatcar FreightCar)
(subclass Flatcar OpenTopRailcar)
(documentation Flatcar "&%Flatcars are &%Freightcars without sides 
or roofs.")

(subclass GalleryCar PassengerRailcar)
(documentation GalleryCar "&%GalleryCars are double-decked passenger 
cars that have a viewing area on the second floor.")

(subclass HeadEndCar RollingStock)
(documentation HeadEndCar "&%HeadEndCars are &%Railcars that were 
typically placed at the front of the train, including mail and 
baggage cars.")

(subclass HydraCushionFreightCar FreightCar)
(documentation HydraCushionFreightCar "&%HydraCushionFreightCars 
are &%FreightCars with hydraulic underframes to cushion their loads.")

(subclass LocomotiveCoalCar RollingStock)
(documentation LocomotiveCoalCar "&%LocomotiveCoalCars are 
&%Railcars put directly behind the &%Locomotive and used for 
carrying fuel coal for the engine.")

(subclass OpenTopRailcar FreightCar)
(documentation OpenTopRailcar "&%OpenTopRailcars are &%FreightCars 
that have no roof.  They may have sides or not.")

(subclass MotorRailcar PassengerRailcar) 
(subclass MotorRailcar PoweredVehicle) 
(documentation MotorRailcar "&%MotorRailcars are &%PassengerRailcars 
that carry their own power source.")

(subclass Streetcar RollingStock) 
(subclass PCCCar Streetcar)
(subclass PrivateRailcar RollingStock)
(subclass RefrigeratorCar Boxcar)

(subclass RotaryDumpCar OpenTopRailcar) 

(documentation RotaryDumpCar "&%RotaryDumpCars are open-top 
cargo carriers that have a rotating coupler allowing them 
to be emptied by dumping while still coupled.")

(subclass ScaleTestCar RollingStock)

(documentation ScaleTestCar "&%ScaleTestCars are &%Railcars of 
known weight used to test or calibrate track scales used for 
weighing freight.")

(subclass SpineCar Flatcar)

(documentation SpineCar "&%SpineCars are articulated &%Flatcars 
used to carry trailers or containers.")

(subclass TankCar FreightCar)

(documentation TankCar "&%TankCars are enclosed &%FreightCars used 
to carry fluids.")
(=>
  (instance ?T TankCar)
  (capability 
    (KappaFn ?TRANS
      (exists (?L)
        (and
          (instance ?L Liquid)
          (instance ?TRANS Transportation)
          (patient ?TRANS ?L)))) 
    instrument ?T))

(subclass CarDistributionSystem Process)

(documentation CarDistributionSystem "&%CarDistributionSystem is the 
process of composing trains according to instructions or data.")

(subclass RailCarrierControl Process)
(documentation RailCarrierControl "&%RailCarrierControl is the process of 
controlling the speed or direction of a train by sending high or 
low frequency currents on the rails.")

;;------------------------------------
;;	2. Water Vehicles

(subclass Watercraft Vehicle)

(documentation Watercraft "&%Watercraft is the class of all 
&%TransportationDevices used to travel on or in water.")

(=>
	(and
		(instance ?CRAFT Watercraft)
		(instance ?EVENT Transportation)
		(instrument ?EVENT ?CRAFT))
	(exists (?WATER)
		(and
			(instance ?WATER WaterArea)
			(located ?EVENT ?WATER))))

(=>
	(and
		(subclass ?TYPE Watercraft)
		(instance ?EVENT (TransportationFn ?TYPE))
		(located ?EVENT ?PLACE))
	(instance ?PLACE WaterArea))

(subclass Ship DisplacementHullWatercraft)

(documentation Ship "&%Ship is the class of large &%Watercraft used 
for travel on oceans, seas, or large lakes.")

(subclass MultihullWatercraft Watercraft)
(subclass Catamaran MultihullWatercraft)
(subclass DisplacementHullWatercraft Watercraft)
(disjoint DisplacementHullWatercraft PlaningHullWatercraft)
(documentation DisplacementHullWatercraft "DisplacementHullWatercraft is 
a subclass of Watercraft with hulls designed to move water aside as they 
move through the water.  Contrast with PlaningHullWatercraft.")

(subclass PlaningHullWatercraft Watercraft)
(documentation PlaningHullWatercraft "PlaningHullWatercraft is a subclass 
of Watercraft with hulls designed for a position partially on or above 
the water surface when they are in motion, in order to reduce drag.  See 
also DisplacementHullWatercraft.")

(subclass CruiseShip PassengerShip)

(documentation CruiseShip "&%CruiseShip is the subclass of 
&%PassengerShips designed for the purpose of carrying passengers 
on extended trips.")

(subclass OceanLiner PassengerShip)
(subclass OceanLiner CargoShip)

(documentation OceanLiner "&%OceanLiner is the subclass of &%Ships 
that make regularly scheduled voyages to transport people and goods 
from one place to another.")

(subclass Barge Watercraft)
(subclass TugBoat Watercraft)
(subclass FireBoat Watercraft)
(subclass FerryBoat Watercraft)

(subclass Runabout Watercraft)
(subclass Sailboat Watercraft)
(subclass Canoe Watercraft)
(subclass Canoe AgentPoweredVehicle)
(subclass Kayak Watercraft)
(subclass Kayak AgentPoweredVehicle)

(subclass PersonalWatercraft Watercraft)
(names "Jet Ski" PersonalWatercraft)

(documentation PersonalWatercraft "&%PersonalWatercraft is the class 
of motor-driven watercraft ridden by one or more passengers, e.g., 
a JetSki.")

;;----------------------------------

;; Size and other measures for Watercraft:

(instance vesselDisplacement BinaryPredicate)
(domain vesselDisplacement 1 Watercraft)
(domain vesselDisplacement 2 PhysicalQuantity)
(subrelation vesselDisplacement measure)

(documentation vesselDisplacement 
"(&%vesselDisplacement ?VESSEL ?AMOUNT) means that the displacement 
of &%Watercraft ?VESSEL is the &%PhysicalQuantity ?AMOUNT.  The 
displacement of a vessel may be measured in &%LongTons (Dead Weight 
Tonnage, or DWT) or by volume (Gross Registered Tonnage, or GRT).")

(instance vesselDeadWeightTonnage BinaryPredicate)
(domain vesselDeadWeightTonnage 1 Watercraft)
(domain vesselDeadWeightTonnage 2 MassMeasure)
(subrelation vesselDeadWeightTonnage vesselDisplacement)

(documentation vesselDeadWeightTonnage 
"(&%vesselDeadWeightTonnage ?VESSEL ?AMOUNT) means that the 
&%Watercraft ?VESSEL has a carrying capacity when fully loaded of 
?AMOUNT in &%LongTons.  This is the Dead Weight Tonnage, or DWT, 
of the vessel, which is the total weight of cargo plus stores 
that the vessel can carry when immersed to the proper load line.")

(instance vesselGrossRegisteredTonnage BinaryPredicate)
(domain vesselGrossRegisteredTonnage 1 Watercraft)
(domain vesselGrossRegisteredTonnage 2 PhysicalQuantity)
(subrelation vesselGrossRegisteredTonnage vesselDisplacement)

(documentation vesselGrossRegisteredTonnage 
"(&%vesselGrossRegisteredTonnage ?VESSEL ?AMOUNT) means that the 
&%Watercraft ?VESSEL has a carrying capacity when fully loaded of 
?AMOUNT, where ?AMOUNT is the Gross Registered Tonnage (GRT) of the 
vessel, which is based on the total sheltered volume of the vessel 
measured in hundreds of cubic feet, and converted to gross tons 
at an equivalence of 100 cubic feet per ton.")

(instance LongTon UnitOfMeasure)
(subclass LongTon MassMeasure)
(equal (MeasureFn 1 LongTon) (MeasureFn 2240 PoundMass))

(documentation LongTon "&%LongTon is the &%UnitOfMeasure, 
equal to 2,240 &%PoundMass, which is used to measure Dead Weight 
Tonnage capacity of &%Ships.")

(instance CubicFoot UnitOfMeasure)
(subclass CubicFoot VolumeMeasure)
(equal (MeasureFn 1 CubicFoot) 
	 (MultiplicationFn (MeasureFn 1 Foot) 
				 (MultiplicationFn (MeasureFn 1 Foot) (MeasureFn 1 Foot))))

(documentation CubicFoot "&%CubicFoot is a unit for measuring volume, 
equal to a volume of one foot length in each dimension of length, width, 
and height.")

(instance RegistryTon UnitOfMeasure)
(names "Registry Ton" RegistryTon)
(names "Gross Ton" RegistryTon)
(subclass RegistryTon MassMeasure) 
(equal (MeasureFn 1 RegistryTon) (MeasureFn 100 CubicFoot))

(documentation RegistryTon "&%RegistryTon is a unit of measure used to 
represent the Gross Registered Tonnage (GRT) capacity of &%Ships.  
GRT is based on a volume measure, with one &%RegistryTon equal to a 
volume of 100 cubic feet.")

;;---------------------------------------

;; Parts and areas of Ships:

(subclass ShipDeck Artifact)

(documentation ShipDeck "&%ShipDeck is the class of decks on a ship, 
considered as spaces or &%Regions in which passengers and crew work, 
live, or ride, and/or in which machinery and cargo are stored on a 
&%Ship.")

(=>
	(instance ?DECK ShipDeck)
	(exists (?SHIP)
		(and
			(instance ?SHIP Ship)
			(properPart ?DECK ?SHIP))))

(subclass ShipCompartment Artifact)

(documentation ShipCompartment "A &%ShipCompartment is any fully or 
partly bounded section of a &%Ship.")

(=>
	(instance ?COMPARTMENT ShipCabin)
	(exists (?SHIP)
		(and
			(instance ?COMPARTMENT ShipCabin)
			(properPart ?COMPARTMENT ?SHIP))))

(subclass ShipCabin ShipCompartment)

(documentation ShipCabin "&%ShipCabin is the subclass of all 
&%ShipCompartments for accommodating &%Humans aboard a ship.")

;;----------------------------------
;;	3. Air Vehicles

; airplanes also travel on the ground, and some on water

(subclass Aircraft Vehicle)
(documentation Aircraft "Any Vehicle which is capable of 
AirTransportation.  Note that this class covers both fixed-wing aircraft
and helicopters.")

(subclass Airplane Aircraft)
(subclass Airplane PoweredVehicle)

(documentation Airplane "&%Airplane is the subclass of &%Aircraft that 
are fixed-wing aircraft which carry their own power sources.  &%Airplane 
includes jet airplanes and propeller planes, but not gliders.")

(subclass PropellerPlane Airplane)
(subclass JetAirplane Airplane)
(subclass PropellerJet Airplane)
(subclass Rocket Aircraft)
(subclass GliderPlane Aircraft)
(subclass GliderPlane UnpoweredVehicle)

;;---------------------------------------------------------------------

;;	D. Trafficability

;;	   1. Traffic Compatibility

(instance trafficableForTrafficType BinaryPredicate)
(domain trafficableForTrafficType 1 Object)  
(domainSubclass trafficableForTrafficType 2 SelfConnectedObject)

(documentation trafficableForTrafficType 
"(&%trafficableForTrafficType ?WAY ?TYPE) means that &%Objects of ?TYPE 
can move along the &%Transitway ?WAY.")

(=>
	(and
		(trafficableForTrafficType ?PLACE ?TYPE)
		(subclass ?TYPE TransportationDevice)
		(instance ?MOVER ?TYPE))
	(capableAtLocation Transportation instrument ?MOVER ?PLACE))

(=>
	(and 
		(trafficableForTrafficType ?place ?type)
		(subclass ?type Agent)
		(instance ?mover ?type))
	(capableAtLocation Translocation agent ?mover ?place))	

(=>
	(instance ?AIRPORT Airport)
	(trafficableForTrafficType ?AIRPORT Airplane))

(instance navigableForShippingTonnage BinaryPredicate)
(domain navigableForShippingTonnage 1 WaterArea)
(domain navigableForShippingTonnage 2 PhysicalQuantity)

(documentation navigableForShippingTonnage 
"(&%navigableForShippingTonnage ?WATERWAY ?TONNAGE) means that the 
&%Waterway ?WATERWAY can be transited by vessels up to the tonnage 
?TONNAGE (in Dead Weight Tonnage).")

(=>
	(and
		(navigableForShippingTonnage ?WATERWAY (MeasureFn ?TONNAGE LongTon))
		(instance ?VESSEL Watercraft)
		(vesselDisplacement ?VESSEL (MeasureFn ?DWT LongTon))
		(lessThanOrEqualTo ?DWT ?TONNAGE))
	(capability (TripFn ?VESSEL) path ?WATERWAY))

(instance navigableForDraft BinaryPredicate)
(domain navigableForDraft 1 WaterArea)
(domain navigableForDraft 2 LengthMeasure)

(documentation navigableForDraft 
"(&%navigableForDraft ?WATERWAY ?DRAFT) means that the &%Waterway 
?WATERWAY can be transited by vessels up to the draft ?DRAFT.") 

(=>
    (and
            (navigableForDraft ?WATERWAY ?AMOUNT)
            (ladenDraft ?SHIP ?DRAFT)
            (greaterThan ?AMOUNT ?DRAFT))
    (capability (TripFn ?SHIP) path ?WATERWAY))	

(=>
    (and
            (navigableForDraft ?WATERWAY ?AMOUNT)
            (ladenDraft ?SHIP ?DRAFT)
            (lessThanOrEqualTo ?AMOUNT ?DRAFT))
    (not (capability (TripFn ?SHIP) path ?WATERWAY)))

(=>
    (and
            (instance ?WATERWAY Waterway)
            (depth ?WATERWAY (MeasureFn ?DEPTH ?UNIT))
            (instance ?UNIT UnitOfMeasure)
            (lessThan ?DRAFT ?DEPTH))
	(navigableForDraft ?WATERWAY (MeasureFn ?DRAFT ?UNIT)))

(instance ladenDraft BinaryPredicate)
(domain ladenDraft 1 Watercraft)
(domain ladenDraft 2 LengthMeasure)

(documentation ladenDraft "(&%ladenDraft ?SHIP ?AMOUNT) means that 
the &%Watercraft ?SHIP requires a &%waterDepth of at least ?AMOUNT 
to sail without running aground, when she is loaded at capacity.")

(instance capableAtLocation QuaternaryPredicate)
(documentation capableAtLocation 
"(&%capableAtLocation ?TYPE ?ROLE ?OBJECT ?PLACE) means that ?OBJECT 
has the ability to play the &%CaseRole ?ROLE in &%Processes of 
?EVENTTYPE that occur at ?PLACE.")

(domainSubclass capableAtLocation 1 Process)
(domain capableAtLocation 2 CaseRole)
(domain capableAtLocation 3 Object)
(domain capableAtLocation 4 Region)

(=>
    (and
            (instance ?TYPE Process)
            (instance ?EVENT ?TYPE)
            (located ?EVENT ?REGION)
            (instance ?ROLE CaseRole)
            (instance ?OBJECT Object)
            (instance ?REGION GeographicArea)
            (holds ?ROLE ?EVENT ?OBJECT))
    (capableAtLocation ?TYPE ?ROLE ?OBJECT ?PLACE))

;;	   2. Transitway state

;; Open/Closed attributes.  Hours of availability.  Seasonal/weather closures.

;;		a. Physical conditions

;;		b. Regulated conditions

;;----------------------------------------------------------------------

;;	E. Transit Systems and Routes

;;	   1. Physical Systems

(subclass PhysicalSystem Physical)
(documentation PhysicalSystem "&%PhysicalSystem is the class of complex 
&%Physical things.  A &%PhysicalSystem may have one or more 
corresponding abstract &%Graph representations.")

(instance subSystem BinaryPredicate)
(domain subSystem 1 PhysicalSystem)
(domain subSystem 2 PhysicalSystem)

(documentation subSystem "(&%subSystem ?SUB ?SYSTEM) means that the 
&%PhysicalSystem ?SUB is a part of the &%PhysicalSystem ?SYSTEM.")

(instance systemPart BinaryPredicate)
(domain systemPart 1 Physical)
(domain systemPart 2 PhysicalSystem)

(documentation systemPart "(&%systemPart ?PART ?SYSTEM) means that 
the &%Physical thing ?PART is a &%SystemElement in the &%PhysicalSystem 
?SYSTEM.")

(=>
	(and
		(subSystem ?SUB ?SYSTEM)
		(systemPart ?PART ?SUB))
	(systemPart ?PART ?SYSTEM))

(subclass SystemElement Physical)

(subclass SystemArc SystemElement)

; connects: SCO x SCO x SCO  1 connected to 2 and to 3, 2 and 3 not cncted
; between: Object x Object x Object 2 between 1 and 3
; links: GraphNode x GraphNode x GraphArc
; systemLink: Physical (Arc) x Physical (Node) x Physical (Node)

(subclass SystemNode SystemElement)

(instance systemLink TernaryPredicate)
(domain systemLink 1 SystemNode)
(domain systemLink 2 SystemNode)
(domain systemLink 3 SystemArc)

(documentation systemLink "(&%systemLink ?NODE1 ?NODE2 ?ARC) means 
that the &%SystemNodes ?NODE1 and ?NODE2 are linked by the &%SystemArc 
?ARC.")

(=>
	(systemLink ?NODE1 ?NODE2 ?ARC)
	(systemLink ?NODE2 ?NODE1 ?ARC))

(=>
	(systemLink ?NODE1 ?NODE2 ?ARC)
	(connects ?ARC ?NODE1 ?NODE2))

(=>
	(connects ?ARC ?NODE1 ?NODE2)
	(connects ?ARC ?NODE2 ?NODE1))

;; FUNCTION:
(instance SystemArcFn BinaryFunction)
(domain SystemArcFn 1 SystemNode)
(domain SystemArcFn 2 SystemNode)
(range SystemArcFn SystemArc)

(documentation SystemArcFn  "(&%SystemArcFn ?NODE1 ?NODE2) denotes the 
&%SystemArc that links &%SystemNodes ?NODE1 and ?NODE2.")

(=>
	(and
		(instance ?NODE1 Physical)
		(instance ?NODE2 Physical)
		(instance (SystemArcFn ?NODE1 ?NODE2) SystemArc))
	(systemLink ?NODE1 ?NODE2 (SystemArcFn ?NODE1 ?NODE2)))


;; Kinds of PhysicalSystems:

(subclass TransportationSystem PhysicalSystem)

(documentation TransportationSystem "&%TransportationSystem is the 
subclass of &%PhysicalSystems in which the &%SystemArcs correspond to 
&%Transitways, and &%SystemNodes correspond to &%GeographicRegions or, 
more specifically, &%TransitTerminals.")

(subclass WaterTransportationSystem TransportationSystem)

(=>
	(and
		(instance ?SYSTEM TransitSystem)
		(systemPart ?PART ?SYSTEM))
	(instance ?PART Transitway))

(subclass CanalSystem WaterTransportationSystem)

;;--------------------------------

;;	(E) 2. Transit Systems

(subclass TransitSystem Region)

(documentation TransitSystem "A &%TransitSystem is a system of 
interconnected &%Transitways over which some type(s) of vehicles or 
travellers may pass.  In addition to &%Transitways, &%TransitSystems 
may also include &%TransitJunctions and &%TransitTerminals.  Transit 
systems may be demarcated by where they are located (e.g., the rail 
system of &%Afghanistan), who owns or manages them (e.g., American 
Airlines &%TransitSystem of &%AirRoutes, or state highways managed by 
TexDOT), or the type of vehicles or travellers accommodated (e.g., 
the system of Santa Clara county bike trails.")

(=>
	(instance ?SYSTEM TransitSystem)
	(exists (?ROUTE)
		(and
			(instance ?ROUTE Transitway)
			(part ?ROUTE ?SYSTEM))))

(subclass UniModalTransitSystem TransitSystem)

(documentation UniModalTransitSystem "&%UniModalTransitSystem is 
the class of &%TransitSystems that accommodate a single type of 
transportation device or method.")

(subclass MultiModalTransitSystem TransitSystem)

(documentation MultiModalTransitSystem "&%MultiModalTransitSystem is 
the class of &%TransitSystems that accommodate more than one type of 
transportation device or method.")

;;------------------------------------

;;	(E) 3. Transit Terminals 

; just use &%between, unless there's more to say about this predicate:
(instance routeBetween TernaryPredicate)
(domain routeBetween 1 Transitway)
(domain routeBetween 2 Region)
(domain routeBetween 3 Region)

(documentation routeBetween "(&%routeBetween ?ROUTE ?FROM ?TO) means 
that the &%Transitway ?ROUTE is a route between the place ?FROM and 
the place ?TO.")

(subclass TransitTerminal StationaryArtifact)

(documentation TransitTerminal "A &%TransitTerminal is a place where 
travellers or transportation devices begin or end their journeys, or 
where passengers and/or goods may be transferred.  At a terminal, 
&%TransportationDevices may be received, assigned, sent out, or 
stored.")

(subclass TrainStation TransitTerminal)

(subclass TerminalBuilding Building) 
 
(documentation TerminalBuilding "A &%TerminalBuilding is a &%Building 
located at a &%TransitTerminal and used in connection with its 
functions.")

(subclass TransitStop Region)

(documentation TransitStop "&%TransitStop is the subclass of places 
where a vehicle of a scheduled or common carrier makes a stop to 
discharge or take on passengers or goods.")

(subclass TransitShelter Artifact)

(documentation TransitShelter "&%TransitShelter is the class of 
structures that provide shelter for passengers waiting at a 
&%TransitStop.")

(subclass HomeGarage Building)  ; also, garages are StorageAreas
(subclass ParkingGarage Building)  ; also, StorageArea

(subclass ShipBerth WaterArea)   ; also, StorageArea

(documentation ShipBerth "&%ShipBerth is the class of areas where 
a &%Ship may be moored, whether at an &%Anchorage or dock.")

(=>
	(and
		(instance ?HARBOR Harbor)
		(equipmentCount ?HARBOR ShipBerth ?NUM)
		(greaterThan ?NUM 0))
	(capability ShipBerthing path ?HARBOR))

(=>
	(and
		(instance ?PORT PortFacility)
		(capability ShipBerthing patient ?PORT))
	(exists (?HARBOR)
		(and
			(instance ?HARBOR Harbor)
			(connected ?HARBOR ?PORT)	
			(capability ShipBerthing path ?HARBOR))))

;;----------------------------------
;;	(E) 4. Transitway Junctions

(subclass TransitwayJunction Transitway)
(names "intersection" TransitwayJunction)
(names "junction" TransitwayJunction)

(documentation TransitwayJunction "&%TransitwayJunction is the class of 
regions where two or more &%Transitways meet and traffic may transfer 
from one transitway to another.")

(subclass RoadJunction TransitwayJunction)
(subclass RoadJunction Roadway)

(documentation RoadJunction "&%RoadJunction is the subclass of 
&%TransitwayJunctions where two or more &%Roadways come together.")

(subclass RailJunction TransitwayJunction)
(subclass RailJunction Railway)

(documentation RailJunction "&%RailJunction is the subclass of 
&%TransitwayJunctions where two or more &%Railway lines come together.")

(subclass WaterJunction TransitwayJunction)
(subclass WaterJunction Waterway)

(documentation WaterJunction "&%WaterJunction is the subclass of 
&%TransitwayJunctions where two or more &%Waterways come together.")  

;;------------------------------------
;;	(E) 5. Transit Routes

(subclass TransitRoute Region)

(documentation TransitRoute "&%TransitRoute is the class of 
&%Regions that are paths for &%Motion from one place to another.")

(subclass AirRoute TransitRoute)

(documentation AirRoute "An &%AirRoute is a region of air space that 
can be travelled between points by an air &%TransportationDevice.")

;;---------------------------------------------------------------------
;;	F. Trips

(subclass Trip Motion)

(documentation Trip "&%Trip is the subclass of &%Motions along a 
&%TransitRoute or &%Transitway.")

(subclass IntermodalTrip Trip)

(documentation IntermodalTrip "&%IntermodalTrip is the class of 
trips in which more than one mode (road, rail, sea, or air) of 
&%Transportation is used.  That is, there are at least two 
&%subProcesses of the trip that use different modes of 
&%TransportationDevice. ")

(subclass ShipBerthing Translocation)

(documentation ShipBerthing "&%ShipBerthing is the class of 
&%Translocation processes in which a vessel is brought to a 
mooring, at dockside or anchorage.") 

(instance ShipBerthingFn UnaryFunction)
(domain ShipBerthingFn 1 Ship)
(rangeSubclass ShipBerthingFn ShipBerthing)

(documentation ShipBerthingFn "(ShipBerthingFn ?SHIP) denotes the 
class of &%ShipBerthings of an individual &%Watercraft ?SHIP.")

;;---------------------------------------------------------------------

;;	G. Transitway Capacity

(instance transitwayCapacityCount TernaryPredicate)
(domain transitwayCapacityCount 1 Transitway)
(domainSubclass transitwayCapacityCount 2 SelfConnectedObject)
(domain transitwayCapacityCount 3 NonnegativeInteger)

(documentation transitwayCapacityCount 
"(&%transitwayCapacityCount ?WAY ?TYPE ?NUMBER) means that the 
&%Transitway ?WAY can accommodate a maximum of ?NUMBER items of ?TYPE 
at any one time.")

(instance transitwayCapacityRate TernaryPredicate)
(domain transitwayCapacityRate 1 Transitway)
(domainSubclass transitwayCapacityRate 2 SelfConnectedObject)
(domain transitwayCapacityRate 3 FunctionQuantity)

(documentation transitwayCapacityRate 
"(&%transitwayCapacityRate ?WAY ?TYPE ?RATE) means that the 
&%Transitway WAY can transit items of ?TYPE at the maximum 
&%FunctionQuantity ?RATE.  For example, 
(&%transitwayCapacityRate &%SFBayBridgeWestbound &%Automobile 500).")  

;;---------------------------------------------------------------------

;;	H. Transitway Obstacles

(subclass TransitwayObstacle Object)

(documentation TransitwayObstacle "&%TransitwayObstacle is the general 
class of &%Objects that can act as obstacles to &%Motion along a 
&%Transitway.")

(subclass Dam TransitwayObstacle)

(subclass Door TransitwayObstacle)
(subclass Door Device)

(subclass CanalLockGate TransitwayObstacle)
(subclass CanalLockGate Device)

(subclass TrafficLight Device) ; a TransitObstacle when Red (and obeyed).
					 ; Treat under TrafficControlDevice
(subclass TollBooth Building)

; Dam, Lock
; Dam presents an obstacle to transit.  Some are bypassed by locks.
; Lock is a transitway, part of a larger transitway.  Doors are temporary obstacles. Never has both ends open at the same time.

; impact if damaged - represent "device failures" and effects. 
; deviceFailureEffect(on area)
; for a dam across a river w/adjacent downstream valley:
; (deviceFailureEffect ?device Flood ?valley)
; implies a flood occurs in/"on" the ?valley.
; defer for later work.

;;---------------------------------------------------------------------

;;	I. Traffic Regulation

;;	1. Transit Authority

(subclass TransportationAuthority Organization)

(documentation TransportationAuthority 
"&%TransportationAuthority is the class of &%Organizations that are 
responsible for one or more systems of transportation, usually within 
a particular &%GeopoliticalArea.")

(subclass VehicleRegistration ContentBearingObject)  ; official document

(documentation VehicleRegistration "&%VehicleRegistration is the class 
of official documents containing information about a vehicle's ownership 
and identifying characteristics, as required by the appropriate authority 
for the type and location of individual vehicles.")

;; 	2. Transit Control Systems

; AirTrafficControl

;;	3. Transit Control Devices

; TrafficLight
; TrafficGate

;;	4. Tolls or Usage Fees

;;---------------------------------------------------------------------

;;	J. Transportation Businesses

;; 	   1. Business Types

(subclass CommonCarrier TransportationCompany)

(documentation CommonCarrier "&%CommonCarrier is the subclass of 
&%TransportationCompany whose instances must offer services to all 
customers.  Contrast with &%ContractCarrier.")

(subclass ContractCarrier TransportationCompany)

(documentation ContractCarrier "&%ContractCarrier is the subclass of 
&%TransportationCompany whose instances offer services to only one  
customer, under contract.  Contrast with &%CommonCarrier.")

(disjoint CommonCarrier ContractCarrier)

(subclass ClassIRailroad  RailroadCompany)

(documentation ClassIRailroad "&%ClassIRailroad is the 
subclass of &%RailroadCompany whose instances have an 
average annual gross revenue above $256.4 million 
&%UnitedStatesDollars.")

(subclass ClassIIRailroad  RailroadCompany)

(documentation ClassIIRailroad "&%ClassIIRailroad is the 
subclass of &%RailroadCompany whose instances have an 
average annual gross revenue between $20.5 and $256.4 million 
&%UnitedStatesDollars.")

(subclass ClassIIIRailroad  RailroadCompany)

(documentation ClassIIIRailroad "&%ClassIIIRailroad is the 
subclass of &%RailroadCompany whose instances have an 
average annual gross revenue below $20.5 million 
&%UnitedStatesDollars.")

;; 		2. Personnel 

;; 'occupiesPosition': Human x Position x Organization, is defined in Merge.txt

(instance subordinateInOrganization TernaryPredicate)
(domain subordinateInOrganization 1 Organization)
(domain subordinateInOrganization 2 Human)
(domain subordinateInOrganization 3 Human)

(documentation subordinateInOrganization 
"(&%subordinateInOrganization ?ORG ?PERSON1 ?PERSON2) means that 
in the &%Organization ?ORG, ?PERSON1 is subordinate to ?PERSON2.")

(=>
    (subordinateInOrganization ?ORG ?PERSON1 ?PERSON2)
    (employs ?ORG ?PERSON1))

(=>
    (subordinateInOrganization ?ORG ?PERSON1 ?PERSON2)
    (employs ?ORG ?PERSON2))

(instance subordinatePosition TernaryPredicate)
(domain subordinatePosition 1 Organization)
(domain subordinatePosition 2 Position)
(domain subordinatePosition 3 Position)

(documentation subordinatePosition 
"(&%subordinatePosition ?agent1 ?agent2 ?organization) means that in 
the &%Organization ?ORG, the holder of role ?SUB is subordinate to 
the holder of role ?SUPER.")

(=>
    (and
            (subordinatePosition ?ORG ?ROLE1 ?ROLE2)
            (occupiesPosition ?PERSON1 ?ROLE1 ?ORG))
    (exists (?ROLE2 ?PERSON2)
            (and
                    (instance ?PERSON2 Human)
                    (occupiesPosition ?PERSON2 ?ROLE2 ?ORG)
                    (subordinateInOrganization ?ORG ?PERSON1 ?PERSON2))))

;;	2. Transport Operators, Passengers, and Cargo

(instance operator BinaryPredicate)
(instance operator AsymmetricRelation)
(instance operator IrreflexiveRelation)
(domain operator 1 Object)	
(domain operator 2 Agent)

(documentation operator "(&%operator ?OBJECT ?AGENT) means that ?AGENT 
determines how ?OBJECT is used, either by directly or indirectly operating 
it.")

(instance passengerCapacityMaxNumber BinaryPredicate)
(domain passengerCapacityMaxNumber 1 TransportationDevice)
(domain passengerCapacityMaxNumber 2 Number)

(documentation passengerCapacityMaxNumber 
"(&%passengerCapacityMaxNumber ?TRANSPORT ?NUMBER) means that the 
&%TransportationDevice ?TRANSPORT has a safe carrying capacity for ?NUMBER 
of passengers.")

(subclass ShipCrew Organization)

(documentation ShipCrew "A &%ShipCrew is an &%Organization of people 
who operate a &%Ship, &%Plane, &%Train, or other transportation vehicle.")

;; FUNCTION:
(instance ShipCrewFn UnaryFunction)

(documentation ShipCrewFn "(&%ShipCrewFn ?BOAT) denotes the 
&%Organization consisting of the people charged with operating 
the &%Watercraft ?BOAT.")

(domain ShipCrewFn 1 Watercraft)
(range ShipCrewFn 2 Group)

(instance ShipCaptain Position)
(instance FirstMate Position)
(instance ChiefSteward Position)
(instance RadioOperator Position)
(=>
	(attribute ?PERSON RadioOperator)
	(hasSkill ?PERSON (OperatingFn CommunicationRadio)))

(instance OperatingFn UnaryFunction)

(documentation OperatingFn "(&%OperatingFn ?DEVICE) denotes the class 
of events in which a &%Device of type ?device is operated.")

(domain OperatingFn 1 Device)
(rangeSubclass OperatingFn Process)

;;========================================================================

