; Semantic Rewriting Rule set
; author: Adam Pease - adam.pease@ipsoft.com
; implements the semantic rewriting of CELT, as described in
;   Pease, A., and Li, J. (2010) Controlled English to Logic Translation. 
;   In Theory and Applications of Ontology, ed. Roberto Poli, 
;   Michael Healy, and Achilles Kameas, Springer, ISBN: 978-90-481-8846-8.

neg(?X,?Y) ==> (not(?X,?Y)).

amod(?X,?Y) ==> (attribute(?X,?Y)).

cop(?X,?Y), sumo(Attribute,?X) ==> (attribute(?X,?Y)).

nsubjpass(?X,?Y) ==> (patient(?X,?Y)).

det(?X,What*), sumo(?O,?X)  ==> (instance(?X,?O)).

nsubj(?E,?X) ==> (agent(?E,?X)).

dobj(?E,?Y) ==> (patient(?E,?Y)).

nsubjpass(?E,?Y) ==> (patient(?E,?Y)).

;; prepositions --------------

;{isCELTclass(?X,Person)} ==> (isCELTclass(?X,Person)).
;{isCELTclass(?X,Time)} ==> (isCELTclass(?X,Time)).
;{isCELTclass(?X,Object)} ==> (isCELTclass(?X,Time)).

prep_at(?X,?Y), +sumo(?C,?Y), isCELTclass(?C,Object) ==> (located(?X,?Y)).
prep_in(?X,?Y), +sumo(?C,?Y), isCELTclass(?C,Object) ==> (located(?X,?Y)).
prep_on(?X,?Y), +sumo(?C,?Y), isCELTclass(?X,Object) ==> (located(?X,?Y)).
prep_to(?X,?Y), +sumo(?C,?Y), isCELTclass(?C,Object) ==> (destination(?X,?Y)).
prep_to(?X,?Y), +sumo(?C,?Y), isCELTclass(?C,Time) ==> (EndFn(?X,?Y)).

prep_at(?X,?Y), +sumo(?C,?Y), isCELTclass(?C,Time) ==> (time(?X,?Y)).
prep_in(?X,?Y), +sumo(?C,?Y), isCELTclass(?C,Time) ==> (time(?X,?Y)).
prep_on(?X,?Y), +sumo(?C,?Y), isCELTclass(?C,Time) ==> (time(?X,?Y)).

prep_for(?X,?Y), +sumo(?C,?Y), isCELTclass(?C,Person) ==> (destination(?X,?Y)).
prep_for(?X,?Y), +sumo(?C,?Y), isCELTclass(?C,Time) ==> (duration(?X,?Y)).

prep_through(?X,?Y), +sumo(?C,?Y), isCELTclass(?C,Time) ==> (duration(?X,?Y)).
prep_through(?X,?Y), +sumo(?C,?Y), isCELTclass(?C,Object) ==> (traverses(?X,?Y)).

prep_with(?X,?Y), +sumo(?C,?Y), isCELTclass(?C,Person) ==> (agent(?X,?Y)).
prep_with(?X,?Y), +sumo(?C,?Y), isCELTclass(?C,Object) ==> (instrument(?X,?Y)).

prep_across(?X,?Y), +sumo(?C,?Y), isCELTclass(?C,Object) ==> (traverses(?X,?Y)).

prep_within(?X,?Y), +sumo(?C,?Y), isCELTclass(?C,Object) ==> (properlyFills(?X,?Y)).
prep_into(?X,?Y), +sumo(?C,?Y), isCELTclass(?C,Object) ==> (properlyFills(?X,?Y)).

prep_from(?X,?Y), +sumo(?C,?Y), isCELTclass(?C,Object) ==> (origin(?X,?Y)).
prep_from(?X,?Y), +sumo(?C,?Y), isCELTclass(?C,Time) ==> (BeginFn(?X,?Y)).

prep_until(?X,?Y), +sumo(?C,?Y), isCELTclass(?C,Time) ==> (EndFn(?X,?Y)).

prep_after(?X,?Y), +sumo(?C,?Y), isCELTclass(?C,Time) ==> (greaterThan(?X,?Y)).
prep_before(?X,?Y), +sumo(?C,?Y), isCELTclass(?C,Time) ==> (lessThan(?X,?Y)).

;; -------------------------------

root(?X,?Y) ==> 0.

sumo(?O,?X) ==> (instance(?X,?O)).

agent(?X,?Y) ==> {(agent ?X ?Y)}.
patient(?X,?Y) ==> {(patient ?X ?Y)}.
instance(?X,?Y) ==> {(instance ?X ?Y)}.
located(?X,?Y) ==> {(located ?X ?Y)}.
attribute(?X,?Y) ==> {(attribute ?X ?Y)}.
destination(?X,?Y) ==> {(destination ?X ?Y)}.

; time TimeMeasure, Process
; person Human, OccupationalRole, SocialRole
; object all others

; mass Substance, Food, and special words such as
;      money/furniture/data/life/beauty/truth/crime/law/education
; count all others
