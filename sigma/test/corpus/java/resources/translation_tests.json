[
{"text":"John owns a dog.",
"kif":
"(exists (?John-1 ?dog-4) 
  (and 
    (attribute ?John-1 Male)
    (instance ?John-1 Human)
    (possesses ?John-1 ?dog-4)
    (instance ?dog-4 Canine)))"
},
{"text":"John arrives.",
"kif":
"(exists (?John-1 ?arrives-2) 
  (and 
    (agent ?arrives-2 ?John-1)
    (attribute ?John-1 Male)
    (instance ?arrives-2 Arriving)
    (instance ?John-1 Human)))"
},
{"text":"John is a customer of the bank.",
"kif":
"(exists (?bank)
  (and
    (attribute John-1 Male)
    (instance John-1 Human)
    (customer John-1 ?bank)
    (instance ?bank Bank-FinancialOrganization)))"
},
{"text":"The customer is at the bank.",
"kif":
"(exists (?bank ?customer ?salesperson)
  (and
    (instance ?bank Bank-FinancialOrganization)
    (instance ?customer CognitiveAgent)
    (instance ?salesperson CognitiveAgent)
    (located ?customer ?bank)
    (customer ?customer ?salesperson)))"
},
{"text":"The card is valid.",
"kif":
"(exists (?card)
  (and
    (instance ?card BankCard)
    (attribute ?card Valid)))"
},
{"text":"John is a baker.",
"kif":
"(and
  (attribute John-1 Male)
  (instance John-1 Human)
  (attribute John-1 Position) )"
},
{"text":"John is the baker.",
"kif":
"(and
  (attribute John-1 Male)
  (instance John-1 Human)
  (attribute John-1 Position) )"
},
{"text":"John is German.",
"kif":
"(and
  (attribute John-1 Male)
  (instance John-1 Human)
  (member John-1 TeutonicEthnicity))"
},
{"text":"John is Mr Miller.",
"kif":
"(and
  (equal John-1 MrMiller)
  (instance MrMiller Human)
  (attribute MrMiller FullyFormed)
  (attribute MrMiller Male)
  (instance John-1 Human)
  (attribute John-1 Male))"
},
{"text":"John's sibling is Mr Miller.",
"kif":
"(exists (?sibling)
  (and
    (attribute John-1 Male)
    (attribute MrMiller Male)
    (attribute MrMiller FullyFormed)
    (instance John-1 Human)
    (instance MrMiller Human)
    (equal ?sibling MrMiller)
    (sibling ?sibling John-1)))"
},
{"text":"John is Mr Miller's father.",
"kif":
"(exists (?father)
  (and
    (attribute John-1 Male)
    (attribute MrMiller Male)
    (attribute MrMiller FullyFormed)
    (instance John-1 Human)
    (instance MrMiller Human)
    (equal John-1 ?father)
    (father ?father MrMiller)))"
},
{"text":"The sibling of Jill is at the bank.",
"kif":
"(exists (?bank ?sibling)
  (and
    (attribute Jill-1 Female)
    (instance Jill-1 Human)
    (instance ?bank Bank-FinancialOrganization)
    (sibling ?sibling Jill-1)
    (located ?sibling ?bank)))"
},
{"text":"John's card is compatible with the red bank card.",
"kif":
"(exists (?bank_card ?card)
  (and
    (attribute John-1 Male)
    (instance John-1 Human)
    (attribute ?bank_card Red)
    (instance ?bank_card BankCard)
    (instance ?card BankCard)
    (possesses John-1 ?card)
    (attribute ?card SubjectiveAssessmentAttribute)))"
},
{"text":"John's code is identical to Mary's code.",
"kif":
"(exists (?code1 ?code2)
  (and
    (attribute John-1 Male)
    (attribute Mary-1 Female)
    (instance John-1 Human)
    (instance Mary-1 Human)
    (instance ?code1 Text)
    (instance ?code2 Text)
    (possesses John-1 ?code1)
    (possesses Mary-1 ?code2)
    (equal ?code1 ?code2)))"
},
{"text":"John's card is more expensive than Mary's card.",
"kif":
"(exists (?card1 ?card2)
  (and
    (attribute John-1 Male)
    (attribute Mary-1 Female)
    (instance John-1 Human)
    (instance Mary-1 Human)
    (instance ?card1 BankCard)
    (possesses John-1 ?card1)
    (instance ?card2 BankCard)
    (possesses Mary-1 ?card2)
    (monetaryValue ?card1 ?val1)
    (monetaryValue ?card2 ?val2)
    (greaterThan ?val1 ?val2)))"
},
{"text":"John gives the card to Mary.",
"kif":
"(exists (?card ?event)
  (and
    (instance ?event Giving)
    (attribute John-1 Male)
    (instance John-1 Human)
    (agent ?event John-1)
    (instance ?card BankCard)
    (patient ?event ?card)
    (attribute Mary-1 Female)
    (instance Mary-1 Human)
    (destination ?event Mary-1)))"
},
{"text":"She gives the card to Mary.",
"kif":
"(exists (?card ?she ?event)
  (and
    (instance ?event Giving)
    (attribute ?she Female)
    (instance ?she Human)
    (agent ?event ?she)
    (instance ?card BankCard)
    (patient ?event ?card)
    (attribute Mary-1 Female)
    (instance Mary-1 Human)
    (destination ?event Mary-1)))"
},
{"text":"A new customer gives the card to the teller.",
"kif":
"(exists (?teller ?card ?salesperson ?customer ?event)
  (and
    (instance ?customer CognitiveAgent)
    (instance ?card BankCard)
    (instance ?salesperson CognitiveAgent)
    (customer ?customer ?salesperson)
    (instance ?event Giving)
    (attribute ?customer New)
    (agent ?event ?customer)
    (patient ?event ?card)
    (attribute ?teller Position)
    (destination ?event ?teller)))"
},
{"text":"John gives Mary the card.",
"kif":
"(exists (?card ?event)
  (and
    (instance ?event Giving)
    (attribute John-1 Male)
    (instance John-1 Human)
    (agent ?event John-1)
    (instance ?card BankCard)
    (patient ?event ?card)
    (attribute Mary-1 Female)
    (instance Mary-1 Human)
    (destination ?event Mary-1)))"
},
{"text":"A new customer gives the teller the card.",
"kif":
"(exists (?teller ?card ?salesperson ?customer ?event)
  (and
    (instance ?customer CognitiveAgent)
    (instance ?salesperson CognitiveAgent)
    (customer ?customer ?salesperson)
    (instance ?event Giving)
    (attribute ?customer New)
    (agent ?event ?customer)
    (instance ?card BankCard)
    (patient ?event ?card)
    (attribute ?teller Position)
    (destination ?event ?teller)))"
},
{"text":"The oldest dog enters the bank.",
"kif":
"(exists (?bank ?dog ?event)
  (and
    (forall (?X)
      (=>
        (and
          (instance ?X Canine)
          (not
            (equal ?X ?dog)))
        (and
          (greaterThan ?val1 ?val2)
          (age ?dog ?val1)
          (age ?X ?val2))))
    (instance ?bank Bank-FinancialOrganization)
    (instance ?dog Canine)
    (instance ?event Motion)
    (patient ?event ?bank)
    (agent ?event ?dog)))"
},
{"text":"The oldest customer enters an invalid card.",
"kif":
"(exists (?card ?customer ?event ?salesperson)
  (and
    (forall (?X)
      (=>
        (and
          (instance ?X customer)
          (not
            (equal ?X ?customer)))
        (and
          (greaterThan ?val1 ?val2)
          (age ?customer ?val1)
          (age ?X ?val2))))
    (attribute ?card Incorrect)
    (instance ?card BankCard)
    (instance ?customer CognitiveAgent)
    (instance ?event Motion)
    (instance ?salesperson CognitiveAgent)
    (patient ?event ?card)
    (agent ?event ?customer)
    (customer ?customer ?salesperson)))"
},
{"text":"Mr Miller is the oldest teller.",
"kif":
"(and
  (attribute MrMiller FullyFormed)
  (attribute MrMiller Male)
  (attribute MrMiller Position)
  (forall (?X)
    (=>
      (and
        (attribute ?X Position)
        (not
          (equal ?X MrMiller)))
      (and
        (greaterThan ?val1 ?val2)
        (age MrMiller ?val1)
        (age ?X ?val2))))
  (instance MrMiller Human))"
},
{"text":"John dry cleans the credit card.",
"kif":
"(exists (?credit_card ?event)
  (and
    (instance ?event Cleaning)
    (attribute John-1 Male)
    (instance John-1 Human)
    (agent ?event John-1)
    (instance ?credit_card CreditCard)
    (patient ?event ?credit_card)))"
},
{"text":"The New York Times is at the bank.",
"kif":
"(exists (?bank)
  (and
    (instance TheNewYorkTimes Artifact)
    (instance ?bank Bank-FinancialOrganization)
    (located TheNewYorkTimes ?bank) ))"
},
{"text":"Mr Miller enters the bank.",
"kif":
"(exists (?bank ?event)
  (and
    (attribute MrMiller FullyFormed)
    (attribute MrMiller Male)
    (instance MrMiller Human)
    (names MrMiller ""MrMiller"")
    (instance ?bank Bank-FinancialOrganization)
    (agent ?event MrMiller)
    (instance ?event Motion)
    (patient ?event ?bank)))"
},
{"text":"The customer Mr Miller enters the bank.",
"kif":
"(exists (?bank ?event ?salesperson)
  (and
    (instance MrMiller CognitiveAgent)
    (instance ?bank Bank-FinancialOrganization)
    (agent ?event MrMiller)
    (names MrMiller \"MrMiller\")
    (instance ?event Motion)
    (customer MrMiller ?salesperson)
    (instance ?salesperson CognitiveAgent)
    (patient ?event ?bank)))"
},
{"text":"The customer Mr Miller enters a bank X.",
"kif":
"(exists (?salesperson ?event ?X)
  (and
    (instance MrMiller CognitiveAgent)
    (instance ?salesperson CognitiveAgent)
    (customer MrMiller ?salesperson)
    (names MrMiller \"MrMiller\")
    (instance ?event Motion)
    (agent ?event MrMiller)
    (instance ?X Bank-FinancialOrganization)
    (patient ?event ?X)))"
},
{"text":"The card's code is valid.",
"kif":
"(exists (?card ?code)
  (and
    (instance ?card BankCard)
    (attribute ?code Valid)
    (instance ?code Text)
    (part ?code ?card)))"
},
{"text":"John's card is at the bank.",
"kif":
"(exists (?bank ?card)
  (and
    (attribute John-1 Male)
    (instance John-1 Human)
    (instance ?bank Bank-FinancialOrganization)
    (instance ?card BankCard)
    (possesses John-1 ?card)
    (located ?card ?bank)))"
},
{"text":"The captain of the ship throws the cannon into the sea.",
"kif":
"(exists (?cannon ?captain ?event ?sea ?ship)
  (and
    (instance ?cannon ArtilleryGun)
    (attribute ?captain ShipCaptain)
    (instance ?event Impelling)
    (instance ?sea SaltWaterArea)
    (instance ?ship WaterVehicle)
    (patient ?event ?cannon)
    (agent ?event ?captain)
    (operator ?captain ?ship)
    (destination ?event ?sea)))"
},
{"text":"The thief kills John's father.",
"kif":
"(exists (?event ?father ?thief)
  (and
    (attribute John-1 Male)
    (instance John-1 Human)
    (instance ?event Killing)
    (father ?father John-1)
    (attribute ?thief SocialRole)
    (patient ?event ?father)
    (agent ?event ?thief)))"
},
{"text":"The banker pokes John's nose.",
"kif":
"(exists (?banker ?event ?nose)
  (and
    (attribute John-1 Male)
    (instance John-1 Human)
    (instance ?event Poking)
    (instance ?nose Nose)
    (part ?nose John-1)
    (attribute ?banker Banker)
    (agent ?event ?banker)
    (patient ?event ?nose)))"
},
{"text":"The farmer sees John's dog.",
"kif":
"(exists (?dog ?event ?farmer)
  (and
    (attribute John-1 Male)
    (instance John-1 Human)
    (instance ?dog Canine)
    (possesses John-1 ?dog)
    (instance ?event Seeing)
    (attribute ?farmer Position)
    (patient ?event ?dog)
    (experiencer ?event ?farmer)))"
},
{"text":"John's swimming triggers Mary's distress.",
"kif":
"(exists (?distress ?swimming)
  (and
    (attribute John-1 Male)
    (attribute Mary-1 Female)
    (instance John-1 Human)
    (instance Mary-1 Human)
    (instance ?swimming Swimming)
    (instance ?distress EmotionalState)
    (agent ?swimming John-1)
    (attribute Mary-1 ?distress)
    (result ?swimming ?distress)))"
},
{"text":"Washington is the capital of the United States.",
"kif":
"(capitalCity WashingtonDC UnitedStates)"
},
{"text":"He travels to the Sudan.",
"kif":
"(exists (?he ?event)
  (and
    (instance ?event Transportation)
    (attribute ?he Male)
    (instance ?he Human)
    (agent ?event ?he)
    (destination ?event Sudan)))"
},
{"text":"He travels to Sudan.",
"kif":
"(exists (?he ?event)
  (and
    (instance ?event Transportation)
    (attribute ?he Male)
    (instance ?he Human)
    (agent ?event ?he)
    (destination ?event Sudan)))"
},
{"text":"The waiter pours soup into the bowl.",
"kif":
"(exists (?bowl ?event ?soup ?waiter)
  (and
    (instance ?bowl Artifact)
    (instance ?event Pouring)
    (instance ?soup Food)
    (attribute ?waiter ServicePosition)
    (destination ?event ?bowl)
    (patient ?event ?soup)
    (agent ?event ?waiter)))"
},
{"text":"Water flows.",
"kif":
"(exists (?event ?water)
  (and
    (instance ?event Translocation)
    (instance ?water Water)
    (patient ?event ?water)))"
},
{"text":"The boy talks.",
"kif":
"(exists (?boy ?event)
  (and
    (attribute ?boy Male)
    (instance ?boy Human)
    (instance ?boy NotFullyFormed)
    (instance ?event Speaking)
    (agent ?event ?boy)))"
},
{"text":"The spy gives money to the thief.",
"kif":
"(exists (?event ?money ?spy ?thief)
  (and
    (instance ?event Giving)
    (instance ?money Currency)
    (attribute ?spy Position)
    (attribute ?thief SocialRole)
    (patient ?event ?money)
    (agent ?event ?spy)
    (destination ?event ?thief)))"
},
{"text":"He drives toward the bridge.",
"kif":
"(exists (?bridge ?he ?event)
  (and
    (instance ?event LandTransportation)
    (attribute ?he Male)
    (instance ?he Human)
    (agent ?event ?he)
    (instance ?bridge Bridge)
    (direction ?event ?bridge)))"
},
{"text":"Karla falls below the tree branch.",
"kif":
"(exists (?event ?tree_branch ?location)
  (and
    (attribute Karla-1 Female)
    (instance Karla-1 Human)
    (agent ?event Karla-1)
    (instance ?event Motion)
    (instance ?tree_branch BodyPart)
    (destination ?event ?location)
    (orientation ?location ?tree_branch Below)))"
},
{"text":"John enters the bank with Sarah.",
"kif":
"(exists (?bank ?event)
  (and
    (instance ?event Motion)
    (attribute John-1 Male)
    (instance John-1 Human)
    (agent ?event John-1)
    (instance ?bank Bank-FinancialOrganization)
    (patient ?event ?bank)
    (attribute Sarah-1 Female)
    (instance Sarah-1 Human)
    (agent ?event Sarah-1)))"
},
{"text":"The airplane flies to the airport.",
"kif":
"(exists (?airplane ?airport ?event)
  (and
    (instance ?airplane Airplane)
    (instance ?airport Airport)
    (instance ?event Flying)
    (patient ?event ?airplane)
    (destination ?event ?airport)))"
},
{"text":"The boat floats on the water.",
"kif":
"(exists (?water ?boat ?event ?location)
  (and
    (instance ?event Swimming)
    (instance ?boat WaterVehicle)
    (patient ?event ?boat)
    (instance ?water Water)
    (orientation ?location ?water On)
    (located ?event ?location)))"
},
{"text":"The train arrives on every Monday.",
"kif":
"(exists (?train ?event ?Monday)
  (and
    (instance ?Monday Monday)
    (instance ?event Arriving)
    (instance ?train Train)
    (patient ?event ?train)
    (overlapsTemporally
      (WhenFn ?event) ?Monday)))"
},
{"text":"The visitor arrives at the station.",
"kif":
"(exists (?event ?station ?visitor)
  (and
    (instance ?event Arriving)
    (instance ?station CommercialBuilding)
    (attribute ?visitor SocialRole)
    (destination ?event ?station)
    (agent ?event ?visitor)))"
},
{"text":"The visitor arrives at the midnight.",
"kif":
"(exists (?event ?midnight ?visitor)
  (and
    (instance ?event Arriving)
    (instance ?midnight TimePoint)
    (attribute ?visitor SocialRole)
    (overlapsTemporally
      (WhenFn ?event) ?midnight)
    (agent ?event ?visitor)))"
},
{"text":"John's dog is the most expensive dog.",
"kif":
"(exists (?dog)
  (and
    (attribute John-1 Male)
    (forall (?X)
      (=>
        (and
          (instance ?X Canine)
          (not
            (equal ?X ?dog)))
        (and
          (greaterThan ?val1 ?val2)
          (monetaryValue ?dog ?val1)
          (monetaryValue ?X ?val2))))
    (instance John-1 Human)
    (instance ?dog Canine)
    (possesses John-1 ?dog)))"
},
{"text":"John's dog is more expensive than Mary's dog.",
"kif":
"(exists (?dog1 ?dog2)
  (and
    (attribute John-1 Male)
    (attribute Mary-1 Female)
    (greaterThan ?val1 ?val2)
    (monetaryValue ?dog1 ?val1)
    (monetaryValue ?dog2 ?val2)
    (instance John-1 Human)
    (instance Mary-1 Human)
    (instance ?dog1 Canine)
    (possesses John-1 ?dog1)
    (instance ?dog2 Canine)
    (possesses Mary-1 ?dog2)))"
},
{"text":"John's dog is different from Mary's dog.",
"kif":
"(exists (?dog1 ?dog2)
  (and
    (attribute John-1 Male)
    (attribute Mary-1 Female)
    (instance John-1 Human)
    (instance Mary-1 Human)
    (not
      (equal ?dog1 ?dog2))
    (instance ?dog1 Canine)
    (possesses John-1 ?dog1)
    (instance ?dog2 Canine)
    (possesses Mary-1 ?dog2)))"
},
{"text":"John is red.",
"kif":
"(and
  (attribute John-1 Red)
  (instance John-1 Human)
  (attribute John-1 Male) )"
},
{"text":"The dog is red.",
"kif":
"(exists (?dog)
  (and
    (attribute ?dog Red)
    (instance ?dog Canine)))"
},
{"text":"A customer who is German inserts the card.",
"kif":
"(exists (?card ?customer ?event ?salesperson)
  (and
    (instance ?card BankCard)
    (instance ?customer CognitiveAgent)
    (member ?customer TeutonicEthnicity)
    (instance ?event Putting)
    (instance ?salesperson CognitiveAgent)
    (patient ?event ?card)
    (agent ?event ?customer)
    (customer ?customer ?salesperson)))"
},
{"text":"The customer who enters the bank inserts the card.",
"kif":
"(exists (?bank ?card ?customer ?event1 ?event2 ?salesperson)
  (and
    (instance ?bank Bank-FinancialOrganization)
    (instance ?card BankCard)
    (instance ?customer CognitiveAgent)
    (instance ?event1 Motion)
    (instance ?event2 Putting)
    (instance ?salesperson CognitiveAgent)
    (patient ?event1 ?bank)
    (patient ?event2 ?card)
    (agent ?event1 ?customer)
    (agent ?event2 ?customer)
    (customer ?customer ?salesperson)))"
},
{"text":"The card which is old is valid.",
"kif":
"(exists (?card)
  (and
    (attribute ?card Old)
    (attribute ?card Valid)
    (instance ?card BankCard)))"
},
{"text":"The card that is old is valid.",
"kif":
"(exists (?card)
  (and
    (instance ?card BankCard)
    (attribute ?card Valid)
    (attribute ?card Old)))"
},
{"text":"A customer inserts a credit card which is old.",
"kif":
"(exists (?credit_card ?customer ?event ?salesperson)
  (and
    (instance ?credit_card CreditCard)
    (instance ?customer CognitiveAgent)
    (instance ?event Putting)
    (instance ?salesperson CognitiveAgent)
    (attribute ?credit_card Old)
    (patient ?event ?credit_card)
    (agent ?event ?customer)
    (customer ?customer ?salesperson)))"
},
{"text":"Mr Miller enters the card that the customer inserts.",
"kif":
"(exists (?card ?customer ?event1 ?event2 ?salesperson)
  (and
    (attribute MrMiller FullyFormed)
    (attribute MrMiller Male)
    (instance MrMiller Human)
    (names MrMiller \"MrMiller\")
    (instance ?card BankCard)
    (instance ?customer CognitiveAgent)
    (agent ?event1 MrMiller)
    (instance ?event1 Motion)
    (instance ?event2 Putting)
    (instance ?salesperson CognitiveAgent)
    (patient ?event1 ?card)
    (agent ?event2 ?customer)
    (customer ?customer ?salesperson)
    (patient ?event2 ?card)))"
},
{"text":"Mr Miller enters the card that the customer inserts into the slot.",
"kif":
"(exists (?card ?customer ?event1 ?event2 ?salesperson ?slot)
  (and
    (attribute MrMiller FullyFormed)
    (attribute MrMiller Male)
    (instance MrMiller Human)
    (names MrMiller \"MrMiller\")
    (instance ?card BankCard)
    (instance ?customer CognitiveAgent)
    (instance ?event1 Putting)
    (agent ?event2 MrMiller)
    (instance ?event2 Motion)
    (instance ?salesperson CognitiveAgent)
    (instance ?slot ATMSlot)
    (patient ?event1 ?card)
    (patient ?event2 ?card)
    (agent ?event1 ?customer)
    (customer ?customer ?salesperson)
    (destination ?event2 ?slot)))"
},
{"text":"John gives the card to the teller who gives the code to the customer.",
"kif":
"(exists (?card ?code ?customer ?event1 ?event2 ?salesperson ?teller)
  (and
    (attribute John-1 Male)
    (instance John-1 Human)
    (instance ?card BankCard)
    (instance ?code Text)
    (instance ?customer CognitiveAgent)
    (agent ?event1 John-1)
    (instance ?event1 Giving)
    (instance ?event2 Giving)
    (instance ?salesperson CognitiveAgent)
    (attribute ?teller Position)
    (patient ?event1 ?card)
    (patient ?event2 ?code)
    (destination ?event2 ?customer)
    (customer ?customer ?salesperson)
    (destination ?event1 ?teller)
    (agent ?event2 ?teller)))"
},
{"text":"John gives the card to the teller who gives the customer the code.",
"kif":
"(exists (?card ?code ?customer ?event1 ?event2 ?salesperson ?teller)
  (and
    (attribute John-1 Male)
    (instance John-1 Human)
    (instance ?card BankCard)
    (instance ?code Text)
    (instance ?customer CognitiveAgent)
    (agent ?event1 John-1)
    (instance ?event1 Giving)
    (instance ?event2 Giving)
    (instance ?salesperson CognitiveAgent)
    (attribute ?teller Position)
    (patient ?event1 ?card)
    (patient ?event2 ?code)
    (destination ?event2 ?customer)
    (customer ?customer ?salesperson)
    (destination ?event1 ?teller)
    (agent ?event2 ?teller)))"
},
{"text":"The teller enters the card that the customer gives to him.",
"kif":
"(exists (?card ?customer ?event1 ?event2 ?him ?salesperson ?teller)
  (and
    (instance ?card BankCard)
    (instance ?customer CognitiveAgent)
    (instance ?event1 Motion)
    (instance ?event2 Giving)
    (attribute ?him Male)
    (instance ?him Human)
    (instance ?salesperson CognitiveAgent)
    (attribute ?teller Position)
    (patient ?event1 ?card)
    (patient ?event2 ?card)
    (agent ?event2 ?customer)
    (customer ?customer ?salesperson)
    (agent ?event1 ?teller)
    (destination ?event2 ?him)))"
},
{"text":"The teller enters the card that the customer gives him.",
"kif":
"(exists (?card ?customer ?event1 ?event2 ?him ?salesperson ?teller)
  (and
    (instance ?card BankCard)
    (instance ?customer CognitiveAgent)
    (instance ?event1 Motion)
    (instance ?event2 Giving)
    (attribute ?him Male)
    (instance ?him Human)
    (instance ?salesperson CognitiveAgent)
    (attribute ?teller Position)
    (patient ?event1 ?card)
    (patient ?event2 ?card)
    (agent ?event2 ?customer)
    (customer ?customer ?salesperson)
    (agent ?event1 ?teller)
    (destination ?event2 ?him)))"
},
{"text":"John gives the card to the teller who the customer gives the code to.",
"kif":
"(exists (?card ?code ?customer ?event1 ?event2 ?salesperson ?teller)
  (and
    (attribute John-1 Male)
    (instance John-1 Human)
    (instance ?card BankCard)
    (instance ?code Text)
    (instance ?customer CognitiveAgent)
    (agent ?event1 John-1)
    (instance ?event1 Giving)
    (instance ?event2 Giving)
    (instance ?salesperson CognitiveAgent)
    (attribute ?teller Position)
    (patient ?event1 ?card)
    (patient ?event2 ?code)
    (agent ?event2 ?customer)
    (customer ?customer ?salesperson)
    (destination ?event1 ?teller)
    (destination ?event2 ?teller)))"
},
{"text":"John gives the card to the teller who gives the customer the code.",
"kif":
"(exists (?card ?code ?customer ?event1 ?event2 ?salesperson ?teller)
  (and
    (attribute John-1 Male)
    (instance John-1 Human)
    (instance ?card BankCard)
    (instance ?code Text)
    (instance ?customer CognitiveAgent)
    (agent ?event1 John-1)
    (instance ?event1 Giving)
    (instance ?event2 Giving)
    (instance ?salesperson CognitiveAgent)
    (attribute ?teller Position)
    (patient ?event1 ?card)
    (patient ?event2 ?code)
    (destination ?event2 ?customer)
    (customer ?customer ?salesperson)
    (destination ?event1 ?teller)
    (agent ?event2 ?teller)))"
},
{"text":"A customer who is old inserts a credit card that is valid.",
"kif":
"(exists (?credit_card ?salesperson ?customer ?event)
  (and
    (attribute ?credit_card Valid)
    (instance ?customer CognitiveAgent)
    (instance ?salesperson CognitiveAgent)
    (customer ?customer ?salesperson)
    (attribute ?customer Old)
    (instance ?event Putting)
    (agent ?event ?customer)
    (instance ?credit_card CreditCard)
    (patient ?event ?credit_card)))"
},
{"text":"John's customer inserts a valid card.",
"kif":
"(exists (?card ?customer ?event)
  (and
    (attribute John-1 Male)
    (instance John-1 Human)
    (attribute ?card Valid)
    (instance ?card BankCard)
    (customer ?customer John-1)
    (instance ?event Putting)
    (patient ?event ?card)
    (agent ?event ?customer)))"
},
{"text":"John's customer inserts a valid card manually.",
"kif":
"(exists (?card ?customer ?event)
  (and
    (attribute John-1 Male)
    (instance John-1 Human)
    (attribute ?card Valid)
    (instance ?card BankCard)
    (customer ?customer John-1)
    (instance ?event Putting)
    (manner ?event Manually)
    (patient ?event ?card)
    (agent ?event ?customer)))"
},
{"text":"John's customer inserts a valid card of Mary manually into a slot X.",
"kif":
"(exists (?X ?card ?customer ?event)
  (and
    (attribute John-1 Male)
    (attribute Mary-1 Female)
    (instance John-1 Human)
    (instance Mary-1 Human)
    (instance ?X ATMSlot)
    (attribute ?card Valid)
    (instance ?card BankCard)
    (possesses Mary-1 ?card)
    (customer ?customer John-1)
    (instance ?event Putting)
    (manner ?event Manually)
    (destination ?event ?X)
    (patient ?event ?card)
    (agent ?event ?customer)))"
},
{"text":"John's customer who is new inserts a valid card of Mary manually into a slot X.",
"kif":
"(exists (?X ?card ?customer ?event)
  (and
    (attribute John-1 Male)
    (attribute Mary-1 Female)
    (instance John-1 Human)
    (instance Mary-1 Human)
    (instance ?X ATMSlot)
    (attribute ?card Valid)
    (instance ?card BankCard)
    (possesses Mary-1 ?card)
    (attribute ?customer New)
    (customer ?customer John-1)
    (instance ?event Putting)
    (manner ?event Manually)
    (destination ?event ?X)
    (patient ?event ?card)
    (agent ?event ?customer)))"
},
{"text":"John's customer inserts a valid card manually into a slot X.",
"kif":
"(exists (?X ?card ?customer ?event)
  (and
    (attribute John-1 Male)
    (instance John-1 Human)
    (instance ?X ATMSlot)
    (attribute ?card Valid)
    (instance ?card BankCard)
    (customer ?customer John-1)
    (instance ?event Putting)
    (manner ?event Manually)
    (destination ?event ?X)
    (patient ?event ?card)
    (agent ?event ?customer)))"
},
{"text":"The fast train arrives punctually.",
"kif":
"(exists (?event ?train)
  (and
    (instance ?event Arriving)
    (manner ?event Punctually)
    (attribute ?train Fast)
    (instance ?train Train)
    (patient ?event ?train)))"
},
{"text":"The fast train arrives punctually on this Monday.",
"kif":
"(exists (?Monday ?event ?train)
  (and
    (instance ?Monday Monday)
    (instance ?event Arriving)
    (manner ?event Punctually)
    (attribute ?train Fast)
    (instance ?train Train)
    (overlapsTemporally
      (WhenFn ?event) ?Monday)
    (patient ?event ?train)))"
},
{"text":"The fast train arrives punctually on this Monday in the station.",
"kif":
"(exists (?Monday ?event ?station ?train)
  (and
    (instance ?Monday Monday)
    (instance ?event Arriving)
    (manner ?event Punctually)
    (instance ?station CommercialBuilding)
    (attribute ?train Fast)
    (instance ?train Train)
    (overlapsTemporally
      (WhenFn ?event) ?Monday)
    (destination ?event ?station)
    (patient ?event ?train)))"
},
{"text":"A customer arrives on this Monday punctually.",
"kif":
"(exists (?salesperson ?customer ?event ?monday)
  (and
    (instance ?monday Monday)
    (instance ?customer CognitiveAgent)
    (instance ?salesperson CognitiveAgent)
    (customer ?customer ?salesperson)
    (instance ?event Motion)
    (agent ?event ?customer)
    (overlapsTemporally
      (WhenFn ?event) ?monday)
    (manner ?event Punctually)))"
},
{"text":"A customer arrives on the train.",
"kif":
"(exists (?customer ?event ?salesperson ?train)
  (and
    (instance ?customer CognitiveAgent)
    (instance ?event Arriving)
    (instance ?salesperson CognitiveAgent)
    (instance ?train Train)
    (agent ?event ?customer)
    (customer ?customer ?salesperson)
    (destination ?event ?train)))"
},
{"text":"A customer arrives on every Monday.",
"kif":
"(exists (?Monday ?customer ?event ?salesperson)
  (and
    (instance ?Monday Monday)
    (instance ?customer CognitiveAgent)
    (instance ?event Arriving)
    (instance ?salesperson CognitiveAgent)
    (overlapsTemporally
      (WhenFn ?event) ?Monday)
    (agent ?event ?customer)
    (customer ?customer ?salesperson)))"
},
{"text":"A customer enters a code manually.",
"kif":
"(exists (?code ?salesperson ?customer ?event)
  (and
    (instance ?customer CognitiveAgent)
    (instance ?salesperson CognitiveAgent)
    (customer ?customer ?salesperson)
    (instance ?event Motion)
    (agent ?event ?customer)
    (instance ?code Text)
    (patient ?event ?code)
    (manner ?event Manually)))"
},
{"text":"The train arrives in the station.",
"kif":
"(exists (?event ?station ?train)
  (and
    (instance ?event Arriving)
    (instance ?station CommercialBuilding)
    (instance ?train Train)
    (destination ?event ?station)
    (patient ?event ?train)))"
},
{"text":"The customer who inserts a card slowly enters a code.",
"kif":
"(exists (?card ?code ?customer ?event1 ?event2 ?salesperson)
  (and
    (instance ?card BankCard)
    (instance ?code Text)
    (instance ?customer CognitiveAgent)
    (instance ?event1 Putting)
    (manner ?event1 Slowly)
    (instance ?event2 Motion)
    (instance ?salesperson CognitiveAgent)
    (patient ?event1 ?card)
    (patient ?event2 ?code)
    (agent ?event1 ?customer)
    (agent ?event2 ?customer)
    (customer ?customer ?salesperson)))"
},
{"text":"The customer inserts a card slowly.",
"kif":
"(exists (?card ?salesperson ?customer ?event)
  (and
    (instance ?customer CognitiveAgent)
    (instance ?salesperson CognitiveAgent)
    (customer ?customer ?salesperson)
    (instance ?event Putting)
    (agent ?event ?customer)
    (instance ?card BankCard)
    (patient ?event ?card)
    (manner ?event Slowly)))"
},
{"text":"John uses the credit card correctly.",
"kif":
"(exists (?credit_card ?event)
  (and
    (uses ?credit_card John-1)
    (instance ?event IntentionalProcess)
    (attribute John-1 Male)
    (instance John-1 Human)
    (agent ?event John-1)
    (instance ?credit_card CreditCard)
    (patient ?event ?credit_card)
    (manner ?event Correctly)))"
},
{"text":"A dog is a mammal.",
"kif":
"(forall (?dog)
  (=>
    (instance ?dog Canine)
    (instance ?dog Mammal)))"
},
{"text":"John enters the bank.",
"kif":
"(exists (?bank ?event)
  (and
    (attribute John-1 Male)
    (instance John-1 Human)
    (instance ?bank Bank-FinancialOrganization)
    (agent ?event John-1)
    (instance ?event Motion)
    (patient ?event ?bank)))"
},
{"text":"The Zulus attack the boxes.",
"kif":
"(exists (?Zulu ?box ?event)
  (and
    (member ?Zulu EthnicGroup)
    (instance ?box Box)
    (instance ?event ViolentContest)
    (agent ?event ?Zulu)
    (patient ?event ?box)))"
},
{"text":"Apples are fruit.",
"kif":
"(=>
  (instance ?apple Apple)
  (instance ?apple FruitOrVegetable))"
},
{"text":"Trees are green.",
"kif":
"(=>
  (instance ?tree Tree)
  (attribute ?tree Green))"
},
{"text":"The boy gave the girl a book.",
"kif":
"(exists (?book ?boy ?event ?girl)
  (and
    (instance ?book Book)
    (attribute ?boy Male)
    (instance ?boy Human)
    (instance ?event Giving)
    (attribute ?girl Female)
    (instance ?girl Human)
    (instance ?girl NotFullyFormed)
    (instance ?boy NotFullyFormed)
    (patient ?event ?book)
    (agent ?event ?boy)))"
},
{"text":"The car is in the garage.",
"kif":
"(exists (?garage ?car)
  (and
    (located ?car ?garage)
    (instance ?garage Garage)
    (instance ?car Automobile)))"
},
{"text":"The dog runs.",
"kif":
"(exists (?dog ?event)
  (and
    (instance ?dog Canine)
    (instance ?event Walking)
    (agent ?event ?dog)))"
},
{"text":"The boy ate the fish.",
"kif":
"(exists (?boy ?event ?fish)
  (and
    (attribute ?boy Male)
    (instance ?boy Human)
    (instance ?boy NotFullyFormed)
    (instance ?event Eating)
    (instance ?fish Fish)
    (agent ?event ?boy)
    (patient ?event ?fish)))"
},
{"text":"Tom gives the card to Sarah.",
"kif":
"(exists (?card ?event)
  (and
    (instance ?event Giving)
    (attribute Tom-1 Male)
    (instance Tom-1 Human)
    (agent ?event Tom-1)
    (instance ?card BankCard)
    (patient ?event ?card)
    (attribute Sarah-1 Female)
    (instance Sarah-1 Human)
    (destination ?event Sarah-1)))"
},
{"text":"A carnivore is a large animal.",
"kif":
"(forall (?carnivore)
  (=>
    (instance ?carnivore Carnivore)
    (and
      (attribute ?carnivore Large)
      (instance ?carnivore Animal))))"
},
{"text":"John is the president of the United States.",
"kif":
"(exists (?president)
  (and
    (attribute John-1 Male)
    (instance John-1 Human)
    (occupiesPosition John-1 President UnitedStates)))"
},
{"text":"Srini travels to the Sudan.",
"kif":
"(exists (?event)
  (and
    (instance Srini Human)
    (agent ?event Srini)
    (destination ?event Sudan)
    (instance ?event Transportation)))"
},
{"text":"Is the banker a man?",
"kif":
"(exists (?banker)
  (and
    (attribute ?banker Banker)
    (instance ?banker Man)))"
},
{"text":"Is the dog red?",
"kif":
"(exists (?dog)
  (and
    (attribute ?dog Red)
    (instance ?dog Canine)))"
},
{"text":"Is John's dog the most expensive dog?",
"kif":
"(exists (?dog)
  (and
    (attribute John-1 Male)
    (forall (?X)
      (=>
        (and
          (instance ?X Canine)
          (not
            (equal ?X ?dog)))
        (and
          (greaterThan ?val1 ?val2)
          (monetaryValue ?dog ?val1)
          (monetaryValue ?X ?val2))))
    (instance John-1 Human)
    (instance ?dog Canine)
    (possesses John-1 ?dog)))"
},
{"text":"Is John's dog more expensive than Mary's dog?",
"kif":
"(exists (?dog1 ?dog2)
  (and
    (attribute John-1 Male)
    (attribute Mary-1 Female)
    (greaterThan ?val1 ?val2)
    (monetaryValue ?dog1 ?val1)
    (monetaryValue ?dog2 ?val2)
    (instance John-1 Human)
    (instance Mary-1 Human)
    (instance ?dog1 Canine)
    (possesses John-1 ?dog1)
    (instance ?dog2 Canine)
    (possesses Mary-1 ?dog2)))"
},
{"text":"Is John's dog different from Mary's dog?",
"kif":
"(exists (?dog1 ?dog2)
  (and
    (attribute John-1 Male)
    (attribute Mary-1 Female)
    (instance John-1 Human)
    (instance Mary-1 Human)
    (not
      (equal ?dog1 ?dog2))
    (instance ?dog1 Canine)
    (possesses John-1 ?dog1)
    (instance ?dog2 Canine)
    (possesses Mary-1 ?dog2)))"
},
{"text":"Does John breathe?",
"kif":
"(exists (?event)
  (and
    (instance ?event Breathing)
    (attribute John-1 Male)
    (instance John-1 Human)
    (agent ?event John-1)))"
},
{"text":"Does Mary give John a book?",
"kif":
"(exists (?book ?event)
  (and
    (instance ?event Giving)
    (attribute Mary-1 Female)
    (instance Mary-1 Human)
    (agent ?event Mary-1)
    (instance ?book Book)
    (patient ?event ?book)
    (attribute John-1 Male)
    (instance John-1 Human)
    (destination ?event John-1)))"
},
{"text":"Does Mary give a book to John?",
"kif":
"(exists (?book ?event)
  (and
    (instance ?event Giving)
    (attribute Mary-1 Female)
    (instance Mary-1 Human)
    (agent ?event Mary-1)
    (instance ?book Book)
    (patient ?event ?book)
    (attribute John-1 Male)
    (instance John-1 Human)
    (destination ?event John-1)))"
},
{"text":"Does John beat Mr Miller?",
"kif":
"(exists (?event)
  (and
    (instance ?event Impacting)
    (attribute John-1 Male)
    (instance John-1 Human)
    (agent ?event John-1)
    (attribute MrMiller Male)
    (attribute MrMiller FullyFormed)
    (instance MrMiller Human)
    (names MrMiller \"MrMiller\")
    (patient ?event MrMiller)))"
},
{"text":"What is valid?",
"kif":
"(and
  (attribute ?what Valid)
  (instance ?what Physical))"
},
{"text":"Who is the teller?",
"kif":
"(and
  (attribute ?who Position)
  (instance ?who Human))"
},
{"text":"Who is the baker?",
"kif":
"(and
  (attribute ?who Position)
  (instance ?who Human))"
},
{"text":"Who is the representative of the company?",
"kif":
"(exists (?company)
  (and
    (instance ?company Corporation)
    (attribute ?who SocialRole)
    (instance ?who Human)
    (operator ?who ?company)))"
},
{"text":"What is in the slot?",
"kif":
"(exists (?slot)
  (and
    (instance ?slot ATMSlot)
    (located ?what ?slot)))"
},
{"text":"Who enters what?",
"kif":
"(exists (?event)
  (and
    (instance ?event Motion)
    (instance ?who Human)
    (agent ?event ?who)
    (patient ?event ?what)))"
},
{"text":"Which customer enters a card?",
"kif":
"(exists (?card ?salesperson ?event)
  (and
    (instance ?customer CognitiveAgent)
    (instance ?salesperson CognitiveAgent)
    (customer ?customer ?salesperson)
    (instance ?event Motion)
    (agent ?event ?customer)
    (instance ?card BankCard)
    (patient ?event ?card)))"
},
{"text":"Who enters a card?",
"kif":
"(exists (?card ?event)
  (and
    (instance ?event Motion)
    (instance ?who Human)
    (agent ?event ?who)
    (instance ?card BankCard)
    (patient ?event ?card)))"
},
{"text":"Who does Mary beat?",
"kif":
"(exists (?event)
  (and
    (instance ?event Impacting)
    (attribute Mary-1 Female)
    (instance Mary-1 Human)
    (agent ?event Mary-1)
    (patient ?event ?who)))"
},
{"text":"What does the dog eat?",
"kif":
"(exists (?dog ?event)
  (and
    (instance ?event Eating)
    (instance ?dog Canine)
    (agent ?event ?dog)
    (patient ?event ?what)))"
},
{"text":"Who does John give a card to?",
"kif":
"(exists (?card ?event)
  (and
    (instance ?event Giving)
    (attribute John-1 Male)
    (instance John-1 Human)
    (agent ?event John-1)
    (instance ?card BankCard)
    (patient ?event ?card)
    (destination ?event ?who)))"
},
{"text":"What does Mary give to John?",
"kif":
"(exists (?event)
  (and
    (instance ?event Giving)
    (attribute Mary-1 Female)
    (instance Mary-1 Human)
    (agent ?event Mary-1)
    (patient ?event ?what)
    (attribute John-1 Male)
    (instance John-1 Human)
    (destination ?event John-1)))"
},
{"text":"With whom does John enter the room?",
"kif":
"(exists (?room ?event)
  (and
    (instance ?event Motion)
    (attribute John-1 Male)
    (instance John-1 Human)
    (agent ?event John-1)
    (instance ?room Room)
    (destination ?event ?room)
    (agent ?event ?with_whom)))"
},
{"text":"Who does John enter the room with?",
"kif":
"(exists (?room ?event)
  (and
    (instance ?event Motion)
    (attribute John-1 Male)
    (instance John-1 Human)
    (agent ?event John-1)
    (instance ?room Room)
    (destination ?event ?room)
    (agent ?event ?with_whom)) )"
},
{"text":"What does John open the door with?",
"kif":
"(exists (?door ?event)
  (and
    (instance ?event Opening)
    (attribute John-1 Male)
    (instance John-1 Human)
    (instrument ?event ?what_with)
    (agent ?event John-1)
    (instance ?door Door)
    (patient ?event ?door) ))"
},
{"text":"With what does John open the door?",
"kif":
"(exists (?door ?event)
  (and
    (instance ?event Opening)
    (attribute John-1 Male)
    (instance John-1 Human)
    (instrument ?event ?what_with)
    (agent ?event John-1)
    (instance ?door Door)
    (patient ?event ?door) ))"
},
{"text":"From where does the train arrive?",
"kif":
"(exists (?event ?train)
  (and
    (instance ?event Arriving)
    (instance ?train Train)
    (origin ?event ?from_where)
    (patient ?event ?train)))"
},
{"text":"Where does the train arrive from?",
"kif":
"(exists (?train ?event)
  (and
    (instance ?event Arriving)
    (instance ?train Train)
    (origin ?event ?where_from)
    (patient ?event ?train) ))"
},
{"text":"Where does the machine move to?",
"kif":
"(exists (?machine ?event)
  (and
    (instance ?event Transportation)
    (instance ?machine Device)
    (destination ?event ?where_to)
    (patient ?event ?machine) ))"
},
{"text":"Where does John insert the card into?",
"kif":
"(exists (?card ?event)
  (and
    (instance ?event Putting)
    (attribute John-1 Male)
    (instance John-1 Human)
    (destination ?event ?where_into)
    (agent ?event John-1)
    (instance ?card BankCard)
    (patient ?event ?card) ))"
},
{"text":"With whom does the employee enter the room?",
"kif":
"(exists (?room ?OccupationalRole ?employee ?event)
  (and
    (instance ?event Motion)
    (attribute ?employee ?OccupationalRole)
    (instance ?OccupationalRole OccupationalRole)
    (agent ?event ?employee)
    (instance ?room Room)
    (destination ?event ?room)
    (agent ?event ?with_whom) ))"
},
{"text":"How often does the milkman come?",
"kif":
"(exists (?event ?milkman)
  (and
    (instance ?event Arriving)
    (attribute ?milkman OccupationalRole)
    (frequency ?event ?how_often)
    (agent ?event ?milkman)))"
},
{"text":"How long does the jet fly?",
"kif":
"(exists (?jet ?event)
  (and
    (instance ?event Flying)
    (instance ?jet JetAirplane)
    (duration
      (WhenFn ?event) ?how_long)
    (patient ?event ?jet)))"
},
{"text":"Since when does the employee work?",
"kif":
"(exists (?employee ?event ?employer)
  (and
    (employs ?employer ?employee)
    (instance ?event Working)
    (equal
      (BeginFn
        (WhenFn ?event)) ?since_when)
    (agent ?event ?employee)))"
},
{"text":"How does the dog run?",
"kif":
"(exists (?dog ?event)
  (and
    (instance ?event Walking)
    (instance ?dog Canine)
    (manner ?event ?how)
    (agent ?event ?dog) ))"
},
{"text":"When does the man arrive?",
"kif":
"(exists (?event ?man)
  (and
    (instance ?event Arriving)
    (instance ?man Man)
    (equal
      (BeginFn
        (WhenFn ?event)) ?when)
    (agent ?event ?man)))"
},
{"text":"Where does John work?",
"kif":
"(exists (?event)
  (and
    (attribute John-1 Male)
    (instance John-1 Human)
    (agent ?event John-1)
    (instance ?event Works)
    (located ?event ?where)))"
},
{"text":"When is the dinner?",
"kif":
"(exists (?dinner)
  (and
    (equal
      (BeginFn
        (WhenFn ?dinner)) ?when)
    (instance ?dinner Eating) ))"
},
{"text":"How long is the dinner?",
"kif":
"(exists (?dinner)
  (and
    (instance ?dinner Eating)
    (duration
      (WhenFn ?dinner) ?how_long)))"
},
{"text":"John owns a book. He likes it.",
"kif":
"(exists (?book)
  (and
    (attribute John-1 Male)
    (instance John-1 Human)
    (enjoys John-1 ?book)
    (instance ?book Book)
    (possesses John-1 ?book)))"
},
{"text":"Some man sees some dog.",
"kif":
"(exists (?dog ?event ?man)
  (and
    (instance ?dog Canine)
    (instance ?event Seeing)
    (instance ?man Man)
    (patient ?event ?dog)
    (experiencer ?event ?man)))"
},
{"text":"Every man sees a dog.",
"kif":
"(forall (?man)
  (=>
    (instance ?man Man)
    (exists (?dog ?event)
      (and
        (instance ?dog Canine)
        (instance ?event Seeing)
        (patient ?event ?dog)
        (experiencer ?event ?man)))))"
},
{"text":"Some man sees every dog.",
"kif":
"(forall (?dog)
  (=>
    (instance ?dog Canine)
    (exists (?event ?man)
      (and
        (instance ?event Seeing)
        (instance ?man Man)
        (patient ?event ?dog)
        (experiencer ?event ?man)))))"
},
{"text":"Every man sees every dog.",
"kif":
"(forall (?man)
  (=>
    (instance ?man Man)
    (forall (?dog)
      (=>
        (instance ?dog Canine)
        (exists (?event)
          (and
            (instance ?event Seeing)
            (patient ?event ?dog)
            (experiencer ?event ?man)))))))"
},
{"text":"If John sees a hamburger then he wants it.",
"kif":
"(forall (?event ?hamburger)
  (=>
    (and
      (attribute John-1 Male)
      (instance John-1 Human)
      (experiencer ?event John-1)
      (instance ?event Seeing)
      (instance ?hamburger Food)
      (patient ?event ?hamburger))
    (and
      (attribute John-1 Male)
      (instance John-1 Human)
      (instance ?hamburger Object)
      (wants John-1 ?hamburger))))"
},
{"text":"If John travels then he walks.",
"kif":
"(forall (?event1)
  (=>
    (and
      (attribute John-1 Male)
      (instance John-1 Human)
      (agent ?event1 John-1)
      (instance ?event1 Transportation))
    (exists (?event2)
      (and
        (attribute John-1 Male)
        (instance John-1 Human)
        (agent ?event2 John-1)
        (instance ?event2 Walking)))))"
},
{"text":"If Mary gives John a book then he reads it.",
"kif":
"(forall (?book ?event1)
  (=>
    (and
      (attribute John-1 Male)
      (attribute Mary-1 Female)
      (instance John-1 Human)
      (instance Mary-1 Human)
      (instance ?book Book)
      (agent ?event1 Mary-1)
      (destination ?event1 John-1)
      (instance ?event1 Giving)
      (patient ?event1 ?book))
    (exists (?event2)
      (and
        (attribute John-1 Male)
        (instance John-1 Human)
        (instance ?book Object)
        (agent ?event2 John-1)
        (instance ?event2 Reading)
        (patient ?event2 ?book)))))"
},
{"text":"John eats every hamburger that he sees.",
"kif":
"(forall (?event1 ?hamburger)
  (=>
    (and
      (attribute John-1 Male)
      (instance John-1 Human)
      (experiencer ?event1 John-1)
      (instance ?event1 Seeing)
      (instance ?hamburger Food)
      (patient ?event1 ?hamburger))
    (exists (?event2)
      (and
        (attribute John-1 Male)
        (instance John-1 Human)
        (agent ?event2 John-1)
        (instance ?event2 Eating)
        (patient ?event2 ?hamburger)))))"
},
{"text":"John observes a hamburger at a store.",
"kif":
"(exists (?event ?hamburger ?store)
  (and
    (attribute John-1 Male)
    (instance John-1 Human)
    (experiencer ?event John-1)
    (instance ?event Discovering)
    (instance ?hamburger Food)
    (instance ?store RetailStore)
    (patient ?event ?hamburger)
    (destination ?event ?store)))"
},
{"text":"The terrorist attacks the embassy.",
"kif":
"(exists (?embassy ?event ?terrorist)
  (and
    (instance ?embassy EmbassyBuilding)
    (instance ?event Attack)
    (attribute ?terrorist Terrorist)
    (patient ?event ?embassy)
    (agent ?event ?terrorist)))"
},
{"text":"The door shatters.",
"kif":
"(exists (?door ?event)
  (and
    (instance ?door Door)
    (instance ?event Destruction)
    (patient ?event ?door)))"
},
{"text":"The ambassador gives Jacques Chirac a letter. He reads it.",
"kif":
"(exists (?ambassador ?event1 ?event2 ?letter)
  (and
    (attribute JacquesChirac FullyFormed)
    (attribute JacquesChirac Male)
    (instance JacquesChirac Human)
    (attribute ?ambassador Ambassador)
    (destination ?event1 JacquesChirac)
    (instance ?event1 Giving)
    (agent ?event2 JacquesChirac)
    (instance ?event2 Reading)
    (instance ?letter Letter)
    (agent ?event1 ?ambassador)
    (patient ?event1 ?letter)
    (patient ?event2 ?letter)))"
},
{"text":"The embassy guard breaks John's nose.",
"kif":
"(exists (?embassy_guard ?event ?nose)
  (and
    (attribute John-1 Male)
    (instance John-1 Human)
    (instance ?embassy_guard OccupationalRole)
    (instance ?event IntentionalProcess)
    (instance ?nose Nose)
    (part ?nose John-1)
    (agent ?event ?embassy_guard)
    (patient ?event ?nose)))"
},
{"text":"John's father punches the guard.",
"kif":
"(exists (?event ?father ?guard)
  (and
    (attribute John-1 Male)
    (instance John-1 Human)
    (instance ?event Impacting)
    (father ?father John-1)
    (attribute ?guard Position)
    (agent ?event ?father)
    (patient ?event ?guard)))"
},
{"text":"John's dog bites the ambassador.",
"kif":
"(exists (?ambassador ?dog ?event)
  (and
    (attribute John-1 Male)
    (instance John-1 Human)
    (attribute ?ambassador Ambassador)
    (instance ?dog Canine)
    (possesses John-1 ?dog)
    (instance ?event Biting)
    (patient ?event ?ambassador)
    (agent ?event ?dog)))"
},
{"text":"John's passport hits the floor.",
"kif":
"(exists (?event ?floor ?passport)
  (and
    (attribute John-1 Male)
    (instance John-1 Human)
    (instance ?event Impelling)
    (instance ?floor Floor)
    (instance ?passport Certificate)
    (possesses John-1 ?passport)
    (patient ?event ?floor)
    (agent ?event ?passport)))"
},
{"text":"Is an ambassador a diplomatic agent?",
"kif":
"(forall (?ambassador)
  (=>
    (attribute ?ambassador Ambassador)
    (attribute ?ambassador DiplomaticAgent)))"
},
{"text":"Is a general a diplomatic agent?",
"kif":
"(forall (?general)
  (=>
    (attribute ?general MilitaryGeneral)
    (attribute ?general DiplomaticAgent)))"
},
{"text":"Is Afghanistan a continent?",
"kif":
"(instance Afghanistan Continent)"
},
{"text":"Does Asia include Afghanistan?",
"kif":
"(part Afghanistan Asia)"
},
{"text":"Does Afghanistan include Asia?",
"kif":
"(part Asia Afghanistan)"
},
{"text":"If a country has an ambassador to the United States then it has diplomatic relations with the United States.",
"kif":
"(=>
  (and
    (attribute ?ambassador Ambassador)
    (instance ?country Nation)
    (representativeAgentToAgent ?country ?ambassador UnitedStates))
  (diplomaticRelations ?country UnitedStates))"
},
{"text":"France has an ambassador to the United States.",
"kif":
"(exists (?ambassador)
  (and
    (attribute ?ambassador Ambassador)
    (representativeAgentToAgent France ?ambassador UnitedStates)))"
},
{"text":"Does France have diplomatic relations with the United States?",
"kif":
"(diplomaticRelations France UnitedStates)"
},
{"text":"If the European Monetary Union includes a country then it trades in the euro.",
"kif":
"(forall (?country)
  (=>
    (and
      (instance ?country Nation)
      (part ?country EuropeanMonetaryUnion))
    (exists (?euro ?event)
      (and
        (instance ?euro EuroDollar)
        (instance ?event ChangeOfPossession)
        (agent ?event ?country)
        (patient ?event ?euro)))))"
},
{"text":"Britain does not trade in the euro.",
"kif":
"(not
  (exists (?euro ?event)
    (and
      (instance ?euro EuroDollar)
      (agent ?event UnitedKingdomOfGreatBritainAndNorthernIreland)
      (instance ?event ChangeOfPossession)
      (patient ?event ?euro))))"
},
{"text":"Does the European Monetary Union include Britain?",
"kif":
"(part UnitedKingdomOfGreatBritainAndNorthernIreland EuropeanMonetaryUnion)"
},
{"text":"If NATO includes a country then it has an armed force.",
"kif":
"(forall (?country)
  (=>
    (and
      (instance ?country Nation)
      (part ?country NorthAtlanticTreatyOrganization))
    (exists (?armed_force)
      (and
        (instance ?armed_force Organization)
        (possesses ?country ?armed_force)))))"
},
{"text":"NATO includes France.",
"kif":
"(member France NorthAtlanticTreatyOrganization)"
},
{"text":"The European Monetary Union includes some country that NATO includes.",
"kif":
"(exists (?country)
  (and
    (instance ?country Nation)
    (part ?country EuropeanMonetaryUnion)
    (part ?country NorthAtlanticTreatyOrganization)))"
},
{"text":"If the European Monetary Union includes some country then Europe includes it.",
"kif":
"(forall (?country)
  (=>
    (and
      (instance ?country Nation)
      (part ?country EuropeanMonetaryUnion))
    (and
      (instance ?country Object)
      (part ?country Europe))))"
},
{"text":"Does Europe include some country that NATO includes?",
"kif":
"(exists (?country)
  (and
    (instance ?country Nation)
    (part ?country Europe)
    (part ?country NorthAtlanticTreatyOrganization)))"
},
{"text":"Does Iraq have diplomatic relations with the United States?",
"kif":
"(diplomaticRelations Iraq UnitedStates)"
},
{"text":"Does Afghanistan provide controlled substances?",
"kif":
"(exists (?controlled_substances ?event)
  (and
    (agent ?event Afghanistan)
    (instance ?event ChangeOfPossession)
    (instance ?controlled_substances ControlledSubstance)
    (patient ?event ?controlled_substances)))"
},
{"text":"Who leads Afghanistan?",
"kif":
"(occupiesPosition ?who Leader Afghanistan)"
},
{"text":"Who is the ruler of the Sudan?",
"kif":
"(occupiesPosition ?who Leader Sudan)"
},
{"text":"Does Afghanistan export jewelry?",
"kif":
"(exists (?event ?jewelry)
  (and
    (agent ?event Afghanistan)
    (instance ?event Exporting)
    (instance ?jewelry Jewelry)
    (patient ?event ?jewelry)))"
},
{"text":"Is Afghanistan an island?",
"kif":
"(instance Afghanistan Island)"
},
{"text":"Which country is Afghanistan's neighboring country that borders the Persian Gulf?",
"kif":
"(and
  (meetsSpatially ?neighboring_country PersianGulf)
  (instance ?neighboring_country Nation)
  (meetsSpatially Afghanistan ?neighboring_country))"
},
{"text":"C/1-82 FA fires FASCAM at the T-80U.",
"kif":
"(exists (?FASCAM_rounds ?T-80U_main_battle_tank ?event)
  (and
    (instance ?FASCAM_rounds FASCAM-ArtilleryRounds)
    (instance ?T-80U_main_battle_tank T-80U-MainBattleTank)
    (agent ?event C-1-82-FA)
    (instance ?event Shooting)
    (patient ?event ?FASCAM_rounds)
    (destination ?event ?T-80U_main_battle_tank)))"
},
{"text":"Where is Afghanistan?",
"kif":
"(and
  (instance Afghanistan Nation)
  (located Afghanistan ?where))"
},
{"text":"Where is YoungsCompany?",
"kif":
"(and
  (instance YoungsCompany MilitaryOrganization)
  (located YoungsCompany ?where))"
},
{"text":"What is OperationSecurityForFoodDistribution?",
"kif":
"(instance OperationSecurityForFoodDistribution ?what)"
},
{"text":"Who is Young?",
"kif":
"(and
  (instance Young Human)
  (attribute Young ?who))"
},
{"text":"Who is the leader of YoungsCompany?",
"kif":
"(and
  (instance YoungsCompany MilitaryOrganization)
  (instance ?who Human)
  (leader ?who YoungsCompany))"
},
{"text":"Young is the leader of YoungsCompany.",
"kif":
"(and
  (instance Young Human)
  (instance YoungsCompany MilitaryOrganization)
  (leader Young YoungsCompany))"
},
{"text":"Young leads YoungsCompany.",
"kif":
"(exists (?event)
  (and
    (instance Young Human)
    (instance YoungsCompany MilitaryOrganization)
    (agent ?event Young)
    (instance ?event Guiding)
    (patient ?event YoungsCompany)))"
},
{"text":"Perez is a member of YoungsCompany.",
"kif":
"(and
  (instance Perez Human)
  (instance YoungsCompany MilitaryOrganization)
  (member Perez YoungsCompany))"
},
{"text":"what is the goal of OperationSecurityForFoodDistribution?",
"kif":
"(destination OperationSecurityForFoodDistribution ?what)"
},
{"text":"What is OperationSecurityForFoodDistribution's goal?",
"kif":
"(destination OperationSecurityForFoodDistribution ?what)"
},
{"text":"What is the purpose of an ATM?",
"kif":
"(exists (?ATM)
  (and
    (instance ?ATM Device)
    (hasPurpose ?ATM ?what)))"
},
{"text":"What is an ATM's purpose?",
"kif":
"(exists (?ATM)
  (and
    (instance ?ATM Device)
    (hasPurpose ?ATM ?what)))"
},
{"text":"What is Young?",
"kif":
"(and
  (attribute Young ?what)
  (instance Young Human))"
},
{"text":"Bob is the publisher of the book.",
"kif":
"(exists (?book)
  (and
    (attribute Robert-1 Male)
    (attribute Robert-1 Position)
    (instance Robert-1 Human)
    (instance ?book Book)
    (publishes Robert-1 ?book)))"
},
{"text":"What is the conclusion of the book?",
"kif":
"(conclusion Book ?what)"
},
{"text":"What is Perez's consideration?",
"kif":
"(considers Perez ?what)"
},
{"text":"What is the cause of French Revolution?",
"kif":
"(causes ?what French_Revolution)"
},
{"text":"What is the result of French Revolution?",
"kif":
"(result French_Revolution ?what)"
},
{"text":"What is Perez's skill?",
"kif":
"(hasSkill ?what Perez)"
},
{"text":"What is the resource of YoungsCompany?",
"kif":
"(resource YoungsCompany ?what)"
},
{"text":"What is Omar's belief?",
"kif":
"(believes Omar ?what)"
},
{"text":"What is French Revolution?",
"kif":
"(instance French_Revolution ?what)"
},
{"text":"Bob is a citizen of the United States.",
"kif":
"(and
  (attribute Robert-1 Male)
  (citizen Robert-1 UnitedStates)
  (instance Robert-1 Human))"
},
{"text":"Omar is a warlord.",
"kif":
"(and
  (attribute Omar Position)
  (instance Omar Human))"
},
{"text":"Omar is a citizen of Afghanistan.",
"kif":
"(and
  (citizen Omar Afghanistan)
  (instance Omar Human))"
},
{"text":"Young is a captain.",
"kif":
"(and
  (attribute Young Captain)
  (instance Young Human))"
},
{"text":"Who is the author of the book?",
"kif":
"(exists (?book)
  (and
    (instance ?book Book)
    (instance ?who Human)
    (authors ?who ?book)))"
},
{"text":"Who is Bob?",
"kif":
"(and
  (instance Robert-1 Human)
  (attribute Robert-1 ?who))"
},
{"text":"Homer is the author of Iliad.",
"kif":
"(and
  (authors Homer Iliad)
  (instance Homer Human)
  (instance Iliad Text))"
},
{"text":"Bob is the author of a book. He plays a record.",
"kif":
"(exists (?book ?event ?record)
  (and
    (attribute Robert-1 Male)
    (instance Robert-1 Human)
    (authors Robert-1 ?book)
    (instance ?book Book)
    (agent ?event Robert-1)
    (instance ?event IntentionalProcess)
    (instance ?record Device)
    (patient ?event ?record)))"
},
{"text":"What is the conclusion of Odyssey?",
"kif":
"(conclusion ?what Odyssey)"
},
{"text":"Who is the author of Odyssey?",
"kif":
"(and
  (instance Odyssey Text)
  (authors ?who Odyssey)
  (instance ?who Human))"
},
{"text":"Is Homer the author of Iliad?",
"kif":
"(and
  (authors Homer Iliad)
  (instance Homer Human)
  (instance Iliad Text))"
},
{"text":"Who writes Iliad?",
"kif":
"(and
  (instance Iliad Text)
  (authors ?who Iliad)
  (instance ?who Human))"
},
{"text":"Who authors Iliad?",
"kif":
"(and
  (instance Iliad Text)
  (authors ?who Iliad)
  (instance ?who Human))"
},
{"text":"An arrow penetrates the wood.",
"kif":
"(exists (?arrow ?wood)
  (and
    (instance ?arrow ArrowIcon)
    (instance ?wood Wood)
    (penetrates ?arrow ?wood)))"
},
{"text":"A window faces the door.",
"kif":
"(exists (?door ?window)
  (and
    (instance ?door Door)
    (instance ?window Window)
    (faces ?window ?door)))"
},
{"text":"A bedroom faces the beach.",
"kif":
"(exists (?beach ?bedroom)
  (and
    (instance ?beach ShoreArea)
    (instance ?bedroom Bedroom)
    (faces ?bedroom ?beach)))"
},
{"text":"The author faces a challenge.",
"kif":
"(exists (?author ?challenge)
  (and
    (attribute ?challenge SubjectiveAssessmentAttribute)
    (faces ?author ?challenge)))"
},
{"text":"The candidate faces the conflict.",
"kif":
"(exists (?candidate ?conflict)
  (and
    (attribute ?candidate Position)
    (instance ?conflict Contest)
    (faces ?candidate ?conflict)))"
},
{"text":"A window faces the street.",
"kif":
"(exists (?street ?window)
  (and
    (instance ?street Roadway)
    (instance ?window Window)
    (faces ?window ?street)))"
},
{"text":"Bob does not read Iliad.",
"kif":
"(not
  (exists (?event)
    (and
      (attribute Robert-1 Male)
      (instance Iliad Text)
      (instance Robert-1 Human)
      (agent ?event Robert-1)
      (instance ?event Reading)
      (patient ?event Iliad))))"
},
{"text":"Bob does not write Iliad.",
"kif":
"(and
  (attribute Robert-1 Male)
  (instance Iliad Text)
  (instance Robert-1 Human)
  (not
    (authors Robert-1 Iliad)))"
},
{"text":"Bob does not give the book to Mary.",
"kif":
"(not
  (exists (?book ?event)
    (and
      (attribute Mary-1 Female)
      (attribute Robert-1 Male)
      (instance Mary-1 Human)
      (instance Robert-1 Human)
      (instance ?book Book)
      (agent ?event Robert-1)
      (destination ?event Mary-1)
      (instance ?event Giving)
      (patient ?event ?book))))"
},
{"text":"Bob is not the author of Iliad.",
"kif":
"(and
  (attribute Robert-1 Male)
  (instance Iliad Text)
  (instance Robert-1 Human)
  (not
    (authors Robert-1 Iliad)))"
},
{"text":"Bob is not British.",
"kif":
"(and
  (attribute Robert-1 Male)
  (instance Robert-1 Human)
  (not
    (member Robert-1 British)))"
},
{"text":"Bob is not rich.",
"kif":
"(and
  (attribute Robert-1 Male)
  (instance Robert-1 Human)
  (not
    (attribute Robert-1 SubjectiveAssessmentAttribute)))"
},
{"text":"Bob is not older than Jim.",
"kif":
"(and
  (attribute James-1 Male)
  (attribute Robert-1 Male)
  (instance James-1 Human)
  (instance Robert-1 Human)
  (not
    (older Robert-1 James-1)))"
},
{"text":"Bob is not a customer of the bank.",
"kif":
"(exists (?bank)
  (and
    (attribute Robert-1 Male)
    (instance Robert-1 Human)
    (not
      (customer Robert-1 ?bank))
    (instance ?bank Bank-FinancialOrganization)))"
},
{"text":"A bird is not a mammal.",
"kif":
"(forall (?bird)
  (=>
    (instance ?bird Bird)
    (not
      (instance ?bird Mammal))))"
},
{"text":"Bob is not at the bank.",
"kif":
"(exists (?bank)
  (and
    (attribute Robert-1 Male)
    (instance Robert-1 Human)
    (not
      (located Robert-1 ?bank))
    (instance ?bank Bank-FinancialOrganization)))"
},
{"text":"A rifle's range is not 250 meters.",
"kif":
"(not
  (range Rifle
    (MeasureFn 250 Meter)))"
},
{"text":"The range of a rifle is not 250 meters.",
"kif":
"(not
  (range Rifle
    (MeasureFn 250 Meter)))"
},
{"text":"The briefcase is not different from the handbag.",
"kif":
"(exists (?briefcase ?handbag)
  (and
    (instance ?briefcase TravelContainer)
    (instance ?handbag Bag)
    (equal ?briefcase ?handbag)))"
},
{"text":"Who does not read Iliad?",
"kif":
"(not
  (exists (?event)
    (and
      (instance Iliad Text)
      (instance ?event Reading)
      (patient ?event Iliad)
      (instance ?who Human)
      (agent ?event ?who))))"
},
{"text":"Who does not eat avocado?",
"kif":
"(not
  (exists (?avocado ?event)
    (and
      (instance ?avocado Avocado)
      (instance ?event Eating)
      (instance ?who Human)
      (patient ?event ?avocado)
      (agent ?event ?who))))"
},
{"text":"Who does not own the book?",
"kif":
"(exists (?book)
  (and
    (not
      (possesses ?who ?book))
    (instance ?book Book)
    (instance ?who Human)))"
},
{"text":"What does not have an engine?",
"kif":
"(exists (?engine)
  (and
    (not
      (part ?engine ?what))
    (instance ?engine Machine)
    (instance ?what Physical)))"
},
{"text":"Who is not British?",
"kif":
"(and
  (not
    (member ?who British))
  (instance ?who Human))"
},
{"text":"What is not liquid?",
"kif":
"(and
  (not
    (attribute ?what Liquid))
  (instance ?what Physical))"
},
{"text":"Does not a bird fly?",
"kif":
"(not
  (=>
    (instance ?X Bird)
    (capability Flying agent ?X)))"
},
{"text":"Is not a bird a mammal?",
"kif":
"(forall (?bird)
  (=>
    (instance ?bird Bird)
    (not
      (instance ?bird Mammal))))"
},
{"text":"Who does not John give a card to?",
"kif":
"(not
  (exists (?card ?event)
    (and
      (attribute John-1 Male)
      (instance John-1 Human)
      (instance ?card BankCard)
      (agent ?event John-1)
      (instance ?event Giving)
      (patient ?event ?card)
      (destination ?event ?who))))"
},
{"text":"What does not Mary give to John?",
"kif":
"(not
  (exists (?event)
    (and
      (attribute John-1 Male)
      (attribute Mary-1 Female)
      (instance John-1 Human)
      (instance Mary-1 Human)
      (agent ?event Mary-1)
      (destination ?event John-1)
      (instance ?event Giving)
      (patient ?event ?what))))"
},
{"text":"Where does Bob not carry the card?",
"kif":
"(not
  (exists (?card ?event)
    (and
      (attribute Robert-1 Male)
      (instance Robert-1 Human)
      (instance ?card BankCard)
      (agent ?event Robert-1)
      (instance ?event Transportation)
      (patient ?event ?card)
      (located ?event ?where))))"
},
{"text":"Where does a dog not bark?",
"kif":
"(not
  (exists (?dog ?event)
    (and
      (instance ?dog Canine)
      (instance ?event Communication)
      (agent ?event ?dog)
      (located ?event ?where))))"
},
{"text":"When does the train not arrive?",
"kif":
"(not
  (exists (?event ?train)
    (and
      (instance ?event Arriving)
      (instance ?train Train)
      (equal
        (BeginFn
          (WhenFn ?event)) ?when)
      (patient ?event ?train))))"
},
{"text":"When does the engine not work?",
"kif":
"(not
  (exists (?engine ?event)
    (and
      (instance ?engine Machine)
      (instance ?event Works)
      (equal
        (BeginFn
          (WhenFn ?event)) ?when)
      (patient ?event ?engine))))"
},
{"text":"When does a dog not bark?",
"kif":
"(not
  (exists (?dog ?event)
    (and
      (instance ?dog Canine)
      (instance ?event Communication)
      (equal
        (BeginFn
          (WhenFn ?event)) ?when)
      (agent ?event ?dog))))"
},
{"text":"How does Bob not remember the book?",
"kif":
"(not
  (exists (?book ?event)
    (and
      (attribute Robert-1 Male)
      (instance Robert-1 Human)
      (instance ?book Book)
      (agent ?event Robert-1)
      (instance ?event Remembering)
      (patient ?event ?book)
      (manner ?event ?how))))"
},
{"text":"How does a dog not bark?",
"kif":
"(not
  (exists (?dog ?event)
    (and
      (instance ?dog Canine)
      (instance ?event Communication)
      (agent ?event ?dog)
      (manner ?event ?how))))"
},
{"text":"Since when does Bob not read a book?",
"kif":
"(not
  (exists (?book ?event)
    (and
      (attribute Robert-1 Male)
      (instance Robert-1 Human)
      (instance ?book Book)
      (agent ?event Robert-1)
      (instance ?event Reading)
      (equal
        (BeginFn
          (WhenFn ?event)) ?since_when)
      (patient ?event ?book))))"
},
{"text":"How long does the train not arrive?",
"kif":
"(not
  (exists (?event ?train)
    (and
      (instance ?event Arriving)
      (duration
        (WhenFn ?event) ?how_long)
      (instance ?train Train)
      (patient ?event ?train))))"
},
{"text":"How long does the engine not work?",
"kif":
"(not
  (exists (?engine ?event)
    (and
      (instance ?engine Machine)
      (instance ?event Works)
      (duration
        (WhenFn ?event) ?how_long)
      (patient ?event ?engine))))"
},
{"text":"Until when does Bob not read the book?",
"kif":
"(not
  (exists (?book ?event)
    (and
      (attribute Robert-1 Male)
      (instance Robert-1 Human)
      (instance ?book Book)
      (agent ?event Robert-1)
      (instance ?event Reading)
      (equal
        (EndFn
          (WhenFn ?event)) ?until_when)
      (patient ?event ?book))))"
},
{"text":"How often does the engine not work?",
"kif":
"(not
  (exists (?engine ?event)
    (and
      (instance ?engine Machine)
      (instance ?event Works)
      (patient ?event ?engine)
      (frequency ?event ?how_often))))"
},
{"text":"From where does the man not arrive?",
"kif":
"(not
  (exists (?event ?man)
    (and
      (instance ?event Arriving)
      (instance ?man Man)
      (origin ?event ?from_where)
      (agent ?event ?man))))"
},
{"text":"Bob does not kick the cart.",
"kif":
"(not
  (exists (?bob ?kick ?cart)
    (and
      (instance ?cart Wagon)
      (instance ?kick Kicking)
      (instance ?bob Human)
      (attribute ?bob Male)
      (names ?bob \"Bob\")
      (agent ?kick ?bob)
      (patient ?kick ?cart))))"
},
{"text":"Bob does not write the book.",
"kif":
"(not
  (exists (?bob ?book)
    (and
      (instance ?bob Human)
      (attribute ?bob Male)
      (instance ?book Book)
      (names ?bob \"Bob\")
      (authors ?bob ?book))))"
},
{"text":"Bob does not write the book on Tuesday in the bathtub.",
"kif":
"(not
  (exists (?bob ?book ?writing ?bathtub ?tuesday)
    (and
      (instance ?bob Human)
      (attribute ?bob Male)
      (instance ?book Book)
      (instance ?writing Writing)
      (agent ?writing ?bob)
      (patient ?writing ?book)
      (instance ?bathtub BathingDevice)
      (instance ?tuesday Tuesday)
      (located ?writing ?bathtub)
      (equals
        (WhenFn ?writing) ?tuesday)
      (names ?bob \"Bob\")
      (authors ?bob ?book))))"
},
{"text":"Not every animal is a bird.",
"kif":
"(exists (?animal)
  (and
    (instance ?animal Animal)
    (not
      (instance ?animal Bird))))"
},
{"text":"If Bob owns a horse, then he doesn't beat it.",
"kif":
"(=>
  (and
    (instance ?bob Human)
    (attribute ?bob Male)
    (names ?bob \"Bob\")
    (possesses ?bob ?horse))
  (not
    (exists (?beating)
      (and
        (instance ?beating Impacting)
        (agent ?beating ?bob)
        (patient ?beating ?horse)))))"
},
{"text":"No farmer beats a horse.",
"kif":
"(not
  (exists (?farmer ?horse ?beating)
    (and
      (attribute ?farmer Position)
      (instance ?horse Horse)
      (instance ?beating Impacting)
      (agent ?beating ?farmer)
      (patient ?beating ?horse))))"
},
{"text":"Brutus inserts the knife into Caesar.",
"kif":
"(exists (?event ?knife)
  (and
    (agent ?event Brutus)
    (instance ?event Putting)
    (instance ?knife Device)
    (destination ?event Caesar)
    (patient ?event ?knife)))"
},
{"text":"Brutus inserts the knife into the cow.",
"kif":
"(exists (?cow ?event ?knife)
  (and
    (instance Brutus Human)
    (instance ?cow FemaleCow)
    (agent ?event Brutus)
    (instance ?event Putting)
    (instance ?knife CuttingDevice)
    (destination ?event ?cow)
    (patient ?event ?knife)))"
},
{"text":"Bob cooks food with her.",
"kif":
"(exists (?event ?food ?her)
  (and
    (attribute Robert-1 Male)
    (instance Robert-1 Human)
    (agent ?event Robert-1)
    (instance ?event Cooking)
    (instance ?food Food)
    (attribute ?her Female)
    (instance ?her Human)
    (patient ?event ?food)
    (agent ?event ?her)))"
},
{"text":"John reads a book and Mary goes to the shop.",
"kif":
"(exists (?book ?event1 ?event2 ?shop)
  (and
    (attribute John-1 Male)
    (attribute Mary-1 Female)
    (instance John-1 Human)
    (instance Mary-1 Human)
    (instance ?book Book)
    (agent ?event1 John-1)
    (instance ?event1 Reading)
    (agent ?event2 Mary-1)
    (instance ?event2 Transportation)
    (instance ?shop RetailStore)
    (patient ?event1 ?book)
    (destination ?event2 ?shop)))"
},
{"text":"John buys a book and he reads it.",
"kif":
"(exists (?book ?event1 ?event2)
  (and
    (attribute John-1 Male)
    (instance John-1 Human)
    (instance ?book Book)
    (instance ?book Object)
    (agent ?event1 John-1)
    (instance ?event1 Buying)
    (agent ?event2 John-1)
    (instance ?event2 Reading)
    (patient ?event1 ?book)
    (patient ?event2 ?book)))"
},
{"text":"Bob does not own the book but he reads it.",
"kif":
"(exists (?book ?event)
  (and
    (attribute Robert-1 Male)
    (instance Robert-1 Human)
    (not
      (possesses Robert-1 ?book))
    (instance ?book Book)
    (instance ?book Object)
    (agent ?event Robert-1)
    (instance ?event Reading)
    (patient ?event ?book)))"
},
{"text":"Bob, John and Mary write the book.",
"kif":
"(exists (?book)
  (and
    (attribute John-1 Male)
    (attribute Mary-1 Female)
    (attribute Robert-1 Male)
    (instance John-1 Human)
    (instance Mary-1 Human)
    (instance Robert-1 Human)
    (authors John-1 ?book)
    (authors Mary-1 ?book)
    (authors Robert-1 ?book)
    (instance ?book Book)))"
},
{"text":"The boy and the girl own a bicycle.",
"kif":
"(exists (?bicycle ?boy ?girl)
  (and
    (instance ?bicycle Bicycle)
    (attribute ?boy Male)
    (instance ?boy Human)
    (instance ?boy NotFullyFormed)
    (attribute ?girl Female)
    (instance ?girl Human)
    (instance ?girl NotFullyFormed)
    (possesses ?boy ?bicycle)
    (possesses ?girl ?bicycle)))"
},
{"text":"Homer writes Iliad and Odyssey.",
"kif":
"(and
  (authors Homer Iliad)
  (authors Homer Odyssey)
  (instance Homer Human)
  (instance Iliad Text)
  (instance Odyssey Text))"
},
{"text":"Bob and Mary own a car and a boat.",
"kif":
"(exists (?boat ?car)
  (and
    (attribute Mary-1 Female)
    (attribute Robert-1 Male)
    (instance Mary-1 Human)
    (instance Robert-1 Human)
    (instance ?boat WaterVehicle)
    (possesses Mary-1 ?boat)
    (possesses Robert-1 ?boat)
    (instance ?car Automobile)
    (possesses Mary-1 ?car)
    (possesses Robert-1 ?car)))"
},
{"text":"Bob and Mary buy a car and a boat.",
"kif":
"(exists (?boat ?car ?event)
  (and
    (attribute Mary-1 Female)
    (attribute Robert-1 Male)
    (instance Mary-1 Human)
    (instance Robert-1 Human)
    (instance ?boat WaterVehicle)
    (instance ?car Automobile)
    (agent ?event Mary-1)
    (agent ?event Robert-1)
    (instance ?event Buying)
    (patient ?event ?boat)
    (patient ?event ?car)))"
},
{"text":"Bob sends Bill a book and a ticket.",
"kif":
"(exists (?book ?event ?ticket)
  (and
    (attribute Robert-1 Male)
    (attribute William-1 Male)
    (instance Robert-1 Human)
    (instance William-1 Human)
    (instance ?book Book)
    (agent ?event Robert-1)
    (instance ?event Directing)
    (patient ?event William-1)
    (instance ?ticket Ticket)
    (patient ?event ?book)
    (patient ?event ?ticket)))"
},
{"text":"Bob is a musician and a carpenter.",
"kif":
"(and
  (attribute Robert-1 Carpenter)
  (attribute Robert-1 Male)
  (attribute Robert-1 Musician)
  (instance Robert-1 Human))"
},
{"text":"Bob is a soldier, an educator, a musician and a carpenter.",
"kif":
"(and
  (attribute Robert-1 Carpenter)
  (attribute Robert-1 Male)
  (attribute Robert-1 Musician)
  (attribute Robert-1 Soldier)
  (attribute Robert-1 Teacher)
  (instance Robert-1 Human))"
},
{"text":"Bob returns a book, a pen, a knife and a cup to Bill.",
"kif":
"(exists (?book ?cup ?event ?knife ?pen)
  (and
    (attribute Robert-1 Male)
    (attribute William-1 Male)
    (instance Robert-1 Human)
    (instance William-1 Human)
    (instance ?book Book)
    (instance ?cup Cup)
    (agent ?event Robert-1)
    (destination ?event William-1)
    (instance ?event GivingBack)
    (instance ?knife CuttingDevice)
    (instance ?pen WritingDevice)
    (patient ?event ?book)
    (patient ?event ?cup)
    (patient ?event ?knife)
    (patient ?event ?pen)))"
},
{"text":"Bob returns a book to Bill and Mary.",
"kif":
"(exists (?book ?event)
  (and
    (attribute Mary-1 Female)
    (attribute Robert-1 Male)
    (attribute William-1 Male)
    (instance Mary-1 Human)
    (instance Robert-1 Human)
    (instance William-1 Human)
    (instance ?book Book)
    (agent ?event Robert-1)
    (destination ?event Mary-1)
    (destination ?event William-1)
    (instance ?event GivingBack)
    (patient ?event ?book)))"
},
{"text":"Bob mails a letter to Bill, Mary, John and Jane.",
"kif":
"(exists (?event ?letter)
  (and
    (attribute Jane-1 Female)
    (attribute John-1 Male)
    (attribute Mary-1 Female)
    (attribute Robert-1 Male)
    (attribute William-1 Male)
    (instance Jane-1 Human)
    (instance John-1 Human)
    (instance Mary-1 Human)
    (instance Robert-1 Human)
    (instance William-1 Human)
    (agent ?event Robert-1)
    (destination ?event Jane-1)
    (destination ?event John-1)
    (destination ?event Mary-1)
    (destination ?event William-1)
    (instance ?event Mailing)
    (instance ?letter Letter)
    (patient ?event ?letter)))"
},
{"text":"Bob and Mary mail a book, a letter and a toy to John, Jane and Bill.",
"kif":
"(exists (?book ?event ?letter ?toy)
  (and
    (attribute Jane-1 Female)
    (attribute John-1 Male)
    (attribute Mary-1 Female)
    (attribute Robert-1 Male)
    (attribute William-1 Male)
    (instance Jane-1 Human)
    (instance John-1 Human)
    (instance Mary-1 Human)
    (instance Robert-1 Human)
    (instance William-1 Human)
    (instance ?book Book)
    (agent ?event Mary-1)
    (agent ?event Robert-1)
    (destination ?event Jane-1)
    (destination ?event John-1)
    (destination ?event William-1)
    (instance ?event Mailing)
    (instance ?letter Letter)
    (instance ?toy RecreationOrExerciseDevice)
    (patient ?event ?book)
    (patient ?event ?letter)
    (patient ?event ?toy)))"
},
{"text":"Bill and Mary mail Bob and Jane a book, a letter, a shirt and a toy.",
"kif":
"(exists (?book ?event ?letter ?shirt ?toy)
  (and
    (attribute Jane-1 Female)
    (attribute Mary-1 Female)
    (attribute Robert-1 Male)
    (attribute William-1 Male)
    (instance Jane-1 Human)
    (instance Mary-1 Human)
    (instance Robert-1 Human)
    (instance William-1 Human)
    (instance ?book Book)
    (agent ?event Mary-1)
    (agent ?event William-1)
    (destination ?event Jane-1)
    (destination ?event Robert-1)
    (instance ?event Mailing)
    (instance ?letter Letter)
    (instance ?shirt Shirt)
    (instance ?toy RecreationOrExerciseDevice)
    (patient ?event ?book)
    (patient ?event ?letter)
    (patient ?event ?shirt)
    (patient ?event ?toy)))"
},
{"text":"Bill and Mary mail Bob and Jane a book, a letter, a shirt and a toy.",
"kif":
"(exists (?book ?event ?letter ?shirt ?toy)
  (and
    (attribute Jane-1 Female)
    (attribute Mary-1 Female)
    (attribute Robert-1 Male)
    (attribute William-1 Male)
    (instance Jane-1 Human)
    (instance Mary-1 Human)
    (instance Robert-1 Human)
    (instance William-1 Human)
    (instance ?book Book)
    (agent ?event Mary-1)
    (agent ?event William-1)
    (destination ?event Jane-1)
    (destination ?event Robert-1)
    (instance ?event Mailing)
    (instance ?letter Letter)
    (instance ?shirt Shirt)
    (instance ?toy RecreationOrExerciseDevice)
    (patient ?event ?book)
    (patient ?event ?letter)
    (patient ?event ?shirt)
    (patient ?event ?toy)))"
},
{"text":"Bob buys Mary, Bill and Joe a computer.",
"kif":
"(exists (?computer ?event)
  (and
    (attribute Joseph-1 Male)
    (attribute Mary-1 Female)
    (attribute Robert-1 Male)
    (attribute William-1 Male)
    (instance Joseph-1 Human)
    (instance Mary-1 Human)
    (instance Robert-1 Human)
    (instance William-1 Human)
    (instance ?computer Computer)
    (agent ?event Robert-1)
    (destination ?event Joseph-1)
    (destination ?event Mary-1)
    (destination ?event William-1)
    (instance ?event Buying)
    (patient ?event ?computer)))"
},
{"text":"Bob buys and sells gold.",
"kif":
"(exists (?event1 ?event2 ?gold)
  (and
    (attribute Robert-1 Male)
    (instance Robert-1 Human)
    (agent ?event1 Robert-1)
    (instance ?event1 Buying)
    (agent ?event2 Robert-1)
    (instance ?event2 Selling)
    (instance ?gold Metal)
    (patient ?event1 ?gold)
    (patient ?event2 ?gold)))"
},
{"text":"Bob peels and cuts a carrot.",
"kif":
"(exists (?carrot ?event1 ?event2)
  (and
    (attribute Robert-1 Male)
    (instance Robert-1 Human)
    (instance ?carrot FruitOrVegetable)
    (agent ?event1 Robert-1)
    (instance ?event1 Separating)
    (agent ?event2 Robert-1)
    (instance ?event2 Cutting)
    (patient ?event1 ?carrot)
    (patient ?event2 ?carrot)))"
},
{"text":"Omar buys and sells opium.",
"kif":
"(exists (?event1 ?event2 ?opium)
  (and
    (instance Omar Human)
    (agent ?event1 Omar)
    (instance ?event1 Buying)
    (agent ?event2 Omar)
    (instance ?event2 Selling)
    (instance ?opium Opium)
    (patient ?event1 ?opium)
    (patient ?event2 ?opium)))"
},
{"text":"Bob writes and publishes a book.",
"kif":
"(exists (?book)
  (and
    (attribute Robert-1 Male)
    (instance Robert-1 Human)
    (authors Robert-1 ?book)
    (instance ?book Book)
    (publishes Robert-1 ?book)))"
},
{"text":"France designs, manufactures and sells the airplane.",
"kif":
"(exists (?airplane ?event1 ?event2 ?event3)
  (and
    (instance ?airplane Airplane)
    (agent ?event1 France)
    (instance ?event1 Planning)
    (agent ?event2 France)
    (instance ?event2 Manufacture)
    (agent ?event3 France)
    (instance ?event3 Selling)
    (patient ?event1 ?airplane)
    (patient ?event2 ?airplane)
    (patient ?event3 ?airplane)))"
},
{"text":"Jane writes, conducts and sings the opera.",
"kif":
"(exists (?event1 ?event2 ?opera)
  (and
    (attribute Jane-1 Female)
    (instance Jane-1 Human)
    (agent ?event1 Jane-1)
    (instance ?event1 Music)
    (agent ?event2 Jane-1)
    (instance ?event2 Singing)
    (authors Jane-1 ?opera)
    (instance ?opera Opera)
    (patient ?event1 ?opera)
    (patient ?event2 ?opera)))"
},
{"text":"Bob buys and sells gold and silver.",
"kif":
"(exists (?event1 ?event2 ?gold ?silver)
  (and
    (attribute Robert-1 Male)
    (instance Robert-1 Human)
    (agent ?event1 Robert-1)
    (instance ?event1 Buying)
    (agent ?event2 Robert-1)
    (instance ?event2 Selling)
    (instance ?gold Metal)
    (instance ?silver Silver)
    (patient ?event1 ?gold)
    (patient ?event1 ?silver)
    (patient ?event2 ?gold)
    (patient ?event2 ?silver)))"
},
{"text":"Bob and Mary buy and sell gold and silver.",
"kif":
"(exists (?event1 ?event2 ?gold ?silver)
  (and
    (attribute Mary-1 Female)
    (attribute Robert-1 Male)
    (instance Mary-1 Human)
    (instance Robert-1 Human)
    (agent ?event1 Mary-1)
    (agent ?event1 Robert-1)
    (instance ?event1 Buying)
    (agent ?event2 Mary-1)
    (agent ?event2 Robert-1)
    (instance ?event2 Selling)
    (instance ?gold Metal)
    (instance ?silver Silver)
    (patient ?event1 ?gold)
    (patient ?event1 ?silver)
    (patient ?event2 ?gold)
    (patient ?event2 ?silver)))"
},
{"text":"Bob and Mary buy and sell gold, silver and copper.",
"kif":
"(exists (?copper ?event1 ?event2 ?gold ?silver)
  (and
    (attribute Mary-1 Female)
    (attribute Robert-1 Male)
    (instance Mary-1 Human)
    (instance Robert-1 Human)
    (instance ?copper Copper)
    (agent ?event1 Mary-1)
    (agent ?event1 Robert-1)
    (instance ?event1 Buying)
    (agent ?event2 Mary-1)
    (agent ?event2 Robert-1)
    (instance ?event2 Selling)
    (instance ?gold Metal)
    (instance ?silver Silver)
    (patient ?event1 ?copper)
    (patient ?event2 ?copper)
    (patient ?event1 ?gold)
    (patient ?event1 ?silver)
    (patient ?event2 ?gold)
    (patient ?event2 ?silver)))"
},
{"text":"Bob and Mary buy and sell gold, silver, iron and copper.",
"kif":
"(exists (?copper ?event1 ?event2 ?gold ?iron ?silver)
  (and
    (attribute Mary-1 Female)
    (attribute Robert-1 Male)
    (instance Mary-1 Human)
    (instance Robert-1 Human)
    (instance ?copper Copper)
    (agent ?event1 Mary-1)
    (agent ?event1 Robert-1)
    (instance ?event1 Buying)
    (agent ?event2 Mary-1)
    (agent ?event2 Robert-1)
    (instance ?event2 Selling)
    (instance ?gold Metal)
    (instance ?iron Iron)
    (instance ?silver Silver)
    (patient ?event1 ?copper)
    (patient ?event2 ?copper)
    (patient ?event1 ?gold)
    (patient ?event1 ?iron)
    (patient ?event1 ?silver)
    (patient ?event2 ?gold)
    (patient ?event2 ?iron)
    (patient ?event2 ?silver)))"
},
{"text":"France and Germany design, manufacture and sell the airplane.",
"kif":
"(exists (?airplane ?event1 ?event2 ?event3)
  (and
    (instance ?airplane Airplane)
    (agent ?event1 France)
    (agent ?event1 Germany)
    (instance ?event1 Planning)
    (agent ?event2 France)
    (agent ?event2 Germany)
    (instance ?event2 Manufacture)
    (agent ?event3 France)
    (agent ?event3 Germany)
    (instance ?event3 Selling)
    (patient ?event1 ?airplane)
    (patient ?event2 ?airplane)
    (patient ?event3 ?airplane)))"
},
{"text":"France and Germany design, manufacture and sell the airplane and the missile.",
"kif":
"(exists (?airplane ?event1 ?event2 ?event3 ?missile)
  (and
    (instance ?airplane Airplane)
    (agent ?event1 France)
    (agent ?event1 Germany)
    (instance ?event1 Planning)
    (agent ?event2 France)
    (agent ?event2 Germany)
    (instance ?event2 Manufacture)
    (agent ?event3 France)
    (agent ?event3 Germany)
    (instance ?event3 Selling)
    (instance ?missile Missile)
    (patient ?event1 ?airplane)
    (patient ?event2 ?airplane)
    (patient ?event3 ?airplane)
    (patient ?event1 ?missile)
    (patient ?event2 ?missile)
    (patient ?event3 ?missile)))"
},
{"text":"France and Germany design, manufacture and sell the airplane, the ship and the missile.",
"kif":
"(exists (?airplane ?event1 ?event2 ?event3 ?missile ?ship)
  (and
    (instance ?airplane Airplane)
    (agent ?event1 France)
    (agent ?event1 Germany)
    (instance ?event1 Planning)
    (agent ?event2 France)
    (agent ?event2 Germany)
    (instance ?event2 Manufacture)
    (agent ?event3 France)
    (agent ?event3 Germany)
    (instance ?event3 Selling)
    (instance ?missile Missile)
    (instance ?ship WaterVehicle)
    (patient ?event1 ?airplane)
    (patient ?event2 ?airplane)
    (patient ?event3 ?airplane)
    (patient ?event1 ?missile)
    (patient ?event1 ?ship)
    (patient ?event2 ?missile)
    (patient ?event2 ?ship)
    (patient ?event3 ?missile)
    (patient ?event3 ?ship)))"
},
{"text":"France and Germany design, manufacture and sell the airplane, the vehicle, the ship and the missile.",
"kif":
"(exists (?airplane ?event1 ?event2 ?event3 ?missile ?ship ?vehicle)
  (and
    (instance ?airplane Airplane)
    (agent ?event1 France)
    (agent ?event1 Germany)
    (instance ?event1 Planning)
    (agent ?event2 France)
    (agent ?event2 Germany)
    (instance ?event2 Manufacture)
    (agent ?event3 France)
    (agent ?event3 Germany)
    (instance ?event3 Selling)
    (instance ?missile Missile)
    (instance ?ship WaterVehicle)
    (instance ?vehicle Vehicle)
    (patient ?event1 ?airplane)
    (patient ?event2 ?airplane)
    (patient ?event3 ?airplane)
    (patient ?event1 ?missile)
    (patient ?event1 ?ship)
    (patient ?event1 ?vehicle)
    (patient ?event2 ?missile)
    (patient ?event2 ?ship)
    (patient ?event2 ?vehicle)
    (patient ?event3 ?missile)
    (patient ?event3 ?ship)
    (patient ?event3 ?vehicle)))"
},
{"text":"Bob, Mary and John design and sell the toy.",
"kif":
"(exists (?event1 ?event2 ?toy)
  (and
    (attribute John-1 Male)
    (attribute Mary-1 Female)
    (attribute Robert-1 Male)
    (instance John-1 Human)
    (instance Mary-1 Human)
    (instance Robert-1 Human)
    (agent ?event1 John-1)
    (agent ?event1 Mary-1)
    (agent ?event1 Robert-1)
    (instance ?event1 Planning)
    (agent ?event2 John-1)
    (agent ?event2 Mary-1)
    (agent ?event2 Robert-1)
    (instance ?event2 Selling)
    (instance ?toy RecreationOrExerciseDevice)
    (patient ?event1 ?toy)
    (patient ?event2 ?toy)))"
},
{"text":"France, Germany and Sweden design, manufacture and sell the watch.",
"kif":
"(exists (?event1 ?event2 ?event3 ?watch)
  (and
    (agent ?event1 France)
    (agent ?event1 Germany)
    (agent ?event1 Sweden)
    (instance ?event1 Planning)
    (agent ?event2 France)
    (agent ?event2 Germany)
    (agent ?event2 Sweden)
    (instance ?event2 Manufacture)
    (agent ?event3 France)
    (agent ?event3 Germany)
    (agent ?event3 Sweden)
    (instance ?event3 Selling)
    (instance ?watch WatchClock)
    (patient ?event1 ?watch)
    (patient ?event2 ?watch)
    (patient ?event3 ?watch)))"
},
{"text":"Bob, Mary, John and Jane write and publish the book.",
"kif":
"(exists (?book)
  (and
    (attribute Jane-1 Female)
    (attribute John-1 Male)
    (attribute Mary-1 Female)
    (attribute Robert-1 Male)
    (instance Jane-1 Human)
    (instance John-1 Human)
    (instance Mary-1 Human)
    (instance Robert-1 Human)
    (authors Jane-1 ?book)
    (authors John-1 ?book)
    (authors Mary-1 ?book)
    (authors Robert-1 ?book)
    (instance ?book Book)
    (publishes Jane-1 ?book)
    (publishes John-1 ?book)
    (publishes Mary-1 ?book)
    (publishes Robert-1 ?book)))"
},
{"text":"Bob, Mary, John and Jane write, edit and publish the book.",
"kif":
"(exists (?book)
  (and
    (attribute Jane-1 Female)
    (attribute John-1 Male)
    (attribute Mary-1 Female)
    (attribute Robert-1 Male)
    (instance Jane-1 Human)
    (instance John-1 Human)
    (instance Mary-1 Human)
    (instance Robert-1 Human)
    (authors Jane-1 ?book)
    (authors John-1 ?book)
    (authors Mary-1 ?book)
    (authors Robert-1 ?book)
    (editor Jane-1 ?book)
    (editor John-1 ?book)
    (editor Mary-1 ?book)
    (editor Robert-1 ?book)
    (instance ?book Book)
    (publishes Jane-1 ?book)
    (publishes John-1 ?book)
    (publishes Mary-1 ?book)
    (publishes Robert-1 ?book)))"
},
{"text":"Bob, Mary, John and Jane write, edit and publish the book and the letter.",
"kif":
"(exists (?book ?letter)
  (and
    (attribute Jane-1 Female)
    (attribute John-1 Male)
    (attribute Mary-1 Female)
    (attribute Robert-1 Male)
    (instance Jane-1 Human)
    (instance John-1 Human)
    (instance Mary-1 Human)
    (instance Robert-1 Human)
    (authors Jane-1 ?book)
    (authors John-1 ?book)
    (authors Mary-1 ?book)
    (authors Robert-1 ?book)
    (editor Jane-1 ?book)
    (editor John-1 ?book)
    (editor Mary-1 ?book)
    (editor Robert-1 ?book)
    (instance ?book Book)
    (publishes Jane-1 ?book)
    (publishes John-1 ?book)
    (publishes Mary-1 ?book)
    (publishes Robert-1 ?book)
    (authors Jane-1 ?letter)
    (authors John-1 ?letter)
    (authors Mary-1 ?letter)
    (authors Robert-1 ?letter)
    (editor Jane-1 ?letter)
    (editor John-1 ?letter)
    (editor Mary-1 ?letter)
    (editor Robert-1 ?letter)
    (instance ?letter Letter)
    (publishes Jane-1 ?letter)
    (publishes John-1 ?letter)
    (publishes Mary-1 ?letter)
    (publishes Robert-1 ?letter)))"
},
{"text":"Bob and Jane write, edit and publish the book, the poem and the letter.",
"kif":
"(exists (?book ?letter ?poem)
  (and
    (attribute Jane-1 Female)
    (attribute Robert-1 Male)
    (instance Jane-1 Human)
    (instance Robert-1 Human)
    (authors Jane-1 ?book)
    (authors Robert-1 ?book)
    (editor Jane-1 ?book)
    (editor Robert-1 ?book)
    (instance ?book Book)
    (publishes Jane-1 ?book)
    (publishes Robert-1 ?book)
    (authors Jane-1 ?letter)
    (authors Robert-1 ?letter)
    (editor Jane-1 ?letter)
    (editor Robert-1 ?letter)
    (instance ?letter Letter)
    (publishes Jane-1 ?letter)
    (publishes Robert-1 ?letter)
    (authors Jane-1 ?poem)
    (authors Robert-1 ?poem)
    (editor Jane-1 ?poem)
    (editor Robert-1 ?poem)
    (instance ?poem FictionalText)
    (publishes Jane-1 ?poem)
    (publishes Robert-1 ?poem)))"
},
{"text":"Bob and Jane write, edit and publish the book, the poem, the song and the letter.",
"kif":
"(exists (?book ?letter ?poem ?song)
  (and
    (attribute Jane-1 Female)
    (attribute Robert-1 Male)
    (instance Jane-1 Human)
    (instance Robert-1 Human)
    (authors Jane-1 ?book)
    (authors Robert-1 ?book)
    (editor Jane-1 ?book)
    (editor Robert-1 ?book)
    (instance ?book Book)
    (publishes Jane-1 ?book)
    (publishes Robert-1 ?book)
    (authors Jane-1 ?letter)
    (authors Robert-1 ?letter)
    (editor Jane-1 ?letter)
    (editor Robert-1 ?letter)
    (instance ?letter Letter)
    (publishes Jane-1 ?letter)
    (publishes Robert-1 ?letter)
    (authors Jane-1 ?poem)
    (authors Robert-1 ?poem)
    (editor Jane-1 ?poem)
    (editor Robert-1 ?poem)
    (instance ?poem FictionalText)
    (publishes Jane-1 ?poem)
    (publishes Robert-1 ?poem)
    (authors Jane-1 ?song)
    (authors Robert-1 ?song)
    (editor Jane-1 ?song)
    (editor Robert-1 ?song)
    (instance ?song MusicalComposition)
    (publishes Jane-1 ?song)
    (publishes Robert-1 ?song)))"
},
{"text":"Bob does not grow and eat avocado.",
"kif":
"(not
  (exists (?avocado ?event1 ?event2)
    (and
      (attribute Robert-1 Male)
      (instance Robert-1 Human)
      (instance ?avocado Avocado)
      (agent ?event1 Robert-1)
      (instance ?event1 Growth)
      (agent ?event2 Robert-1)
      (instance ?event2 Eating)
      (patient ?event1 ?avocado)
      (patient ?event2 ?avocado))))"
},
{"text":"Bob does not write and publish the book.",
"kif":
"(exists (?book)
  (and
    (attribute Robert-1 Male)
    (instance Robert-1 Human)
    (not
      (authors Robert-1 ?book))
    (not
      (publishes Robert-1 ?book))
    (instance ?book Book)))"
},
{"text":"France and Germany do not design, manufacture and sell the bomb.",
"kif":
"(not
  (exists (?bomb ?event1 ?event2 ?event3)
    (and
      (instance ?bomb Bomb)
      (agent ?event1 France)
      (agent ?event1 Germany)
      (instance ?event1 Planning)
      (agent ?event2 France)
      (agent ?event2 Germany)
      (instance ?event2 Manufacture)
      (agent ?event3 France)
      (agent ?event3 Germany)
      (instance ?event3 Selling)
      (patient ?event1 ?bomb)
      (patient ?event2 ?bomb)
      (patient ?event3 ?bomb))))"
},
{"text":"Bob walks and talks.",
"kif":
"(exists (?event1 ?event2)
  (and
    (attribute Robert-1 Male)
    (instance Robert-1 Human)
    (agent ?event1 Robert-1)
    (instance ?event1 Walking)
    (agent ?event2 Robert-1)
    (instance ?event2 Speaking)))"
},
{"text":"Bob and Mary walk and talk.",
"kif":
"(exists (?event1 ?event2)
  (and
    (attribute Mary-1 Female)
    (attribute Robert-1 Male)
    (instance Mary-1 Human)
    (instance Robert-1 Human)
    (agent ?event1 Mary-1)
    (agent ?event1 Robert-1)
    (instance ?event1 Walking)
    (agent ?event2 Mary-1)
    (agent ?event2 Robert-1)
    (instance ?event2 Speaking)))"
},
{"text":"Bob wines, dines and talks.",
"kif":
"(exists (?event1 ?event2 ?event3)
  (and
    (attribute Robert-1 Male)
    (instance Robert-1 Human)
    (agent ?event1 Robert-1)
    (instance ?event1 Drinking)
    (agent ?event2 Robert-1)
    (instance ?event2 Eating)
    (agent ?event3 Robert-1)
    (instance ?event3 Speaking)))"
},
{"text":"Bob and Mary wine, dine and talk.",
"kif":
"(exists (?event1 ?event2 ?event3)
  (and
    (attribute Mary-1 Female)
    (attribute Robert-1 Male)
    (instance Mary-1 Human)
    (instance Robert-1 Human)
    (agent ?event1 Mary-1)
    (agent ?event1 Robert-1)
    (instance ?event1 Drinking)
    (agent ?event2 Mary-1)
    (agent ?event2 Robert-1)
    (instance ?event2 Eating)
    (agent ?event3 Mary-1)
    (agent ?event3 Robert-1)
    (instance ?event3 Speaking)))"
},
{"text":"Bob emails, faxes and airmails the letter to Mary.",
"kif":
"(exists (?event1 ?event2 ?event3 ?letter)
  (and
    (attribute Mary-1 Female)
    (attribute Robert-1 Male)
    (instance Mary-1 Human)
    (instance Robert-1 Human)
    (agent ?event1 Robert-1)
    (destination ?event1 Mary-1)
    (instance ?event1 Communication)
    (agent ?event2 Robert-1)
    (destination ?event2 Mary-1)
    (instance ?event2 Communication)
    (agent ?event3 Robert-1)
    (destination ?event3 Mary-1)
    (instance ?event3 Putting)
    (instance ?letter Letter)
    (patient ?event1 ?letter)
    (patient ?event2 ?letter)
    (patient ?event3 ?letter)))"
},
{"text":"Bob emails, faxes and airmails a letter, a pamphlet, a flyer and an article to Mary, Susan, Jim and Bill.",
"kif":
"(exists (?article ?event1 ?event2 ?flyer ?letter ?pamphlet)
  (and
    (attribute James-1 Male)
    (attribute Mary-1 Female)
    (attribute Robert-1 Male)
    (attribute Susan-1 Female)
    (attribute William-1 Male)
    (instance James-1 Human)
    (instance Mary-1 Human)
    (instance Robert-1 Human)
    (instance Susan-1 Human)
    (instance William-1 Human)
    (instance ?article Report)
    (agent ?event1 Robert-1)
    (destination ?event1 James-1)
    (destination ?event1 Mary-1)
    (destination ?event1 Susan-1)
    (destination ?event1 William-1)
    (instance ?event1 Communication)
    (agent ?event2 Robert-1)
    (destination ?event2 James-1)
    (destination ?event2 Mary-1)
    (destination ?event2 Susan-1)
    (destination ?event2 William-1)
    (instance ?event2 Communication)
    (instance ?flyer Advertising)
    (instance ?letter Letter)
    (instance ?pamphlet Book)
    (patient ?event1 ?article)
    (patient ?event2 ?article)
    (patient ?event1 ?flyer)
    (patient ?event1 ?letter)
    (patient ?event1 ?pamphlet)
    (patient ?event2 ?flyer)
    (patient ?event2 ?letter)
    (patient ?event2 ?pamphlet)))"
},
{"text":"Bob emails and faxes Mary a letter.",
"kif":
"(exists (?event1 ?event2 ?letter)
  (and
    (attribute Mary-1 Female)
    (attribute Robert-1 Male)
    (instance Mary-1 Human)
    (instance Robert-1 Human)
    (agent ?event1 Robert-1)
    (destination ?event1 Mary-1)
    (instance ?event1 Communication)
    (agent ?event2 Robert-1)
    (destination ?event2 Mary-1)
    (instance ?event2 Communication)
    (instance ?letter Letter)
    (patient ?event1 ?letter)
    (patient ?event2 ?letter)))"
},
{"text":"Bob emails, faxes and airmails Mary a letter.",
"kif":
"(exists (?event1 ?event2 ?event3 ?letter)
  (and
    (attribute Mary-1 Female)
    (attribute Robert-1 Male)
    (instance Mary-1 Human)
    (instance Robert-1 Human)
    (agent ?event1 Robert-1)
    (destination ?event1 Mary-1)
    (instance ?event1 Communication)
    (agent ?event2 Robert-1)
    (destination ?event2 Mary-1)
    (instance ?event2 Communication)
    (agent ?event3 Robert-1)
    (destination ?event3 Mary-1)
    (instance ?event3 Putting)
    (instance ?letter Letter)
    (patient ?event1 ?letter)
    (patient ?event2 ?letter)
    (patient ?event3 ?letter)))"
},
{"text":"Do Jim and Jane buy the book?",
"kif":
"(exists (?book ?event)
  (and
    (attribute James-1 Male)
    (attribute Jane-1 Female)
    (instance James-1 Human)
    (instance Jane-1 Human)
    (instance ?book Book)
    (agent ?event James-1)
    (agent ?event Jane-1)
    (instance ?event Buying)
    (patient ?event ?book)))"
},
{"text":"Do Bob, Jane and Mary go to the park?",
"kif":
"(exists (?event ?park)
  (and
    (attribute Jane-1 Female)
    (attribute Mary-1 Female)
    (attribute Robert-1 Male)
    (instance Jane-1 Human)
    (instance Mary-1 Human)
    (instance Robert-1 Human)
    (agent ?event Jane-1)
    (agent ?event Mary-1)
    (agent ?event Robert-1)
    (instance ?event Transportation)
    (instance ?park PublicPark)
    (destination ?event ?park)))"
},
{"text":"Do France, Britain, Germany and Sweden design the airplane?",
"kif":
"(exists (?airplane ?event)
  (and
    (instance ?airplane Airplane)
    (agent ?event France)
    (agent ?event Germany)
    (agent ?event Sweden)
    (agent ?event UnitedKingdomOfGreatBritainAndNorthernIreland)
    (instance ?event Planning)
    (patient ?event ?airplane)))"
},
{"text":"Does France design and manufacture the airplane?",
"kif":
"(exists (?airplane ?event1 ?event2)
  (and
    (instance ?airplane Airplane)
    (agent ?event1 France)
    (instance ?event1 Planning)
    (agent ?event2 France)
    (instance ?event2 Manufacture)
    (patient ?event1 ?airplane)
    (patient ?event2 ?airplane)))"
},
{"text":"Does France design, manufacture and sell the airplane?",
"kif":
"(exists (?airplane ?event1 ?event2 ?event3)
  (and
    (instance ?airplane Airplane)
    (agent ?event1 France)
    (instance ?event1 Planning)
    (agent ?event2 France)
    (instance ?event2 Manufacture)
    (agent ?event3 France)
    (instance ?event3 Selling)
    (patient ?event1 ?airplane)
    (patient ?event2 ?airplane)
    (patient ?event3 ?airplane)))"
},
{"text":"Do France and Germany design and manufacture the airplane?",
"kif":
"(exists (?airplane ?event1 ?event2)
  (and
    (instance ?airplane Airplane)
    (agent ?event1 France)
    (agent ?event1 Germany)
    (instance ?event1 Planning)
    (agent ?event2 France)
    (agent ?event2 Germany)
    (instance ?event2 Manufacture)
    (patient ?event1 ?airplane)
    (patient ?event2 ?airplane)))"
},
{"text":"Do Bob and Mary design, manufacture and sell the handbag?",
"kif":
"(exists (?event1 ?event2 ?event3 ?handbag)
  (and
    (attribute Mary-1 Female)
    (attribute Robert-1 Male)
    (instance Mary-1 Human)
    (instance Robert-1 Human)
    (agent ?event1 Mary-1)
    (agent ?event1 Robert-1)
    (instance ?event1 Planning)
    (agent ?event2 Mary-1)
    (agent ?event2 Robert-1)
    (instance ?event2 Manufacture)
    (agent ?event3 Mary-1)
    (agent ?event3 Robert-1)
    (instance ?event3 Selling)
    (instance ?handbag Bag)
    (patient ?event1 ?handbag)
    (patient ?event2 ?handbag)
    (patient ?event3 ?handbag)))"
},
{"text":"Do Bob, Joe and Mary design and manufacture the suitcase?",
"kif":
"(exists (?event1 ?event2 ?suitcase)
  (and
    (attribute Joseph-1 Male)
    (attribute Mary-1 Female)
    (attribute Robert-1 Male)
    (instance Joseph-1 Human)
    (instance Mary-1 Human)
    (instance Robert-1 Human)
    (agent ?event1 Joseph-1)
    (agent ?event1 Mary-1)
    (agent ?event1 Robert-1)
    (instance ?event1 Planning)
    (agent ?event2 Joseph-1)
    (agent ?event2 Mary-1)
    (agent ?event2 Robert-1)
    (instance ?event2 Manufacture)
    (instance ?suitcase TravelContainer)
    (patient ?event1 ?suitcase)
    (patient ?event2 ?suitcase)))"
},
{"text":"Do Bob, Joe and Mary design, manufacture and sell the suitcase?",
"kif":
"(exists (?event1 ?event2 ?event3 ?suitcase)
  (and
    (attribute Joseph-1 Male)
    (attribute Mary-1 Female)
    (attribute Robert-1 Male)
    (instance Joseph-1 Human)
    (instance Mary-1 Human)
    (instance Robert-1 Human)
    (agent ?event1 Joseph-1)
    (agent ?event1 Mary-1)
    (agent ?event1 Robert-1)
    (instance ?event1 Planning)
    (agent ?event2 Joseph-1)
    (agent ?event2 Mary-1)
    (agent ?event2 Robert-1)
    (instance ?event2 Manufacture)
    (agent ?event3 Joseph-1)
    (agent ?event3 Mary-1)
    (agent ?event3 Robert-1)
    (instance ?event3 Selling)
    (instance ?suitcase TravelContainer)
    (patient ?event1 ?suitcase)
    (patient ?event2 ?suitcase)
    (patient ?event3 ?suitcase)))"
},
{"text":"Do Britain, France, Germany and Italy design and manufacture the machine?",
"kif":
"(exists (?event1 ?event2 ?machine)
  (and
    (agent ?event1 France)
    (agent ?event1 Germany)
    (agent ?event1 Italy)
    (agent ?event1 UnitedKingdomOfGreatBritainAndNorthernIreland)
    (instance ?event1 Planning)
    (agent ?event2 France)
    (agent ?event2 Germany)
    (agent ?event2 Italy)
    (agent ?event2 UnitedKingdomOfGreatBritainAndNorthernIreland)
    (instance ?event2 Manufacture)
    (instance ?machine Device)
    (patient ?event1 ?machine)
    (patient ?event2 ?machine)))"
},
{"text":"Do Bob, Mary, Joe and Jim write, edit and publish the article?",
"kif":
"(exists (?article)
  (and
    (attribute James-1 Male)
    (attribute Joseph-1 Male)
    (attribute Mary-1 Female)
    (attribute Robert-1 Male)
    (instance James-1 Human)
    (instance Joseph-1 Human)
    (instance Mary-1 Human)
    (instance Robert-1 Human)
    (authors James-1 ?article)
    (authors Joseph-1 ?article)
    (authors Mary-1 ?article)
    (authors Robert-1 ?article)
    (editor James-1 ?article)
    (editor Joseph-1 ?article)
    (editor Mary-1 ?article)
    (editor Robert-1 ?article)
    (instance ?article Report)
    (publishes James-1 ?article)
    (publishes Joseph-1 ?article)
    (publishes Mary-1 ?article)
    (publishes Robert-1 ?article)))"
},
{"text":"Who writes and publishes the book?",
"kif":
"(exists (?book)
  (and
    (instance ?book Book)
    (instance ?who Human)
    (authors ?who ?book)
    (publishes ?who ?book)))"
},
{"text":"Who designs, manufactures and sells the watch?",
"kif":
"(exists (?event1 ?event2 ?event3 ?watch)
  (and
    (instance ?event1 Planning)
    (instance ?event2 Manufacture)
    (instance ?event3 Selling)
    (instance ?watch WatchClock)
    (instance ?who Human)
    (patient ?event1 ?watch)
    (agent ?event1 ?who)
    (patient ?event2 ?watch)
    (agent ?event2 ?who)
    (patient ?event3 ?watch)
    (agent ?event3 ?who)))"
},
{"text":"Who designs, manufactures and sells the watch and the clock?",
"kif":
"(exists (?clock ?event1 ?event2 ?event3 ?watch)
  (and
    (instance ?clock Clock)
    (instance ?event1 Planning)
    (instance ?event2 Manufacture)
    (instance ?event3 Selling)
    (instance ?watch WatchClock)
    (instance ?who Human)
    (patient ?event1 ?clock)
    (patient ?event2 ?clock)
    (patient ?event3 ?clock)
    (patient ?event1 ?watch)
    (agent ?event1 ?who)
    (patient ?event2 ?watch)
    (agent ?event2 ?who)
    (patient ?event3 ?watch)
    (agent ?event3 ?who)))"
},
{"text":"Which country designs, manufactures and sells the airplane and the missile?",
"kif":
"(exists (?airplane ?event1 ?event2 ?event3 ?missile)
  (and
    (instance ?airplane Airplane)
    (instance ?country Nation)
    (instance ?event1 Planning)
    (instance ?event2 Manufacture)
    (instance ?event3 Selling)
    (instance ?missile Missile)
    (patient ?event1 ?airplane)
    (patient ?event2 ?airplane)
    (patient ?event3 ?airplane)
    (agent ?event1 ?country)
    (agent ?event2 ?country)
    (agent ?event3 ?country)
    (patient ?event1 ?missile)
    (patient ?event2 ?missile)
    (patient ?event3 ?missile)))"
},
{"text":"Which company designs and manufactures the drug?",
"kif":
"(exists (?drug ?event1 ?event2)
  (and
    (instance ?company Corporation)
    (instance ?drug BiologicallyActiveSubstance)
    (instance ?event1 Planning)
    (instance ?event2 Manufacture)
    (agent ?event1 ?company)
    (agent ?event2 ?company)
    (patient ?event1 ?drug)
    (patient ?event2 ?drug)))"
},
{"text":"Which customer buys the steak?",
"kif":
"(exists (?event ?salesperson ?steak)
  (and
    (instance ?customer CognitiveAgent)
    (instance ?event Buying)
    (instance ?salesperson CognitiveAgent)
    (instance ?steak Meat)
    (agent ?event ?customer)
    (customer ?customer ?salesperson)
    (patient ?event ?steak)))"
},
{"text":"What car enters the garden and the backyard?",
"kif":
"(exists (?backyard ?event ?garden)
  (and
    (instance ?backyard Lawn)
    (instance ?car Automobile)
    (instance ?event Motion)
    (instance ?garden CultivatedLandArea)
    (patient ?event ?backyard)
    (agent ?event ?car)
    (patient ?event ?garden)))"
},
{"text":"What country invades Poland, Czechoslovakia and Romania?",
"kif":
"(exists (?event)
  (and
    (instance ?country Nation)
    (instance ?event ViolentContest)
    (patient ?event Czechoslovakia)
    (patient ?event Poland)
    (patient ?event Romania)
    (agent ?event ?country)))"
},
{"text":"Where do Bob and Mary work?",
"kif":
"(exists (?event)
  (and
    (attribute Mary-1 Female)
    (attribute Robert-1 Male)
    (instance Mary-1 Human)
    (instance Robert-1 Human)
    (agent ?event Mary-1)
    (agent ?event Robert-1)
    (instance ?event Works)
    (located ?event ?where)))"
},
{"text":"When do Jim, Joe and Jane arrive?",
"kif":
"(exists (?event)
  (and
    (attribute James-1 Male)
    (attribute Jane-1 Female)
    (attribute Joseph-1 Male)
    (instance James-1 Human)
    (instance Jane-1 Human)
    (instance Joseph-1 Human)
    (agent ?event James-1)
    (agent ?event Jane-1)
    (agent ?event Joseph-1)
    (instance ?event Arriving)
    (equal
      (BeginFn
        (WhenFn ?event)) ?when)))"
},
{"text":"How do Bob, Mary, Joe and Jane arrive?",
"kif":
"(exists (?event)
  (and
    (attribute Jane-1 Female)
    (attribute Joseph-1 Male)
    (attribute Mary-1 Female)
    (attribute Robert-1 Male)
    (instance Jane-1 Human)
    (instance Joseph-1 Human)
    (instance Mary-1 Human)
    (instance Robert-1 Human)
    (agent ?event Jane-1)
    (agent ?event Joseph-1)
    (agent ?event Mary-1)
    (agent ?event Robert-1)
    (instance ?event Arriving)
    (manner ?event ?how)))"
},
{"text":"Where does France design and manufacture the bomb?",
"kif":
"(exists (?bomb ?event1 ?event2)
  (and
    (instance ?bomb Bomb)
    (agent ?event1 France)
    (instance ?event1 Planning)
    (agent ?event2 France)
    (instance ?event2 Manufacture)
    (patient ?event1 ?bomb)
    (patient ?event2 ?bomb)
    (located ?event1 ?where)
    (located ?event2 ?where)))"
},
{"text":"How does Sweden design, manufacture and sell the watch?",
"kif":
"(exists (?event1 ?event2 ?event3 ?watch)
  (and
    (agent ?event1 Sweden)
    (instance ?event1 Planning)
    (agent ?event2 Sweden)
    (instance ?event2 Manufacture)
    (agent ?event3 Sweden)
    (instance ?event3 Selling)
    (instance ?watch WatchClock)
    (manner ?event1 ?how)
    (patient ?event1 ?watch)
    (manner ?event2 ?how)
    (patient ?event2 ?watch)
    (manner ?event3 ?how)
    (patient ?event3 ?watch)))"
},
{"text":"How do Sweden and France design and manufacture the clock?",
"kif":
"(exists (?clock ?event1 ?event2)
  (and
    (instance ?clock Clock)
    (agent ?event1 France)
    (agent ?event1 Sweden)
    (instance ?event1 Planning)
    (agent ?event2 France)
    (agent ?event2 Sweden)
    (instance ?event2 Manufacture)
    (patient ?event1 ?clock)
    (patient ?event2 ?clock)
    (manner ?event1 ?how)
    (manner ?event2 ?how)))"
},
{"text":"How do Sweden and France design, manufacture and sell the clock?",
"kif":
"(exists (?clock ?event1 ?event2 ?event3)
  (and
    (instance ?clock Clock)
    (agent ?event1 France)
    (agent ?event1 Sweden)
    (instance ?event1 Planning)
    (agent ?event2 France)
    (agent ?event2 Sweden)
    (instance ?event2 Manufacture)
    (agent ?event3 France)
    (agent ?event3 Sweden)
    (instance ?event3 Selling)
    (patient ?event1 ?clock)
    (patient ?event2 ?clock)
    (patient ?event3 ?clock)
    (manner ?event1 ?how)
    (manner ?event2 ?how)
    (manner ?event3 ?how)))"
},
{"text":"Where do Sweden, Spain and France design and manufacture the machine?",
"kif":
"(exists (?event1 ?event2 ?machine)
  (and
    (agent ?event1 France)
    (agent ?event1 Spain)
    (agent ?event1 Sweden)
    (instance ?event1 Planning)
    (agent ?event2 France)
    (agent ?event2 Spain)
    (agent ?event2 Sweden)
    (instance ?event2 Manufacture)
    (instance ?machine Device)
    (patient ?event1 ?machine)
    (located ?event1 ?where)
    (patient ?event2 ?machine)
    (located ?event2 ?where)))"
},
{"text":"When do Sweden, Spain and France design, manufacture and sell the yacht?",
"kif":
"(exists (?event1 ?event2 ?event3 ?yacht)
  (and
    (agent ?event1 France)
    (agent ?event1 Spain)
    (agent ?event1 Sweden)
    (instance ?event1 Planning)
    (agent ?event2 France)
    (agent ?event2 Spain)
    (agent ?event2 Sweden)
    (instance ?event2 Manufacture)
    (agent ?event3 France)
    (agent ?event3 Spain)
    (agent ?event3 Sweden)
    (instance ?event3 Selling)
    (equal
      (BeginFn
        (WhenFn ?event1)) ?when)
    (equal
      (BeginFn
        (WhenFn ?event2)) ?when)
    (equal
      (BeginFn
        (WhenFn ?event3)) ?when)
    (instance ?yacht TransportationDevice)
    (patient ?event1 ?yacht)
    (patient ?event2 ?yacht)
    (patient ?event3 ?yacht)))"
},
{"text":"When do Sweden, Spain, Italy and France design and manufacture the yacht?",
"kif":
"(exists (?event1 ?event2 ?yacht)
  (and
    (agent ?event1 France)
    (agent ?event1 Italy)
    (agent ?event1 Spain)
    (agent ?event1 Sweden)
    (instance ?event1 Planning)
    (agent ?event2 France)
    (agent ?event2 Italy)
    (agent ?event2 Spain)
    (agent ?event2 Sweden)
    (instance ?event2 Manufacture)
    (equal
      (BeginFn
        (WhenFn ?event1)) ?when)
    (equal
      (BeginFn
        (WhenFn ?event2)) ?when)
    (instance ?yacht TransportationDevice)
    (patient ?event1 ?yacht)
    (patient ?event2 ?yacht)))"
},
{"text":"When do Sweden, Spain, Italy and France design, manufacture and sell the yacht?",
"kif":
"(exists (?event1 ?event2 ?event3 ?yacht)
  (and
    (agent ?event1 France)
    (agent ?event1 Italy)
    (agent ?event1 Spain)
    (agent ?event1 Sweden)
    (instance ?event1 Planning)
    (agent ?event2 France)
    (agent ?event2 Italy)
    (agent ?event2 Spain)
    (agent ?event2 Sweden)
    (instance ?event2 Manufacture)
    (agent ?event3 France)
    (agent ?event3 Italy)
    (agent ?event3 Spain)
    (agent ?event3 Sweden)
    (instance ?event3 Selling)
    (equal
      (BeginFn
        (WhenFn ?event1)) ?when)
    (equal
      (BeginFn
        (WhenFn ?event2)) ?when)
    (equal
      (BeginFn
        (WhenFn ?event3)) ?when)
    (instance ?yacht TransportationDevice)
    (patient ?event1 ?yacht)
    (patient ?event2 ?yacht)
    (patient ?event3 ?yacht)))"
},
{"text":"When do Sweden, Spain, Italy and France not design, manufacture and sell the yacht?",
"kif":
"(not
  (exists (?event1 ?event2 ?event3 ?yacht)
    (and
      (agent ?event1 France)
      (agent ?event1 Italy)
      (agent ?event1 Spain)
      (agent ?event1 Sweden)
      (instance ?event1 Planning)
      (agent ?event2 France)
      (agent ?event2 Italy)
      (agent ?event2 Spain)
      (agent ?event2 Sweden)
      (instance ?event2 Manufacture)
      (agent ?event3 France)
      (agent ?event3 Italy)
      (agent ?event3 Spain)
      (agent ?event3 Sweden)
      (instance ?event3 Selling)
      (equal
        (BeginFn
          (WhenFn ?event1)) ?when)
      (equal
        (BeginFn
          (WhenFn ?event2)) ?when)
      (equal
        (BeginFn
          (WhenFn ?event3)) ?when)
      (instance ?yacht TransportationDevice)
      (patient ?event1 ?yacht)
      (patient ?event2 ?yacht)
      (patient ?event3 ?yacht))))"
},
{"text":"When do the train and the bus arrive?",
"kif":
"(exists (?bus ?event ?train)
  (and
    (instance ?bus PassengerVehicle)
    (instance ?event Arriving)
    (instance ?train Train)
    (equal
      (BeginFn
        (WhenFn ?event)) ?when)
    (patient ?event ?bus)
    (patient ?event ?train)))"
},
{"text":"When do the train and the bus not arrive?",
"kif":
"(not
  (exists (?bus ?event ?train)
    (and
      (instance ?bus PassengerVehicle)
      (instance ?event Arriving)
      (instance ?train Train)
      (equal
        (BeginFn
          (WhenFn ?event)) ?when)
      (patient ?event ?bus)
      (patient ?event ?train))))"
},
{"text":"Is Bob a musician and a carpenter?",
"kif":
"(and
  (attribute Robert-1 Carpenter)
  (attribute Robert-1 Male)
  (attribute Robert-1 Musician)
  (instance Robert-1 Human))"
},
{"text":"Where are the bank and the school?",
"kif":
"(exists (?bank ?school)
  (and
    (instance ?bank Bank-FinancialOrganization)
    (instance ?school School)
    (located ?bank ?where)
    (located ?school ?where)))"
},
{"text":"Every farmer owns a horse. ",
"kif":
"(forall (?farmer)
  (exists (?horse)
    (and
      (attribute ?farmer Position)
      (instance ?horse Horse)
      (possesses ?farmer ?horse))))"
},
{"text":"Bob and Mary are rich.",
"kif":
"(and
  (attribute Mary-1 Female)
  (attribute Mary-1 Rich)
  (attribute Robert-1 Male)
  (attribute Robert-1 Rich)
  (instance Mary-1 Human)
  (instance Robert-1 Human))"
},
{"text":"The fish and the fruit are different from the beef.",
"kif":
"(exists (?beef ?fish ?fruit)
  (and
    (not
      (equal ?fish ?beef))
    (not
      (equal ?fruit ?beef))
    (instance ?beef Cow)
    (instance ?fish Fish)
    (instance ?fruit FruitOrVegetable)))"
},
{"text":"Bob and Mary are the customer of the bank.",
"kif":
"(exists (?bank)
  (and
    (attribute Mary-1 Female)
    (attribute Robert-1 Male)
    (instance Mary-1 Human)
    (instance Robert-1 Human)
    (customer Mary-1 ?bank)
    (customer Robert-1 ?bank)
    (instance ?bank Bank-FinancialOrganization)))"
},
{"text":"Are Bob and Mary rich?",
"kif":
"(and
  (attribute Mary-1 Female)
  (attribute Mary-1 Rich)
  (attribute Robert-1 Male)
  (attribute Robert-1 Rich)
  (instance Mary-1 Human)
  (instance Robert-1 Human))"
},
{"text":"Are Bob and Mary generous?",
"kif":
"(and
  (attribute Mary-1 Female)
  (attribute Mary-1 SubjectiveAssessmentAttribute)
  (attribute Robert-1 Male)
  (attribute Robert-1 SubjectiveAssessmentAttribute)
  (instance Mary-1 Human)
  (instance Robert-1 Human))"
},
{"text":"Are Jim, Jane and John at the park?",
"kif":
"(exists (?park)
  (and
    (attribute James-1 Male)
    (attribute Jane-1 Female)
    (attribute John-1 Male)
    (instance James-1 Human)
    (instance Jane-1 Human)
    (instance John-1 Human)
    (instance ?park PublicPark)
    (located James-1 ?park)
    (located Jane-1 ?park)
    (located John-1 ?park)))"
},
{"text":"A pen is a tool and a weapon.",
"kif":
"(forall (?pen)
  (=>
    (instance ?pen WritingDevice)
    (and
      (instance ?pen Device)
      (instance ?pen Weapon))))"
},
{"text":"Every general is a commander and a soldier.",
"kif":
"(forall (?general)
  (=>
    (attribute ?general MilitaryGeneral)
    (and
      (attribute ?general MilitaryCommander)
      (attribute ?general Soldier))))"
},
{"text":"A house is a place, a shelter and a home.",
"kif":
"(forall (?house)
  (=>
    (instance ?house House)
    (and
      (attribute ?house Address)
      (instance ?house Building)
      (instance ?house Region))))"
},
{"text":"Every beach is water, sand, sunshine and joy.",
"kif":
"(forall (?beach)
  (=>
    (instance ?beach ShoreArea)
    (and
      (attribute ?beach Happiness)
      (instance ?beach Sand)
      (instance ?beach Sunlight)
      (instance ?beach Water))))"
},
{"text":"A flag is an identity and a token.",
"kif":
"(forall (?flag)
  (=>
    (instance ?flag Flag)
    (and
      (attribute ?flag TraitAttribute)
      (instance ?flag ContentBearingObject))))"
},
{"text":"Who do John and Mary give a card to?",
"kif":
"(exists (?card ?event)
  (and
    (attribute John-1 Male)
    (attribute Mary-1 Female)
    (instance John-1 Human)
    (instance Mary-1 Human)
    (instance ?card BankCard)
    (agent ?event John-1)
    (agent ?event Mary-1)
    (instance ?event Giving)
    (patient ?event ?card)
    (destination ?event ?who)))"
},
{"text":"Who do Bill, Mary and Joe give a book to?",
"kif":
"(exists (?book ?event)
  (and
    (attribute Joseph-1 Male)
    (attribute Mary-1 Female)
    (attribute William-1 Male)
    (instance Joseph-1 Human)
    (instance Mary-1 Human)
    (instance William-1 Human)
    (instance ?book Book)
    (agent ?event Joseph-1)
    (agent ?event Mary-1)
    (agent ?event William-1)
    (instance ?event Giving)
    (patient ?event ?book)
    (destination ?event ?who)))"
},
{"text":"Who does John show and give a card to?",
"kif":
"(exists (?card ?event1 ?event2)
  (and
    (attribute John-1 Male)
    (instance John-1 Human)
    (instance ?card BankCard)
    (agent ?event1 John-1)
    (instance ?event1 Demonstrating)
    (agent ?event2 John-1)
    (instance ?event2 Giving)
    (instance ?who Human)
    (patient ?event1 ?card)
    (patient ?event2 ?card)
    (destination ?event1 ?who)
    (destination ?event2 ?who)))"
},
{"text":"Who does Mary email, fax and airmail a letter to?",
"kif":
"(exists (?event1 ?event2 ?event3 ?letter)
  (and
    (attribute Mary-1 Female)
    (instance Mary-1 Human)
    (agent ?event1 Mary-1)
    (instance ?event1 Communication)
    (agent ?event2 Mary-1)
    (instance ?event2 Communication)
    (agent ?event3 Mary-1)
    (instance ?event3 Putting)
    (instance ?letter Letter)
    (instance ?who Human)
    (patient ?event1 ?letter)
    (destination ?event1 ?who)
    (patient ?event2 ?letter)
    (destination ?event2 ?who)
    (patient ?event3 ?letter)
    (destination ?event3 ?who)))"
},
{"text":"Who do John and Mary email and fax a letter to?",
"kif":
"(exists (?event1 ?event2 ?letter)
  (and
    (attribute John-1 Male)
    (attribute Mary-1 Female)
    (instance John-1 Human)
    (instance Mary-1 Human)
    (agent ?event1 John-1)
    (agent ?event1 Mary-1)
    (instance ?event1 Communication)
    (agent ?event2 John-1)
    (agent ?event2 Mary-1)
    (instance ?event2 Communication)
    (instance ?letter Letter)
    (instance ?who Human)
    (patient ?event1 ?letter)
    (destination ?event1 ?who)
    (patient ?event2 ?letter)
    (destination ?event2 ?who)))"
},
{"text":"Who do John and Mary email, fax and airmail a letter to?",
"kif":
"(exists (?event1 ?event2 ?event3 ?letter)
  (and
    (attribute John-1 Male)
    (attribute Mary-1 Female)
    (instance John-1 Human)
    (instance Mary-1 Human)
    (agent ?event1 John-1)
    (agent ?event1 Mary-1)
    (instance ?event1 Communication)
    (agent ?event2 John-1)
    (agent ?event2 Mary-1)
    (instance ?event2 Communication)
    (agent ?event3 John-1)
    (agent ?event3 Mary-1)
    (instance ?event3 Putting)
    (instance ?letter Letter)
    (instance ?who Human)
    (patient ?event1 ?letter)
    (destination ?event1 ?who)
    (patient ?event2 ?letter)
    (destination ?event2 ?who)
    (patient ?event3 ?letter)
    (destination ?event3 ?who)))"
},
{"text":"Who do John, Mary and Jim email and fax a letter to?",
"kif":
"(exists (?event1 ?event2 ?letter)
  (and
    (attribute James-1 Male)
    (attribute John-1 Male)
    (attribute Mary-1 Female)
    (instance James-1 Human)
    (instance John-1 Human)
    (instance Mary-1 Human)
    (agent ?event1 James-1)
    (agent ?event1 John-1)
    (agent ?event1 Mary-1)
    (instance ?event1 Communication)
    (agent ?event2 James-1)
    (agent ?event2 John-1)
    (agent ?event2 Mary-1)
    (instance ?event2 Communication)
    (instance ?letter Letter)
    (instance ?who Human)
    (patient ?event1 ?letter)
    (destination ?event1 ?who)
    (patient ?event2 ?letter)
    (destination ?event2 ?who)))"
},
{"text":"Who do John, Mary and Jim email, fax and airmail a letter to?",
"kif":
"(exists (?event1 ?event2 ?event3 ?letter)
  (and
    (attribute James-1 Male)
    (attribute John-1 Male)
    (attribute Mary-1 Female)
    (instance James-1 Human)
    (instance John-1 Human)
    (instance Mary-1 Human)
    (agent ?event1 James-1)
    (agent ?event1 John-1)
    (agent ?event1 Mary-1)
    (instance ?event1 Communication)
    (agent ?event2 James-1)
    (agent ?event2 John-1)
    (agent ?event2 Mary-1)
    (instance ?event2 Communication)
    (agent ?event3 James-1)
    (agent ?event3 John-1)
    (agent ?event3 Mary-1)
    (instance ?event3 Putting)
    (instance ?letter Letter)
    (instance ?who Human)
    (patient ?event1 ?letter)
    (destination ?event1 ?who)
    (patient ?event2 ?letter)
    (destination ?event2 ?who)
    (patient ?event3 ?letter)
    (destination ?event3 ?who)))"
},
{"text":"Who does John give an apple and an orange to?",
"kif":
"(exists (?apple ?event ?orange)
  (and
    (attribute John-1 Male)
    (instance John-1 Human)
    (instance ?apple FruitOrVegetable)
    (agent ?event John-1)
    (instance ?event Giving)
    (instance ?orange OrangeFruit)
    (patient ?event ?apple)
    (patient ?event ?orange)
    (destination ?event ?who)))"
},
{"text":"Who does John give an apple, an orange and a banana to?",
"kif":
"(exists (?apple ?banana ?event ?orange)
  (and
    (attribute John-1 Male)
    (instance John-1 Human)
    (instance ?apple FruitOrVegetable)
    (instance ?banana FloweringPlant)
    (agent ?event John-1)
    (instance ?event Giving)
    (instance ?orange OrangeFruit)
    (patient ?event ?apple)
    (patient ?event ?banana)
    (patient ?event ?orange)
    (destination ?event ?who)))"
},
{"text":"Who does John give an apple, an orange, a banana and a lemon to?",
"kif":
"(exists (?apple ?banana ?event ?lemon ?orange)
  (and
    (attribute John-1 Male)
    (instance John-1 Human)
    (instance ?apple FruitOrVegetable)
    (instance ?banana FloweringPlant)
    (agent ?event John-1)
    (instance ?event Giving)
    (instance ?lemon LemonFruit)
    (instance ?orange OrangeFruit)
    (patient ?event ?apple)
    (patient ?event ?banana)
    (patient ?event ?lemon)
    (patient ?event ?orange)
    (destination ?event ?who)))"
},
{"text":"Who does John email and fax a letter and an article to?",
"kif":
"(exists (?article ?event1 ?event2 ?letter)
  (and
    (attribute John-1 Male)
    (instance John-1 Human)
    (instance ?article Report)
    (agent ?event1 John-1)
    (instance ?event1 Communication)
    (agent ?event2 John-1)
    (instance ?event2 Communication)
    (instance ?letter Letter)
    (instance ?who Human)
    (patient ?event1 ?article)
    (patient ?event2 ?article)
    (patient ?event1 ?letter)
    (destination ?event1 ?who)
    (patient ?event2 ?letter)
    (destination ?event2 ?who)))"
},
{"text":"Who does John email and fax a letter, a poem and an article to?",
"kif":
"(exists (?article ?event1 ?event2 ?letter ?poem)
  (and
    (attribute John-1 Male)
    (instance John-1 Human)
    (instance ?article Report)
    (agent ?event1 John-1)
    (instance ?event1 Communication)
    (agent ?event2 John-1)
    (instance ?event2 Communication)
    (instance ?letter Letter)
    (instance ?poem FictionalText)
    (instance ?who Human)
    (patient ?event1 ?article)
    (patient ?event2 ?article)
    (patient ?event1 ?letter)
    (patient ?event1 ?poem)
    (destination ?event1 ?who)
    (patient ?event2 ?letter)
    (patient ?event2 ?poem)
    (destination ?event2 ?who)))"
},
{"text":"Who does John email and fax a letter, a poem, a song and an article to?",
"kif":
"(exists (?article ?event1 ?event2 ?letter ?poem ?song)
  (and
    (attribute John-1 Male)
    (instance John-1 Human)
    (instance ?article Report)
    (agent ?event1 John-1)
    (instance ?event1 Communication)
    (agent ?event2 John-1)
    (instance ?event2 Communication)
    (instance ?letter Letter)
    (instance ?poem FictionalText)
    (instance ?song MusicalComposition)
    (instance ?who Human)
    (patient ?event1 ?article)
    (patient ?event2 ?article)
    (patient ?event1 ?letter)
    (patient ?event1 ?poem)
    (patient ?event1 ?song)
    (destination ?event1 ?who)
    (patient ?event2 ?letter)
    (patient ?event2 ?poem)
    (patient ?event2 ?song)
    (destination ?event2 ?who)))"
},
{"text":"Who does John email, fax and airmail a letter and an article to?",
"kif":
"(exists (?article ?event1 ?event2 ?event3 ?letter)
  (and
    (attribute John-1 Male)
    (instance John-1 Human)
    (instance ?article Report)
    (agent ?event1 John-1)
    (instance ?event1 Communication)
    (agent ?event2 John-1)
    (instance ?event2 Communication)
    (agent ?event3 John-1)
    (instance ?event3 Putting)
    (instance ?letter Letter)
    (instance ?who Human)
    (patient ?event1 ?article)
    (patient ?event2 ?article)
    (patient ?event3 ?article)
    (patient ?event1 ?letter)
    (destination ?event1 ?who)
    (patient ?event2 ?letter)
    (destination ?event2 ?who)
    (patient ?event3 ?letter)
    (destination ?event3 ?who)))"
},
{"text":"Who do John and Mary email, fax and airmail a letter, a poem and an article to?",
"kif":
"(exists (?article ?event1 ?event2 ?event3 ?letter ?poem)
  (and
    (attribute John-1 Male)
    (attribute Mary-1 Female)
    (instance John-1 Human)
    (instance Mary-1 Human)
    (instance ?article Report)
    (agent ?event1 John-1)
    (agent ?event1 Mary-1)
    (instance ?event1 Communication)
    (agent ?event2 John-1)
    (agent ?event2 Mary-1)
    (instance ?event2 Communication)
    (agent ?event3 John-1)
    (agent ?event3 Mary-1)
    (instance ?event3 Putting)
    (instance ?letter Letter)
    (instance ?poem FictionalText)
    (instance ?who Human)
    (patient ?event1 ?article)
    (patient ?event2 ?article)
    (patient ?event3 ?article)
    (patient ?event1 ?letter)
    (patient ?event1 ?poem)
    (destination ?event1 ?who)
    (patient ?event2 ?letter)
    (patient ?event2 ?poem)
    (destination ?event2 ?who)
    (patient ?event3 ?letter)
    (patient ?event3 ?poem)
    (destination ?event3 ?who)))"
},
{"text":"Who do John and Mary email, fax and airmail a letter, a poem, a song and an article to?",
"kif":
"(exists (?article ?event1 ?event2 ?event3 ?letter ?poem ?song)
  (and
    (attribute John-1 Male)
    (attribute Mary-1 Female)
    (instance John-1 Human)
    (instance Mary-1 Human)
    (instance ?article Report)
    (agent ?event1 John-1)
    (agent ?event1 Mary-1)
    (instance ?event1 Communication)
    (agent ?event2 John-1)
    (agent ?event2 Mary-1)
    (instance ?event2 Communication)
    (agent ?event3 John-1)
    (agent ?event3 Mary-1)
    (instance ?event3 Putting)
    (instance ?letter Letter)
    (instance ?poem FictionalText)
    (instance ?song MusicalComposition)
    (instance ?who Human)
    (patient ?event1 ?article)
    (patient ?event2 ?article)
    (patient ?event3 ?article)
    (patient ?event1 ?letter)
    (patient ?event1 ?poem)
    (patient ?event1 ?song)
    (destination ?event1 ?who)
    (patient ?event2 ?letter)
    (patient ?event2 ?poem)
    (patient ?event2 ?song)
    (destination ?event2 ?who)
    (patient ?event3 ?letter)
    (patient ?event3 ?poem)
    (patient ?event3 ?song)
    (destination ?event3 ?who)))"
},
{"text":"What does Mary email and fax to John?",
"kif":
"(exists (?event1 ?event2)
  (and
    (attribute John-1 Male)
    (attribute Mary-1 Female)
    (instance John-1 Human)
    (instance Mary-1 Human)
    (agent ?event1 Mary-1)
    (destination ?event1 John-1)
    (instance ?event1 Communication)
    (agent ?event2 Mary-1)
    (destination ?event2 John-1)
    (instance ?event2 Communication)
    (instance ?what Physical)
    (patient ?event1 ?what)
    (patient ?event2 ?what)))"
},
{"text":"What does Mary email, fax and airmail to John?",
"kif":
"(exists (?event1 ?event2 ?event3)
  (and
    (attribute John-1 Male)
    (attribute Mary-1 Female)
    (instance John-1 Human)
    (instance Mary-1 Human)
    (agent ?event1 Mary-1)
    (destination ?event1 John-1)
    (instance ?event1 Communication)
    (agent ?event2 Mary-1)
    (destination ?event2 John-1)
    (instance ?event2 Communication)
    (agent ?event3 Mary-1)
    (destination ?event3 John-1)
    (instance ?event3 Putting)
    (instance ?what Physical)
    (patient ?event1 ?what)
    (patient ?event2 ?what)
    (patient ?event3 ?what)))"
},
{"text":"What does Mary give to John and Bill?",
"kif":
"(exists (?event)
  (and
    (attribute John-1 Male)
    (attribute Mary-1 Female)
    (attribute William-1 Male)
    (instance John-1 Human)
    (instance Mary-1 Human)
    (instance William-1 Human)
    (agent ?event Mary-1)
    (destination ?event John-1)
    (destination ?event William-1)
    (instance ?event Giving)
    (patient ?event ?what)))"
},
{"text":"What does Mary give to John, Joe and Bill?",
"kif":
"(exists (?event)
  (and
    (attribute John-1 Male)
    (attribute Joseph-1 Male)
    (attribute Mary-1 Female)
    (attribute William-1 Male)
    (instance John-1 Human)
    (instance Joseph-1 Human)
    (instance Mary-1 Human)
    (instance William-1 Human)
    (agent ?event Mary-1)
    (destination ?event John-1)
    (destination ?event Joseph-1)
    (destination ?event William-1)
    (instance ?event Giving)
    (patient ?event ?what)))"
},
{"text":"What does Mary give to John, Joe, Jim and Bill?",
"kif":
"(exists (?event)
  (and
    (attribute James-1 Male)
    (attribute John-1 Male)
    (attribute Joseph-1 Male)
    (attribute Mary-1 Female)
    (attribute William-1 Male)
    (instance James-1 Human)
    (instance John-1 Human)
    (instance Joseph-1 Human)
    (instance Mary-1 Human)
    (instance William-1 Human)
    (agent ?event Mary-1)
    (destination ?event James-1)
    (destination ?event John-1)
    (destination ?event Joseph-1)
    (destination ?event William-1)
    (instance ?event Giving)
    (patient ?event ?what)))"
},
{"text":"What do Mary and Susan email and fax to John and Joe?",
"kif":
"(exists (?event1 ?event2)
  (and
    (attribute John-1 Male)
    (attribute Joseph-1 Male)
    (attribute Mary-1 Female)
    (attribute Susan-1 Female)
    (instance John-1 Human)
    (instance Joseph-1 Human)
    (instance Mary-1 Human)
    (instance Susan-1 Human)
    (agent ?event1 Mary-1)
    (agent ?event1 Susan-1)
    (destination ?event1 John-1)
    (destination ?event1 Joseph-1)
    (instance ?event1 Communication)
    (agent ?event2 Mary-1)
    (agent ?event2 Susan-1)
    (destination ?event2 John-1)
    (destination ?event2 Joseph-1)
    (instance ?event2 Communication)
    (instance ?what Physical)
    (patient ?event1 ?what)
    (patient ?event2 ?what)))"
},
{"text":"What does Mary email and fax to John, Jim and Joe?",
"kif":
"(exists (?event1 ?event2)
  (and
    (attribute James-1 Male)
    (attribute John-1 Male)
    (attribute Joseph-1 Male)
    (attribute Mary-1 Female)
    (instance James-1 Human)
    (instance John-1 Human)
    (instance Joseph-1 Human)
    (instance Mary-1 Human)
    (agent ?event1 Mary-1)
    (destination ?event1 James-1)
    (destination ?event1 John-1)
    (destination ?event1 Joseph-1)
    (instance ?event1 Communication)
    (agent ?event2 Mary-1)
    (destination ?event2 James-1)
    (destination ?event2 John-1)
    (destination ?event2 Joseph-1)
    (instance ?event2 Communication)
    (instance ?what Physical)
    (patient ?event1 ?what)
    (patient ?event2 ?what)))"
},
{"text":"What does Mary email and fax to John, Jane, Jim and Joe?",
"kif":
"(exists (?event1 ?event2)
  (and
    (attribute James-1 Male)
    (attribute Jane-1 Female)
    (attribute John-1 Male)
    (attribute Joseph-1 Male)
    (attribute Mary-1 Female)
    (instance James-1 Human)
    (instance Jane-1 Human)
    (instance John-1 Human)
    (instance Joseph-1 Human)
    (instance Mary-1 Human)
    (agent ?event1 Mary-1)
    (destination ?event1 James-1)
    (destination ?event1 Jane-1)
    (destination ?event1 John-1)
    (destination ?event1 Joseph-1)
    (instance ?event1 Communication)
    (agent ?event2 Mary-1)
    (destination ?event2 James-1)
    (destination ?event2 Jane-1)
    (destination ?event2 John-1)
    (destination ?event2 Joseph-1)
    (instance ?event2 Communication)
    (instance ?what Physical)
    (patient ?event1 ?what)
    (patient ?event2 ?what)))"
},
{"text":"What does Mary email, fax and airmail to John and Joe?",
"kif":
"(exists (?event1 ?event2 ?event3)
  (and
    (attribute John-1 Male)
    (attribute Joseph-1 Male)
    (attribute Mary-1 Female)
    (instance John-1 Human)
    (instance Joseph-1 Human)
    (instance Mary-1 Human)
    (agent ?event1 Mary-1)
    (destination ?event1 John-1)
    (destination ?event1 Joseph-1)
    (instance ?event1 Communication)
    (agent ?event2 Mary-1)
    (destination ?event2 John-1)
    (destination ?event2 Joseph-1)
    (instance ?event2 Communication)
    (agent ?event3 Mary-1)
    (destination ?event3 John-1)
    (destination ?event3 Joseph-1)
    (instance ?event3 Putting)
    (instance ?what Physical)
    (patient ?event1 ?what)
    (patient ?event2 ?what)
    (patient ?event3 ?what)))"
},
{"text":"What does Mary email, fax and airmail to John, Jane and Joe?",
"kif":
"(exists (?event1 ?event2 ?event3)
  (and
    (attribute Jane-1 Female)
    (attribute John-1 Male)
    (attribute Joseph-1 Male)
    (attribute Mary-1 Female)
    (instance Jane-1 Human)
    (instance John-1 Human)
    (instance Joseph-1 Human)
    (instance Mary-1 Human)
    (agent ?event1 Mary-1)
    (destination ?event1 Jane-1)
    (destination ?event1 John-1)
    (destination ?event1 Joseph-1)
    (instance ?event1 Communication)
    (agent ?event2 Mary-1)
    (destination ?event2 Jane-1)
    (destination ?event2 John-1)
    (destination ?event2 Joseph-1)
    (instance ?event2 Communication)
    (agent ?event3 Mary-1)
    (destination ?event3 Jane-1)
    (destination ?event3 John-1)
    (destination ?event3 Joseph-1)
    (instance ?event3 Putting)
    (instance ?what Physical)
    (patient ?event1 ?what)
    (patient ?event2 ?what)
    (patient ?event3 ?what)))"
},
{"text":"What does Mary email, fax and airmail to John, Jane, Jim and Joe?",
"kif":
"(exists (?event1 ?event2 ?event3)
  (and
    (attribute James-1 Male)
    (attribute Jane-1 Female)
    (attribute John-1 Male)
    (attribute Joseph-1 Male)
    (attribute Mary-1 Female)
    (instance James-1 Human)
    (instance Jane-1 Human)
    (instance John-1 Human)
    (instance Joseph-1 Human)
    (instance Mary-1 Human)
    (agent ?event1 Mary-1)
    (destination ?event1 James-1)
    (destination ?event1 Jane-1)
    (destination ?event1 John-1)
    (destination ?event1 Joseph-1)
    (instance ?event1 Communication)
    (agent ?event2 Mary-1)
    (destination ?event2 James-1)
    (destination ?event2 Jane-1)
    (destination ?event2 John-1)
    (destination ?event2 Joseph-1)
    (instance ?event2 Communication)
    (agent ?event3 Mary-1)
    (destination ?event3 James-1)
    (destination ?event3 Jane-1)
    (destination ?event3 John-1)
    (destination ?event3 Joseph-1)
    (instance ?event3 Putting)
    (instance ?what Physical)
    (patient ?event1 ?what)
    (patient ?event2 ?what)
    (patient ?event3 ?what)))"
},
{"text":"The customer who emails and faxes the letter enters the bank.",
"kif":
"(exists (?bank ?customer ?event2 ?event3 ?event1 ?letter ?salesperson)
  (and
    (instance ?bank Bank-FinancialOrganization)
    (instance ?customer CognitiveAgent)
    (instance ?customer Human)
    (instance ?event2 Communication)
    (instance ?event3 Communication)
    (instance ?event1 Motion)
    (instance ?letter Letter)
    (instance ?salesperson CognitiveAgent)
    (patient ?event1 ?bank)
    (agent ?event2 ?customer)
    (agent ?event3 ?customer)
    (agent ?event1 ?customer)
    (customer ?customer ?salesperson)
    (patient ?event2 ?letter)
    (patient ?event3 ?letter)))"
},
{"text":"The customer who emails, faxes and airmails the letter enters the code.",
"kif":
"(exists (?code ?customer ?event2 ?event3 ?event4 ?event1 ?letter ?salesperson)
  (and
    (instance ?code Text)
    (instance ?customer CognitiveAgent)
    (instance ?customer Human)
    (instance ?event2 Communication)
    (instance ?event3 Communication)
    (instance ?event4 Putting)
    (instance ?event1 Motion)
    (instance ?letter Letter)
    (instance ?salesperson CognitiveAgent)
    (patient ?event1 ?code)
    (agent ?event2 ?customer)
    (agent ?event3 ?customer)
    (agent ?event4 ?customer)
    (agent ?event1 ?customer)
    (customer ?customer ?salesperson)
    (patient ?event2 ?letter)
    (patient ?event3 ?letter)
    (patient ?event4 ?letter)))"
},
{"text":"The country that designs, manufactures and sells the bomb defies the world.",
"kif":
"(exists (?bomb ?country ?event1 ?event2 ?event3 ?event4 ?world)
  (and
    (instance ?bomb Bomb)
    (instance ?country Nation)
    (instance ?country Physical)
    (instance ?event1 Planning)
    (instance ?event2 Manufacture)
    (instance ?event3 Selling)
    (instance ?event4 Contest)
    (instance ?world Human)
    (patient ?event1 ?bomb)
    (patient ?event2 ?bomb)
    (patient ?event3 ?bomb)
    (agent ?event1 ?country)
    (agent ?event2 ?country)
    (agent ?event3 ?country)
    (agent ?event4 ?country)
    (patient ?event4 ?world)))"
},
{"text":"The country that sells the bomb and the missile to the terrorist defies the world.",
"kif":
"(exists (?bomb ?country ?event1 ?event2 ?missile ?terrorist ?world)
  (and
    (instance ?bomb Bomb)
    (instance ?country Nation)
    (instance ?event1 Selling)
    (instance ?event2 Contest)
    (instance ?missile Missile)
    (attribute ?terrorist Terrorist)
    (instance ?world Human)
    (patient ?event1 ?bomb)
    (agent ?event1 ?country)
    (agent ?event2 ?country)
    (patient ?event1 ?missile)
    (destination ?event1 ?terrorist)
    (patient ?event2 ?world)))"
},
{"text":"The country that grows and sells the opium denies the fact.",
"kif":
"(exists (?country ?event1 ?event2 ?event3 ?fact ?opium)
  (and
    (instance ?country Nation)
    (instance ?country Physical)
    (instance ?event1 Growth)
    (instance ?event2 Selling)
    (instance ?event3 Stating)
    (instance ?fact Fact)
    (instance ?opium Opium)
    (agent ?event1 ?country)
    (agent ?event2 ?country)
    (agent ?event3 ?country)
    (patient ?event1 ?opium)
    (patient ?event2 ?opium)
    (patient ?event3 ?fact)))"
},
{"text":"Joe enters the bank that Bob and Mary email and fax a letter to.",
"kif":
"(exists (?bank ?event1 ?event2 ?event3 ?letter)
  (and
    (attribute Joseph-1 Male)
    (attribute Mary-1 Female)
    (attribute Robert-1 Male)
    (instance Joseph-1 Human)
    (instance Mary-1 Human)
    (instance Robert-1 Human)
    (instance ?bank Bank-FinancialOrganization)
    (instance ?bank Physical)
    (agent ?event1 Joseph-1)
    (instance ?event1 Motion)
    (agent ?event2 Mary-1)
    (agent ?event2 Robert-1)
    (instance ?event2 Communication)
    (agent ?event3 Mary-1)
    (agent ?event3 Robert-1)
    (instance ?event3 Communication)
    (instance ?letter Letter)
    (patient ?event1 ?bank)
    (destination ?event2 ?bank)
    (destination ?event3 ?bank)
    (patient ?event2 ?letter)
    (patient ?event3 ?letter)))"
},
{"text":"Joe inserts the card that Bob and Mary give to Jim.",
"kif":
"(exists (?card ?event1 ?event2)
  (and
    (attribute James-1 Male)
    (attribute Joseph-1 Male)
    (attribute Mary-1 Female)
    (attribute Robert-1 Male)
    (instance James-1 Human)
    (instance Joseph-1 Human)
    (instance Mary-1 Human)
    (instance Robert-1 Human)
    (instance ?card BankCard)
    (agent ?event1 Joseph-1)
    (instance ?event1 Putting)
    (agent ?event2 Mary-1)
    (agent ?event2 Robert-1)
    (destination ?event2 James-1)
    (instance ?event2 Giving)
    (patient ?event1 ?card)
    (patient ?event2 ?card)))"
},
{"text":"Since when does the train arrive and stop?",
"kif":
"(exists (?event1 ?event2 ?train)
  (and
    (instance ?event1 Arriving)
    (instance ?event2 IntentionalProcess)
    (equal
      (BeginFn
        (WhenFn ?event1)) ?since_when)
    (equal
      (BeginFn
        (WhenFn ?event2)) ?since_when)
    (instance ?train Train)
    (patient ?event1 ?train)
    (patient ?event2 ?train)))"
},
{"text":"Since when does Mexico design, manufacture and sell the fabric?",
"kif":
"(exists (?event1 ?event2 ?event3 ?fabric)
  (and
    (agent ?event1 Mexico)
    (instance ?event1 Planning)
    (agent ?event2 Mexico)
    (instance ?event2 Manufacture)
    (agent ?event3 Mexico)
    (instance ?event3 Selling)
    (instance ?fabric Fabric)
    (equal
      (BeginFn
        (WhenFn ?event1)) ?since_when)
    (equal
      (BeginFn
        (WhenFn ?event2)) ?since_when)
    (equal
      (BeginFn
        (WhenFn ?event3)) ?since_when)
    (patient ?event1 ?fabric)
    (patient ?event2 ?fabric)
    (patient ?event3 ?fabric)))"
},
{"text":"Since when do Bob and Mary buy the house?",
"kif":
"(exists (?event ?house)
  (and
    (attribute Mary-1 Female)
    (attribute Robert-1 Male)
    (instance Mary-1 Human)
    (instance Robert-1 Human)
    (agent ?event Mary-1)
    (agent ?event Robert-1)
    (instance ?event Buying)
    (instance ?house House)
    (equal
      (BeginFn
        (WhenFn ?event)) ?since_when)
    (patient ?event ?house)))"
},
{"text":"Since when do Bob, Mary and Jim play the basketball?",
"kif":
"(exists (?basketball ?event)
  (and
    (attribute James-1 Male)
    (attribute Mary-1 Female)
    (attribute Robert-1 Male)
    (instance James-1 Human)
    (instance Mary-1 Human)
    (instance Robert-1 Human)
    (instance ?basketball Basketball)
    (agent ?event James-1)
    (agent ?event Mary-1)
    (agent ?event Robert-1)
    (instance ?event Game)
    (equal
      (BeginFn
        (WhenFn ?event)) ?since_when)
    (patient ?event ?basketball)))"
},
{"text":"How long do Bob, Mary, Jane and Jim play the tennis?",
"kif":
"(exists (?event ?tennis)
  (and
    (attribute James-1 Male)
    (attribute Jane-1 Female)
    (attribute Mary-1 Female)
    (attribute Robert-1 Male)
    (instance James-1 Human)
    (instance Jane-1 Human)
    (instance Mary-1 Human)
    (instance Robert-1 Human)
    (agent ?event James-1)
    (agent ?event Jane-1)
    (agent ?event Mary-1)
    (agent ?event Robert-1)
    (instance ?event Game)
    (duration
      (WhenFn ?event) ?how_long)
    (instance ?tennis Sport)
    (patient ?event ?tennis)))"
},
{"text":"Since when do Bob and Mary walk and talk?",
"kif":
"(exists (?event1 ?event2)
  (and
    (attribute Mary-1 Female)
    (attribute Robert-1 Male)
    (instance Mary-1 Human)
    (instance Robert-1 Human)
    (agent ?event1 Mary-1)
    (agent ?event1 Robert-1)
    (instance ?event1 Walking)
    (agent ?event2 Mary-1)
    (agent ?event2 Robert-1)
    (instance ?event2 Speaking)
    (equal
      (BeginFn
        (WhenFn ?event1)) ?since_when)
    (equal
      (BeginFn
        (WhenFn ?event2)) ?since_when)))"
},
{"text":"Until when do Bob, Joe and Mary walk and talk?",
"kif":
"(exists (?event1 ?event2)
  (and
    (attribute Joseph-1 Male)
    (attribute Mary-1 Female)
    (attribute Robert-1 Male)
    (instance Joseph-1 Human)
    (instance Mary-1 Human)
    (instance Robert-1 Human)
    (agent ?event1 Joseph-1)
    (agent ?event1 Mary-1)
    (agent ?event1 Robert-1)
    (instance ?event1 Walking)
    (agent ?event2 Joseph-1)
    (agent ?event2 Mary-1)
    (agent ?event2 Robert-1)
    (instance ?event2 Speaking)
    (equal
      (EndFn
        (WhenFn ?event1)) ?until_when)
    (equal
      (EndFn
        (WhenFn ?event2)) ?until_when)))"
},
{"text":"Since when do Mary, Jane, Joe and John sit and eat?",
"kif":
"(exists (?event1 ?event2)
  (and
    (attribute Jane-1 Female)
    (attribute John-1 Male)
    (attribute Joseph-1 Male)
    (attribute Mary-1 Female)
    (instance Jane-1 Human)
    (instance John-1 Human)
    (instance Joseph-1 Human)
    (instance Mary-1 Human)
    (agent ?event1 Jane-1)
    (agent ?event1 John-1)
    (agent ?event1 Joseph-1)
    (agent ?event1 Mary-1)
    (instance ?event1 SittingDown)
    (agent ?event2 Jane-1)
    (agent ?event2 John-1)
    (agent ?event2 Joseph-1)
    (agent ?event2 Mary-1)
    (instance ?event2 Eating)
    (equal
      (BeginFn
        (WhenFn ?event1)) ?since_when)
    (equal
      (BeginFn
        (WhenFn ?event2)) ?since_when)))"
},
{"text":"How long do Germany and France design, manufacture and sell the machine?",
"kif":
"(exists (?event1 ?event2 ?event3 ?machine)
  (and
    (agent ?event1 France)
    (agent ?event1 Germany)
    (instance ?event1 Planning)
    (agent ?event2 France)
    (agent ?event2 Germany)
    (instance ?event2 Manufacture)
    (agent ?event3 France)
    (agent ?event3 Germany)
    (instance ?event3 Selling)
    (duration
      (WhenFn ?event1) ?how_long)
    (duration
      (WhenFn ?event2) ?how_long)
    (duration
      (WhenFn ?event3) ?how_long)
    (instance ?machine Device)
    (patient ?event1 ?machine)
    (patient ?event2 ?machine)
    (patient ?event3 ?machine)))"
},
{"text":"How long do Britain, Germany and France design, manufacture and sell the machine?",
"kif":
"(exists (?event1 ?event2 ?event3 ?machine)
  (and
    (agent ?event1 France)
    (agent ?event1 Germany)
    (agent ?event1 UnitedKingdomOfGreatBritainAndNorthernIreland)
    (instance ?event1 Planning)
    (agent ?event2 France)
    (agent ?event2 Germany)
    (agent ?event2 UnitedKingdomOfGreatBritainAndNorthernIreland)
    (instance ?event2 Manufacture)
    (agent ?event3 France)
    (agent ?event3 Germany)
    (agent ?event3 UnitedKingdomOfGreatBritainAndNorthernIreland)
    (instance ?event3 Selling)
    (duration
      (WhenFn ?event1) ?how_long)
    (duration
      (WhenFn ?event2) ?how_long)
    (duration
      (WhenFn ?event3) ?how_long)
    (instance ?machine Device)
    (patient ?event1 ?machine)
    (patient ?event2 ?machine)
    (patient ?event3 ?machine)))"
},
{"text":"Until when do Britain, Germany, Italy and France design, manufacture and sell the machine?",
"kif":
"(exists (?event1 ?event2 ?event3 ?machine)
  (and
    (agent ?event1 France)
    (agent ?event1 Germany)
    (agent ?event1 Italy)
    (agent ?event1 UnitedKingdomOfGreatBritainAndNorthernIreland)
    (instance ?event1 Planning)
    (agent ?event2 France)
    (agent ?event2 Germany)
    (agent ?event2 Italy)
    (agent ?event2 UnitedKingdomOfGreatBritainAndNorthernIreland)
    (instance ?event2 Manufacture)
    (agent ?event3 France)
    (agent ?event3 Germany)
    (agent ?event3 Italy)
    (agent ?event3 UnitedKingdomOfGreatBritainAndNorthernIreland)
    (instance ?event3 Selling)
    (instance ?machine Device)
    (equal
      (EndFn
        (WhenFn ?event1)) ?until_when)
    (equal
      (EndFn
        (WhenFn ?event2)) ?until_when)
    (equal
      (EndFn
        (WhenFn ?event3)) ?until_when)
    (patient ?event1 ?machine)
    (patient ?event2 ?machine)
    (patient ?event3 ?machine)))"
},
{"text":"How long do Britain and France not manufacture and sell the machine?",
"kif":
"(not
  (exists (?event1 ?event2 ?machine)
    (and
      (agent ?event1 France)
      (agent ?event1 UnitedKingdomOfGreatBritainAndNorthernIreland)
      (instance ?event1 Manufacture)
      (agent ?event2 France)
      (agent ?event2 UnitedKingdomOfGreatBritainAndNorthernIreland)
      (instance ?event2 Selling)
      (duration
        (WhenFn ?event1) ?how_long)
      (duration
        (WhenFn ?event2) ?how_long)
      (instance ?machine Device)
      (patient ?event1 ?machine)
      (patient ?event2 ?machine))))"
},
{"text":"How long do Britain and France not manufacture and sell the car and the engine?",
"kif":
"(not
  (exists (?car ?engine ?event1 ?event2)
    (and
      (instance ?car Automobile)
      (instance ?engine Machine)
      (agent ?event1 France)
      (agent ?event1 UnitedKingdomOfGreatBritainAndNorthernIreland)
      (instance ?event1 Manufacture)
      (agent ?event2 France)
      (agent ?event2 UnitedKingdomOfGreatBritainAndNorthernIreland)
      (instance ?event2 Selling)
      (duration
        (WhenFn ?event1) ?how_long)
      (duration
        (WhenFn ?event2) ?how_long)
      (patient ?event1 ?car)
      (patient ?event2 ?car)
      (patient ?event1 ?engine)
      (patient ?event2 ?engine))))"
},
{"text":"How long do Bob, Mary, Jane and Jim not play the tennis?",
"kif":
"(not
  (exists (?event ?tennis)
    (and
      (attribute James-1 Male)
      (attribute Jane-1 Female)
      (attribute Mary-1 Female)
      (attribute Robert-1 Male)
      (instance James-1 Human)
      (instance Jane-1 Human)
      (instance Mary-1 Human)
      (instance Robert-1 Human)
      (agent ?event James-1)
      (agent ?event Jane-1)
      (agent ?event Mary-1)
      (agent ?event Robert-1)
      (instance ?event Game)
      (duration
        (WhenFn ?event) ?how_long)
      (instance ?tennis Sport)
      (patient ?event ?tennis))))"
},
{"text":"Where do Bob and Mary insert the card into?",
"kif":
"(exists (?card ?event)
  (and
    (attribute Mary-1 Female)
    (attribute Robert-1 Male)
    (instance Mary-1 Human)
    (instance Robert-1 Human)
    (instance ?card BankCard)
    (agent ?event Mary-1)
    (agent ?event Robert-1)
    (instance ?event Putting)
    (patient ?event ?card)
    (destination ?event ?where_into)))"
},
{"text":"Where do Bob and Jim email and fax the letter to?",
"kif":
"(exists (?event1 ?event2 ?letter)
  (and
    (attribute James-1 Male)
    (attribute Robert-1 Male)
    (instance James-1 Human)
    (instance Robert-1 Human)
    (agent ?event1 James-1)
    (agent ?event1 Robert-1)
    (instance ?event1 Communication)
    (agent ?event2 James-1)
    (agent ?event2 Robert-1)
    (instance ?event2 Communication)
    (instance ?letter Letter)
    (patient ?event1 ?letter)
    (destination ?event1 ?where_to)
    (patient ?event2 ?letter)
    (destination ?event2 ?where_to)))"
},
{"text":"Where do Bob and Mary not send the book to?",
"kif":
"(not
  (exists (?book ?event)
    (and
      (attribute Mary-1 Female)
      (attribute Robert-1 Male)
      (instance Mary-1 Human)
      (instance Robert-1 Human)
      (instance ?book Book)
      (agent ?event Mary-1)
      (agent ?event Robert-1)
      (instance ?event Transfer)
      (patient ?event ?book)
      (destination ?event ?where_to))))"
},
{"text":"Where do the rain and the snow start from?",
"kif":
"(exists (?event ?rain ?snow)
  (and
    (instance ?event Process)
    (instance ?rain Raining)
    (instance ?snow Snowing)
    (patient ?event ?rain)
    (patient ?event ?snow)
    (origin ?event ?where_from)))"
},
{"text":"Where do the fire and the smoke arrive and spread from?",
"kif":
"(exists (?event1 ?event2 ?fire ?smoke)
  (and
    (instance ?event1 Arriving)
    (instance ?event2 Translocation)
    (instance ?fire Fire)
    (instance ?smoke Smoke)
    (patient ?event1 ?fire)
    (patient ?event1 ?smoke)
    (origin ?event1 ?where_from)
    (patient ?event2 ?fire)
    (patient ?event2 ?smoke)
    (origin ?event2 ?where_from)))"
},
{"text":"From where do the rain and the snow start?",
"kif":
"(exists (?event ?rain ?snow)
  (and
    (instance ?event Process)
    (instance ?rain Raining)
    (instance ?snow Snowing)
    (origin ?event ?from_where)
    (patient ?event ?rain)
    (patient ?event ?snow)))"
},
{"text":"From where do Bob, Mary, Jim and Jane buy and rent the engine and the tool?",
"kif":
"(exists (?engine ?event1 ?event2 ?tool)
  (and
    (attribute James-1 Male)
    (attribute Jane-1 Female)
    (attribute Mary-1 Female)
    (attribute Robert-1 Male)
    (instance James-1 Human)
    (instance Jane-1 Human)
    (instance Mary-1 Human)
    (instance Robert-1 Human)
    (instance ?engine Machine)
    (agent ?event1 James-1)
    (agent ?event1 Jane-1)
    (agent ?event1 Mary-1)
    (agent ?event1 Robert-1)
    (instance ?event1 Buying)
    (agent ?event2 James-1)
    (agent ?event2 Jane-1)
    (agent ?event2 Mary-1)
    (agent ?event2 Robert-1)
    (instance ?event2 Renting)
    (instance ?tool Device)
    (patient ?event1 ?engine)
    (patient ?event2 ?engine)
    (origin ?event1 ?from_where)
    (patient ?event1 ?tool)
    (origin ?event2 ?from_where)
    (patient ?event2 ?tool)))"
},
{"text":"Where are Bob and Mary?",
"kif":
"(and
  (attribute Mary-1 Female)
  (attribute Robert-1 Male)
  (instance Mary-1 Human)
  (instance Robert-1 Human)
  (located Mary-1 ?where)
  (located Robert-1 ?where))"
},
{"text":"When are the lunch and the seminar?",
"kif":
"(exists (?lunch ?seminar)
  (and
    (instance ?lunch Eating)
    (instance ?seminar Meeting)
    (equal
      (BeginFn
        (WhenFn ?lunch)) ?when)
    (equal
      (BeginFn
        (WhenFn ?seminar)) ?when)))"
},
{"text":"Where are the gym, the library and the studio?",
"kif":
"(exists (?gym ?library ?studio)
  (and
    (instance ?gym SportsFacility)
    (instance ?library Room)
    (instance ?studio ArtStudio)
    (located ?gym ?where)
    (located ?library ?where)
    (located ?studio ?where)))"
},
{"text":"How are the ceremony, the speech, the firework and the parade?",
"kif":
"(exists (?ceremony ?firework ?parade ?speech)
  (and
    (instance ?ceremony FormalMeeting)
    (instance ?firework ExplosiveDevice)
    (instance ?parade Motion)
    (instance ?speech Lecture)
    (manner ?ceremony ?how)
    (manner ?firework ?how)
    (manner ?parade ?how)
    (manner ?speech ?how)))"
},
{"text":"How often are the train and the bus?",
"kif":
"(exists (?bus ?train)
  (and
    (instance ?bus PassengerVehicle)
    (instance ?train Train)
    (frequency ?bus ?how_often)
    (frequency ?train ?how_often)))"
},
{"text":"How long are the movie, the drama and the opera?",
"kif":
"(exists (?drama ?movie ?opera)
  (and
    (instance ?drama DramaticPlay)
    (duration
      (WhenFn ?drama) ?how_long)
    (duration
      (WhenFn ?movie) ?how_long)
    (duration
      (WhenFn ?opera) ?how_long)
    (instance ?movie MotionPicture)
    (instance ?opera Opera)))"
},
{"text":"A car and a bicycle of the policeman are at the park.",
"kif":
"(exists (?bicycle ?car ?park ?policeman)
  (and
    (instance ?bicycle Bicycle)
    (instance ?car Automobile)
    (instance ?park PublicPark)
    (attribute ?policeman PoliceOfficer)
    (located ?bicycle ?park)
    (possesses ?policeman ?bicycle)
    (located ?car ?park)
    (possesses ?policeman ?car)))"
},
{"text":"Bob's card and money are in the bank.",
"kif":
"(exists (?bank ?card ?money)
  (and
    (attribute Robert-1 Male)
    (instance Robert-1 Human)
    (instance ?bank Bank-FinancialOrganization)
    (instance ?card BankCard)
    (possesses Robert-1 ?card)
    (instance ?money Currency)
    (possesses Robert-1 ?money)
    (located ?card ?bank)
    (located ?money ?bank)))"
},
{"text":"Mary's food, wine and juice are good.",
"kif":
"(exists (?food ?juice ?wine)
  (and
    (attribute Mary-1 Female)
    (instance Mary-1 Human)
    (attribute ?food SubjectiveAssessmentAttribute)
    (instance ?food Food)
    (possesses Mary-1 ?food)
    (attribute ?juice SubjectiveAssessmentAttribute)
    (instance ?juice Beverage)
    (possesses Mary-1 ?juice)
    (attribute ?wine SubjectiveAssessmentAttribute)
    (instance ?wine Wine)
    (possesses Mary-1 ?wine)))"
},
{"text":"A lion, a dog, an elephant and a monkey of the circus run on the street.",
"kif":
"(exists (?circus ?dog ?elephant ?event ?lion ?monkey ?street)
  (and
    (instance ?circus Group)
    (instance ?dog Canine)
    (instance ?elephant Elephant)
    (instance ?event Walking)
    (instance ?lion Feline)
    (instance ?monkey Monkey)
    (instance ?street Roadway)
    (possesses ?circus ?dog)
    (possesses ?circus ?elephant)
    (possesses ?circus ?lion)
    (possesses ?circus ?monkey)
    (agent ?event ?dog)
    (agent ?event ?elephant)
    (agent ?event ?lion)
    (agent ?event ?monkey)
    (destination ?event ?street)))"
},
{"text":"Are a lion and a monkey of the circus at the park?",
"kif":
"(exists (?circus ?lion ?monkey ?park)
  (and
    (instance ?circus Group)
    (instance ?lion Feline)
    (instance ?monkey Monkey)
    (instance ?park PublicPark)
    (possesses ?circus ?lion)
    (possesses ?circus ?monkey)
    (located ?lion ?park)
    (located ?monkey ?park)))"
},
{"text":"Bob gives the money and the card of Mary to John.",
"kif":
"(exists (?card ?event ?money)
  (and
    (attribute John-1 Male)
    (attribute Mary-1 Female)
    (attribute Robert-1 Male)
    (instance John-1 Human)
    (instance Mary-1 Human)
    (instance Robert-1 Human)
    (instance ?card BankCard)
    (possesses Mary-1 ?card)
    (agent ?event Robert-1)
    (destination ?event John-1)
    (instance ?event Giving)
    (instance ?money Currency)
    (possesses Mary-1 ?money)
    (patient ?event ?card)
    (patient ?event ?money)))"
},
{"text":"Bob gives Mary's card and money to John.",
"kif":
"(exists (?card ?event ?money)
  (and
    (attribute John-1 Male)
    (attribute Mary-1 Female)
    (attribute Robert-1 Male)
    (instance John-1 Human)
    (instance Mary-1 Human)
    (instance Robert-1 Human)
    (instance ?card BankCard)
    (possesses Mary-1 ?card)
    (agent ?event Robert-1)
    (destination ?event John-1)
    (instance ?event Giving)
    (instance ?money Currency)
    (possesses Mary-1 ?money)
    (patient ?event ?card)
    (patient ?event ?money)))"
},
{"text":"The United Nations sells Iraq's natural gas and petroleum to Turkey and Israel.",
"kif":
"(exists (?event ?natural_gas ?petroleum)
  (and
    (agent ?event UnitedNations)
    (destination ?event Israel)
    (destination ?event Turkey)
    (instance ?event Selling)
    (attribute ?natural_gas Gas)
    (possesses Iraq ?natural_gas)
    (instance ?petroleum Substance)
    (possesses Iraq ?petroleum)
    (patient ?event ?natural_gas)
    (patient ?event ?petroleum)))"
},
{"text":"The rebel sells the diamond, mineral and coal of South Africa to Europe.",
"kif":
"(exists (?coal ?diamond ?event ?mineral ?rebel)
  (and
    (instance South_Africa Nation)
    (instance ?coal Coal)
    (possesses South_Africa ?coal)
    (instance ?diamond Diamond)
    (possesses South_Africa ?diamond)
    (destination ?event Europe)
    (instance ?event Selling)
    (instance ?mineral Mineral)
    (possesses South_Africa ?mineral)
    (attribute ?rebel SocialRole)
    (patient ?event ?coal)
    (patient ?event ?diamond)
    (patient ?event ?mineral)
    (agent ?event ?rebel)))"
},
{"text":"The slave driver ships Africa's slave, diamond, mineral and coal to America.",
"kif":
"(exists (?coal ?diamond ?event ?mineral ?slave ?slave_driver)
  (and
    (instance ?coal Coal)
    (part ?coal Africa)
    (instance ?diamond Diamond)
    (part ?diamond Africa)
    (destination ?event UnitedStates)
    (instance ?event Transfer)
    (instance ?mineral Mineral)
    (part ?mineral Africa)
    (instance ?slave HumanSlave)
    (part ?slave Africa)
    (instance ?slave_driver Position)
    (patient ?event ?coal)
    (patient ?event ?diamond)
    (patient ?event ?mineral)
    (patient ?event ?slave)
    (agent ?event ?slave_driver)))"
},
{"text":"The host gives a meal to the chief and the crew of the convoy.",
"kif":
"(exists (?chief ?convoy ?crew ?event ?host ?meal)
  (and
    (attribute ?chief SocialRole)
    (instance ?convoy Convoy)
    (instance ?crew GroupOfPeople)
    (instance ?event Giving)
    (attribute ?host SocialRole)
    (instance ?meal Eating)
    (operator ?chief ?convoy)
    (destination ?event ?chief)
    (part ?crew ?convoy)
    (destination ?event ?crew)
    (agent ?event ?host)
    (patient ?event ?meal)))"
},
{"text":"The agency gives a meal and a shelter to the chief, the elderly and the youngster of the tribe.",
"kif":
"(exists (?agency ?chief ?elderly ?event ?meal ?shelter ?tribe ?youngster)
  (and
    (instance ?agency PoliticalOrganization)
    (attribute ?chief SocialRole)
    (instance ?elderly Human)
    (instance ?event Giving)
    (instance ?meal Eating)
    (instance ?shelter Building)
    (instance ?tribe Group)
    (attribute ?youngster NonFullyFormed)
    (instance ?youngster Human)
    (agent ?event ?agency)
    (destination ?event ?chief)
    (operator ?chief ?tribe)
    (destination ?event ?elderly)
    (possesses ?tribe ?elderly)
    (patient ?event ?meal)
    (patient ?event ?shelter)
    (destination ?event ?youngster)
    (possesses ?tribe ?youngster)))"
},
{"text":"The agency gives the woman, the elderly, the youngster and the sick of the tribe a shelter.",
"kif":
"(exists (?agency ?elderly ?event ?shelter ?sick ?tribe ?woman ?youngster)
  (and
    (instance ?agency PoliticalOrganization)
    (instance ?elderly Human)
    (instance ?event Giving)
    (instance ?shelter Building)
    (instance ?sick Human)
    (instance ?tribe Group)
    (instance ?woman Woman)
    (attribute ?youngster NonFullyFormed)
    (instance ?youngster Human)
    (agent ?event ?agency)
    (destination ?event ?elderly)
    (possesses ?tribe ?elderly)
    (patient ?event ?shelter)
    (destination ?event ?sick)
    (destination ?event ?woman)
    (destination ?event ?youngster)
    (possesses ?tribe ?sick)
    (possesses ?tribe ?woman)
    (possesses ?tribe ?youngster)))"
},
{"text":"The company trades Africa's diamond, gold, copper and coal.",
"kif":
"(exists (?coal ?company ?copper ?diamond ?event ?gold)
  (and
    (instance ?coal Coal)
    (part ?coal Africa)
    (instance ?company Corporation)
    (instance ?copper Copper)
    (part ?copper Africa)
    (instance ?diamond Diamond)
    (part ?diamond Africa)
    (instance ?event Transaction)
    (instance ?gold Metal)
    (part ?gold Africa)
    (patient ?event ?coal)
    (agent ?event ?company)
    (patient ?event ?copper)
    (patient ?event ?diamond)
    (patient ?event ?gold)))"
},
{"text":"The agency buys and sells Middle East's coal and petroleum.",
"kif":
"(exists (?agency ?coal ?event1 ?event2 ?petroleum)
  (and
    (instance Middle_East LandArea)
    (instance ?agency PoliticalOrganization)
    (instance ?coal Coal)
    (part ?coal Middle_East)
    (instance ?event1 Buying)
    (instance ?event2 Selling)
    (instance ?petroleum Substance)
    (part ?petroleum Middle_East)
    (agent ?event1 ?agency)
    (agent ?event2 ?agency)
    (patient ?event1 ?coal)
    (patient ?event2 ?coal)
    (patient ?event1 ?petroleum)
    (patient ?event2 ?petroleum)))"
},
{"text":"The troop of France and Britain entered Paris.",
"kif":
"(exists (?event ?troop)
  (and
    (instance ?event Motion)
    (patient ?event ParisFrance)
    (attribute ?troop Soldier)
    (operator ?troop France)
    (operator ?troop UnitedKingdomOfGreatBritainAndNorthernIreland)
    (agent ?event ?troop)))"
},
{"text":"France and Britain's troop entered Paris.",
"kif":
"(exists (?event ?troop)
  (and
    (instance ?event Motion)
    (patient ?event ParisFrance)
    (attribute ?troop Soldier)
    (operator ?troop France)
    (operator ?troop UnitedKingdomOfGreatBritainAndNorthernIreland)
    (agent ?event ?troop)))"
},
{"text":"The dog of Bob and Mary is at the park.",
"kif":
"(exists (?dog ?park)
  (and
    (attribute Mary-1 Female)
    (attribute Robert-1 Male)
    (instance Mary-1 Human)
    (instance Robert-1 Human)
    (instance ?dog Canine)
    (possesses Mary-1 ?dog)
    (possesses Robert-1 ?dog)
    (instance ?park PublicPark)
    (located ?dog ?park)))"
},
{"text":"John and Mary's dog likes Bob and Jane's cat.",
"kif":
"(exists (?cat ?dog)
  (and
    (attribute Jane-1 Female)
    (attribute John-1 Male)
    (attribute Mary-1 Female)
    (attribute Robert-1 Male)
    (instance Jane-1 Human)
    (instance John-1 Human)
    (instance Mary-1 Human)
    (instance Robert-1 Human)
    (instance ?cat Feline)
    (possesses Jane-1 ?cat)
    (possesses Robert-1 ?cat)
    (instance ?dog Canine)
    (possesses John-1 ?dog)
    (possesses Mary-1 ?dog)
    (enjoys ?dog ?cat)))"
},
{"text":"The troop of Britain, France and Germany entered the city.",
"kif":
"(exists (?city ?event ?troop)
  (and
    (instance ?city City)
    (instance ?event Motion)
    (attribute ?troop Soldier)
    (operator ?troop France)
    (operator ?troop Germany)
    (operator ?troop UnitedKingdomOfGreatBritainAndNorthernIreland)
    (patient ?event ?city)
    (agent ?event ?troop)))"
},
{"text":"Bob, Jim and John's dog likes candy.",
"kif":
"(exists (?candy ?dog)
  (and
    (attribute James-1 Male)
    (attribute John-1 Male)
    (attribute Robert-1 Male)
    (instance James-1 Human)
    (instance John-1 Human)
    (instance Robert-1 Human)
    (instance ?candy Food)
    (instance ?dog Canine)
    (possesses James-1 ?dog)
    (possesses John-1 ?dog)
    (possesses Robert-1 ?dog)
    (enjoys ?dog ?candy)))"
},
{"text":"Does the agency buy and sell Middle East's coal and petroleum?",
"kif":
"(exists (?agency ?coal ?event1 ?event2 ?petroleum)
  (and
    (instance Middle_East LandArea)
    (instance ?agency PoliticalOrganization)
    (instance ?coal Coal)
    (part ?coal Middle_East)
    (instance ?event1 Buying)
    (instance ?event2 Selling)
    (instance ?petroleum Substance)
    (part ?petroleum Middle_East)
    (agent ?event1 ?agency)
    (agent ?event2 ?agency)
    (patient ?event1 ?coal)
    (patient ?event2 ?coal)
    (patient ?event1 ?petroleum)
    (patient ?event2 ?petroleum)))"
},
{"text":"Which company trades Africa's diamond, gold, copper and coal?",
"kif":
"(exists (?coal ?copper ?diamond ?event ?gold)
  (and
    (instance ?coal Coal)
    (part ?coal Africa)
    (instance ?company Corporation)
    (instance ?copper Copper)
    (part ?copper Africa)
    (instance ?diamond Diamond)
    (part ?diamond Africa)
    (instance ?event Transaction)
    (instance ?gold Metal)
    (part ?gold Africa)
    (patient ?event ?coal)
    (agent ?event ?company)
    (patient ?event ?copper)
    (patient ?event ?diamond)
    (patient ?event ?gold)))"
},
{"text":"Since when does the slave driver ship Africa's slave, diamond, mineral and coal to America?",
"kif":
"(exists (?coal ?diamond ?event ?mineral ?slave ?slave_driver)
  (and
    (instance ?coal Coal)
    (part ?coal Africa)
    (instance ?diamond Diamond)
    (part ?diamond Africa)
    (destination ?event UnitedStates)
    (instance ?event Transfer)
    (instance ?mineral Mineral)
    (part ?mineral Africa)
    (equal
      (BeginFn
        (WhenFn ?event)) ?since_when)
    (instance ?slave HumanSlave)
    (part ?slave Africa)
    (instance ?slave_driver Position)
    (patient ?event ?coal)
    (patient ?event ?diamond)
    (patient ?event ?mineral)
    (patient ?event ?slave)
    (agent ?event ?slave_driver)))"
},
{"text":"Who gives the money and the card of Mary to John?",
"kif":
"(exists (?card ?event ?money)
  (and
    (attribute John-1 Male)
    (attribute Mary-1 Female)
    (instance John-1 Human)
    (instance Mary-1 Human)
    (instance ?card BankCard)
    (possesses Mary-1 ?card)
    (destination ?event John-1)
    (instance ?event Giving)
    (instance ?money Currency)
    (possesses Mary-1 ?money)
    (instance ?who Human)
    (patient ?event ?card)
    (patient ?event ?money)
    (agent ?event ?who)))"
},
{"text":"Who gives Mary's card and money to John?",
"kif":
"(exists (?card ?event ?money)
  (and
    (attribute John-1 Male)
    (attribute Mary-1 Female)
    (instance John-1 Human)
    (instance Mary-1 Human)
    (instance ?card BankCard)
    (possesses Mary-1 ?card)
    (destination ?event John-1)
    (instance ?event Giving)
    (instance ?money Currency)
    (possesses Mary-1 ?money)
    (instance ?who Human)
    (patient ?event ?card)
    (patient ?event ?money)
    (agent ?event ?who)))"
},
{"text":"Who does Bob give Mary's card and money to?",
"kif":
"(exists (?card ?event ?money)
  (and
    (attribute Mary-1 Female)
    (attribute Robert-1 Male)
    (instance Mary-1 Human)
    (instance Robert-1 Human)
    (instance ?card BankCard)
    (possesses Mary-1 ?card)
    (agent ?event Robert-1)
    (instance ?event Giving)
    (instance ?money Currency)
    (possesses Mary-1 ?money)
    (patient ?event ?card)
    (patient ?event ?money)
    (destination ?event ?who)))"
},
{"text":"How long does the United Nations sell Iraq's natural gas and petroleum to Turkey and Israel?",
"kif":
"(exists (?event ?natural_gas ?petroleum)
  (and
    (agent ?event UnitedNations)
    (destination ?event Israel)
    (destination ?event Turkey)
    (instance ?event Selling)
    (duration
      (WhenFn ?event) ?how_long)
    (attribute ?natural_gas Gas)
    (possesses Iraq ?natural_gas)
    (instance ?petroleum Substance)
    (possesses Iraq ?petroleum)
    (patient ?event ?natural_gas)
    (patient ?event ?petroleum)))"
},
{"text":"Until when does the agency buy and sell Middle East's coal and petroleum?",
"kif":
"(exists (?agency ?coal ?event1 ?event2 ?petroleum)
  (and
    (instance Middle_East LandArea)
    (instance ?agency PoliticalOrganization)
    (instance ?coal Coal)
    (part ?coal Middle_East)
    (instance ?event1 Buying)
    (instance ?event2 Selling)
    (instance ?petroleum Substance)
    (part ?petroleum Middle_East)
    (equal
      (EndFn
        (WhenFn ?event1)) ?until_when)
    (equal
      (EndFn
        (WhenFn ?event2)) ?until_when)
    (agent ?event1 ?agency)
    (agent ?event2 ?agency)
    (patient ?event1 ?coal)
    (patient ?event2 ?coal)
    (patient ?event1 ?petroleum)
    (patient ?event2 ?petroleum)))"
},
{"text":"When does the troop of Britain, France and Germany enter the city?",
"kif":
"(exists (?city ?event ?troop)
  (and
    (instance ?city City)
    (instance ?event Motion)
    (attribute ?troop Soldier)
    (operator ?troop France)
    (operator ?troop Germany)
    (operator ?troop UnitedKingdomOfGreatBritainAndNorthernIreland)
    (equal
      (BeginFn
        (WhenFn ?event)) ?when)
    (patient ?event ?city)
    (agent ?event ?troop)))"
},
{"text":"Until when does the agency buy and sell the coal and petroleum of Iraq and Kuwait?",
"kif":
"(exists (?agency ?coal ?event1 ?event2 ?petroleum)
  (and
    (instance Kuwait City)
    (instance ?agency PoliticalOrganization)
    (instance ?coal Coal)
    (possesses Iraq ?coal)
    (possesses Kuwait ?coal)
    (instance ?event1 Buying)
    (instance ?event2 Selling)
    (instance ?petroleum Substance)
    (possesses Iraq ?petroleum)
    (possesses Kuwait ?petroleum)
    (equal
      (EndFn
        (WhenFn ?event1)) ?until_when)
    (equal
      (EndFn
        (WhenFn ?event2)) ?until_when)
    (agent ?event1 ?agency)
    (agent ?event2 ?agency)
    (patient ?event1 ?coal)
    (patient ?event2 ?coal)
    (patient ?event1 ?petroleum)
    (patient ?event2 ?petroleum)))"
},
{"text":"The troop of Britain, France, Germany and Italy occupied the city.",
"kif":
"(exists (?city ?troop)
  (and
    (instance ?city City)
    (attribute ?troop Soldier)
    (operator ?troop France)
    (operator ?troop Germany)
    (operator ?troop Italy)
    (operator ?troop UnitedKingdomOfGreatBritainAndNorthernIreland)
    (inhabits ?troop ?city)))"
},
{"text":"Jim likes Bob, Mary, Bill and Susan's house.",
"kif":
"(exists (?house)
  (and
    (attribute James-1 Male)
    (attribute Mary-1 Female)
    (attribute Robert-1 Male)
    (attribute Susan-1 Female)
    (attribute William-1 Male)
    (instance James-1 Human)
    (instance Mary-1 Human)
    (instance Robert-1 Human)
    (instance Susan-1 Human)
    (instance William-1 Human)
    (enjoys James-1 ?house)
    (instance ?house House)
    (possesses Mary-1 ?house)
    (possesses Robert-1 ?house)
    (possesses Susan-1 ?house)
    (possesses William-1 ?house)))"
},
{"text":"Bob and Mary's card and money are at the bank.",
"kif":
"(exists (?bank ?card ?money)
  (and
    (attribute Mary-1 Female)
    (attribute Robert-1 Male)
    (instance Mary-1 Human)
    (instance Robert-1 Human)
    (instance ?bank Bank-FinancialOrganization)
    (instance ?card BankCard)
    (possesses Mary-1 ?card)
    (possesses Robert-1 ?card)
    (instance ?money Currency)
    (possesses Mary-1 ?money)
    (possesses Robert-1 ?money)
    (located ?card ?bank)
    (located ?money ?bank)))"
},
{"text":"Joe, Mary and Jane's food and water are at the park.",
"kif":
"(exists (?food ?park ?water)
  (and
    (attribute Jane-1 Female)
    (attribute Joseph-1 Male)
    (attribute Mary-1 Female)
    (instance Jane-1 Human)
    (instance Joseph-1 Human)
    (instance Mary-1 Human)
    (instance ?food Food)
    (possesses Jane-1 ?food)
    (possesses Joseph-1 ?food)
    (possesses Mary-1 ?food)
    (instance ?park PublicPark)
    (instance ?water Water)
    (possesses Jane-1 ?water)
    (possesses Joseph-1 ?water)
    (possesses Mary-1 ?water)
    (located ?food ?park)
    (located ?water ?park)))"
},
{"text":"The machine, the tool, the camera and the personnel of Britain, France, Belgium and Italy entered the city.",
"kif":
"(exists (?camera ?city ?event ?machine ?personnel ?tool)
  (and
    (instance ?camera Camera)
    (possesses Belgium ?camera)
    (possesses France ?camera)
    (possesses Italy ?camera)
    (possesses UnitedKingdomOfGreatBritainAndNorthernIreland ?camera)
    (instance ?city City)
    (instance ?event Motion)
    (instance ?machine Device)
    (possesses Belgium ?machine)
    (possesses France ?machine)
    (possesses Italy ?machine)
    (possesses UnitedKingdomOfGreatBritainAndNorthernIreland ?machine)
    (instance ?personnel GroupOfPeople)
    (possesses Belgium ?personnel)
    (possesses France ?personnel)
    (possesses Italy ?personnel)
    (possesses UnitedKingdomOfGreatBritainAndNorthernIreland ?personnel)
    (instance ?tool Device)
    (possesses Belgium ?tool)
    (possesses France ?tool)
    (possesses Italy ?tool)
    (possesses UnitedKingdomOfGreatBritainAndNorthernIreland ?tool)
    (agent ?event ?camera)
    (patient ?event ?city)
    (agent ?event ?machine)
    (agent ?event ?personnel)
    (agent ?event ?tool)))"
},
{"text":"Mary likes her mother.",
"kif":
"(exists (?mother)
  (and
    (attribute Mary-1 Female)
    (instance Mary-1 Human)
    (enjoys Mary-1 ?mother)
    (mother ?mother Mary-1)))"
},
{"text":"Bob is Mary's brother.  She likes him.",
"kif":
"(and
  (attribute Mary-1 Female)
  (attribute Robert-1 Male)
  (brother Robert-1 Mary-1)
  (enjoys Mary-1 Robert-1)
  (instance Mary-1 Human)
  (instance Robert-1 Human))"
},
{"text":"John threw a ball.  The ball is blue.",
"kif":
"(exists (?ball ?event)
  (and
    (attribute John-1 Male)
    (instance John-1 Human)
    (attribute ?ball Blue)
    (instance ?ball GamePiece)
    (agent ?event John-1)
    (instance ?event Impelling)
    (patient ?event ?ball)))"
},
{"text":"Jim likes every book that he owns.",
"kif":
"(forall (?book)
  (=>
    (and
      (attribute James-1 Male)
      (instance James-1 Human)
      (instance ?book Book)
      (possesses James-1 ?book))
    (and
      (attribute James-1 Male)
      (instance James-1 Human)
      (enjoys James-1 ?book))))"
},
{"text":"Bob and Mary have a cat.  They like it.",
"kif":
"(exists (?cat)
  (and
    (attribute Mary-1 Female)
    (attribute Robert-1 Male)
    (instance Mary-1 Human)
    (instance Robert-1 Human)
    (enjoys Robert-1 ?cat)
    (enjoys Mary-1 ?cat)
    (instance ?cat Feline)
    (possesses Mary-1 ?cat)
    (possesses Robert-1 ?cat)))"
},
{"text":"If Jim buys a book, then he reads it.",
"kif":
"(forall (?book ?event1)
  (=>
    (and
      (attribute James-1 Male)
      (instance James-1 Human)
      (instance ?book Book)
      (agent ?event1 James-1)
      (instance ?event1 Buying)
      (patient ?event1 ?book))
    (exists (?event2)
      (and
        (attribute James-1 Male)
        (instance James-1 Human)
        (instance ?book Object)
        (agent ?event2 James-1)
        (instance ?event2 Reading)
        (patient ?event2 ?book)))))"
},
{"text":"Jim ate every donut that he bought.",
"kif":
"(forall (?donut ?event1)
  (=>
    (and
      (attribute James-1 Male)
      (instance James-1 Human)
      (instance ?donut Food)
      (agent ?event1 James-1)
      (instance ?event1 Buying)
      (patient ?event1 ?donut))
    (exists (?event2)
      (and
        (attribute James-1 Male)
        (instance James-1 Human)
        (agent ?event2 James-1)
        (instance ?event2 Eating)
        (patient ?event2 ?donut)))))"
},
{"text":"If Bob is the father of Mary, then he likes her.",
"kif":
"(=>
  (and
    (attribute Mary-1 Female)
    (attribute Robert-1 Male)
    (father Robert-1 Mary-1)
    (instance Mary-1 Human)
    (instance Robert-1 Human))
  (and
    (attribute Mary-1 Female)
    (attribute Robert-1 Male)
    (enjoys Robert-1 Mary-1)
    (instance Mary-1 Human)
    (instance Robert-1 Human)))"
},
{"text":"If Bob is Mary's father, then he gives her a picture.",
"kif":
"(=>
  (and
    (attribute Mary-1 Female)
    (attribute Robert-1 Male)
    (father Robert-1 Mary-1)
    (instance Mary-1 Human)
    (instance Robert-1 Human))
  (exists (?event ?picture)
    (and
      (attribute Mary-1 Female)
      (attribute Robert-1 Male)
      (instance Mary-1 Human)
      (instance Robert-1 Human)
      (agent ?event Robert-1)
      (destination ?event Mary-1)
      (instance ?event Giving)
      (instance ?picture PaintedPicture)
      (patient ?event ?picture))))"
},
{"text":"Bob bought a book.  Jim likes his book.",
"kif":
"(exists (?book ?event)
  (and
    (attribute James-1 Male)
    (attribute Robert-1 Male)
    (instance James-1 Human)
    (instance Robert-1 Human)
    (enjoys James-1 ?book)
    (instance ?book Book)
    (possesses Robert-1 ?book)
    (agent ?event Robert-1)
    (instance ?event Buying)
    (patient ?event ?book)))"
},
{"text":"Bob has a cat and a dog.  Mary does not like his cat.",
"kif":
"(exists (?cat ?dog)
  (and
    (attribute Mary-1 Female)
    (attribute Robert-1 Male)
    (instance Mary-1 Human)
    (instance Robert-1 Human)
    (not
      (enjoys Mary-1 ?cat))
    (instance ?cat Feline)
    (possesses Robert-1 ?cat)
    (instance ?dog Canine)
    (possesses Robert-1 ?dog)))"
},
{"text":"Bob has a cat.  Mary does not like his dog.",
"kif":
"(exists (?cat ?dog)
  (and
    (attribute Mary-1 Female)
    (attribute Robert-1 Male)
    (instance Mary-1 Human)
    (instance Robert-1 Human)
    (not
      (enjoys Mary-1 ?dog))
    (instance ?cat Feline)
    (possesses Robert-1 ?cat)
    (instance ?dog Canine)
    (possesses Robert-1 ?dog)))"
},
{"text":"Susan went to the bank.  She inserted her card.",
"kif":
"(exists (?bank ?card ?event1 ?event2)
  (and
    (attribute Susan-1 Female)
    (instance Susan-1 Human)
    (instance ?bank Bank-FinancialOrganization)
    (instance ?card BankCard)
    (possesses Susan-1 ?card)
    (agent ?event1 Susan-1)
    (instance ?event1 Transportation)
    (agent ?event2 Susan-1)
    (instance ?event2 Putting)
    (destination ?event1 ?bank)
    (patient ?event2 ?card)))"
},
{"text":"Bob threw a ball.  His ball is blue.",
"kif":
"(exists (?ball ?event)
  (and
    (attribute Robert-1 Male)
    (instance Robert-1 Human)
    (attribute ?ball Blue)
    (instance ?ball GamePiece)
    (possesses Robert-1 ?ball)
    (agent ?event Robert-1)
    (instance ?event Impelling)
    (patient ?event ?ball)))"
},
{"text":"Bob reads a book.  His dog goes to the park.",
"kif":
"(exists (?book ?dog ?event1 ?event2 ?park)
  (and
    (attribute Robert-1 Male)
    (instance Robert-1 Human)
    (instance ?book Book)
    (instance ?dog Canine)
    (possesses Robert-1 ?dog)
    (instance ?event2 Transportation)
    (agent ?event1 Robert-1)
    (instance ?event1 Reading)
    (instance ?park PublicPark)
    (patient ?event1 ?book)
    (agent ?event2 ?dog)
    (destination ?event2 ?park)))"
},
{"text":"Bob and Mary read a book.  His dog and her cat go to the park.",
"kif":
"(exists (?book ?cat ?dog ?event1 ?event2 ?park)
  (and
    (attribute Mary-1 Female)
    (attribute Robert-1 Male)
    (instance Mary-1 Human)
    (instance Robert-1 Human)
    (instance ?book Book)
    (instance ?cat Feline)
    (possesses Mary-1 ?cat)
    (instance ?dog Canine)
    (possesses Robert-1 ?dog)
    (agent ?event1 Mary-1)
    (agent ?event1 Robert-1)
    (instance ?event1 Reading)
    (instance ?event2 Transportation)
    (instance ?park PublicPark)
    (patient ?event1 ?book)
    (agent ?event2 ?cat)
    (agent ?event2 ?dog)
    (destination ?event2 ?park)))"
},
{"text":"Bob works at the countryside.  Mary likes his house, his dog, his bull and his garden.",
"kif":
"(exists (?bull ?countryside ?dog ?event ?garden ?house)
  (and
    (attribute Mary-1 Female)
    (attribute Robert-1 Male)
    (instance Mary-1 Human)
    (instance Robert-1 Human)
    (enjoys Mary-1 ?bull)
    (instance ?bull Bull)
    (possesses Robert-1 ?bull)
    (instance ?countryside GeographicArea)
    (enjoys Mary-1 ?dog)
    (instance ?dog Canine)
    (possesses Robert-1 ?dog)
    (agent ?event Robert-1)
    (instance ?event Works)
    (enjoys Mary-1 ?garden)
    (instance ?garden CultivatedLandArea)
    (possesses Robert-1 ?garden)
    (enjoys Mary-1 ?house)
    (instance ?house House)
    (possesses Robert-1 ?house)
    (destination ?event ?countryside)))"
},
{"text":"Bob and Mary like their dog.",
"kif":
"(exists (?dog)
  (and
    (attribute Mary-1 Female)
    (attribute Robert-1 Male)
    (instance Mary-1 Human)
    (instance Robert-1 Human)
    (enjoys Mary-1 ?dog)
    (enjoys Robert-1 ?dog)
    (instance ?dog Canine)
    (possesses Mary-1 ?dog)
    (possesses Robert-1 ?dog)))"
},
{"text":"Bob went to Paris.  He likes its river.",
"kif":
"(exists (?event ?river)
  (and
    (attribute Robert-1 Male)
    (instance Robert-1 Human)
    (agent ?event Robert-1)
    (destination ?event ParisFrance)
    (instance ?event Transportation)
    (enjoys Robert-1 ?river)
    (instance ?river River)
    (part ?river ParisFrance)))"
},
{"text":"Mary went to the park. Her dog likes its fountain.",
"kif":
"(exists (?dog ?event ?fountain ?park)
  (and
    (attribute Mary-1 Female)
    (instance Mary-1 Human)
    (instance ?dog Canine)
    (possesses Mary-1 ?dog)
    (agent ?event Mary-1)
    (instance ?event Transportation)
    (instance ?fountain Artifact)
    (instance ?park PublicPark)
    (enjoys ?dog ?fountain)
    (destination ?event ?park)
    (part ?fountain ?park)))"
},
{"text":"Bob and his dog go to the park.",
"kif":
"(exists (?dog ?event ?park)
  (and
    (attribute Robert-1 Male)
    (instance Robert-1 Human)
    (instance ?dog Canine)
    (possesses Robert-1 ?dog)
    (agent ?event Robert-1)
    (instance ?event Transportation)
    (instance ?park PublicPark)
    (agent ?event ?dog)
    (destination ?event ?park)))"
},
{"text":"Bob, Mary, his cat and her dog go to the park.",
"kif":
"(exists (?cat ?dog ?event ?park)
  (and
    (attribute Mary-1 Female)
    (attribute Robert-1 Male)
    (instance Mary-1 Human)
    (instance Robert-1 Human)
    (instance ?cat Feline)
    (possesses Robert-1 ?cat)
    (instance ?dog Canine)
    (possesses Mary-1 ?dog)
    (agent ?event Mary-1)
    (agent ?event Robert-1)
    (instance ?event Transportation)
    (instance ?park PublicPark)
    (agent ?event ?cat)
    (agent ?event ?dog)
    (destination ?event ?park)))"
},
{"text":"Bob, his dog and his cat go to the park.",
"kif":
"(exists (?cat ?dog ?event ?park)
  (and
    (attribute Robert-1 Male)
    (instance Robert-1 Human)
    (instance ?cat Feline)
    (possesses Robert-1 ?cat)
    (instance ?dog Canine)
    (possesses Robert-1 ?dog)
    (agent ?event Robert-1)
    (instance ?event Transportation)
    (instance ?park PublicPark)
    (agent ?event ?cat)
    (agent ?event ?dog)
    (destination ?event ?park)))"
},
{"text":"5 dogs fight 2 tigers.",
"kif":
"(exists (?dogs ?event ?tigers)
  (and
    (forall (?dog)
      (=>
        (member ?dog ?dogs)
        (instance ?dog Canine)))
    (forall (?tiger)
      (=>
        (member ?tiger ?tigers)
        (instance ?tiger Feline)))
    (instance ?dogs Collection)
    (member-count ?dogs 5)
    (instance ?event ViolentContest)
    (instance ?tigers Collection)
    (member-count ?tigers 2)
    (agent ?event ?dogs)
    (patient ?event ?tigers)))"
},
{"text":"3 boys go to the park.",
"kif":
"(exists (?boys ?event ?park)
  (and
    (forall (?boy)
      (=>
        (member ?boy ?boys)
        (and
          (attribute ?boy Male)
          (instance ?boy Human)
          (instance ?boy NotFullyFormed))))
    (instance ?boys Collection)
    (member-count ?boys 3)
    (instance ?event Transportation)
    (instance ?park PublicPark)
    (agent ?event ?boys)
    (destination ?event ?park)))"
},
{"text":"5 Germans are in the bank.",
"kif":
"(exists (?Germans ?bank)
  (and
    (forall (?German)
      (=>
        (member ?German ?Germans)
        (member ?German TeutonicEthnicity)))
    (instance ?Germans Collection)
    (member-count ?Germans 5)
    (instance ?bank Bank-FinancialOrganization)
    (located ?Germans ?bank)))"
},
{"text":"The bonus is 7 books.",
"kif":
"(exists (?bonus ?books)
  (and
    (forall (?book)
      (=>
        (member ?book ?books)
        (instance ?book Book)))
    (attribute ?bonus SubjectiveAssessmentAttribute)
    (instance ?books Collection)
    (member-count ?books 7)
    (equal ?bonus ?books)))"
},
{"text":"The decoration is 3 flowers.",
"kif":
"(exists (?decoration ?flowers)
  (and
    (forall (?flower)
      (=>
        (member ?flower ?flowers)
        (instance ?flower FloweringPlant)))
    (instance ?decoration ArtWork)
    (instance ?flowers Collection)
    (member-count ?flowers 3)
    (equal ?decoration ?flowers)))"
},
{"text":"Bob has 2 cats.",
"kif":
"(exists (?cats)
  (and
    (attribute Robert-1 Male)
    (forall (?cat)
      (=>
        (member ?cat ?cats)
        (instance ?cat Feline)))
    (instance Robert-1 Human)
    (instance ?cats Collection)
    (member-count ?cats 2)
    (possesses Robert-1 ?cats)))"
},
{"text":"Bob published 2 books.",
"kif":
"(exists (?books)
  (and
    (attribute Robert-1 Male)
    (forall (?book)
      (=>
        (member ?book ?books)
        (instance ?book Book)))
    (instance Robert-1 Human)
    (instance ?books Collection)
    (member-count ?books 2)
    (publishes Robert-1 ?books)))"
},
{"text":"Bob kills 2 rats.",
"kif":
"(exists (?event ?rats)
  (and
    (attribute Robert-1 Male)
    (forall (?rat)
      (=>
        (member ?rat ?rats)
        (instance ?rat Rat)))
    (instance Robert-1 Human)
    (agent ?event Robert-1)
    (instance ?event Killing)
    (instance ?rats Collection)
    (member-count ?rats 2)
    (patient ?event ?rats)))"
},
{"text":"Bob bought Mary 3 flowers.",
"kif":
"(exists (?event ?flowers)
  (and
    (attribute Mary-1 Female)
    (attribute Robert-1 Male)
    (forall (?flower)
      (=>
        (member ?flower ?flowers)
        (instance ?flower FloweringPlant)))
    (instance Mary-1 Human)
    (instance Robert-1 Human)
    (agent ?event Robert-1)
    (destination ?event Mary-1)
    (instance ?event Buying)
    (instance ?flowers Collection)
    (member-count ?flowers 3)
    (patient ?event ?flowers)))"
},
{"text":"3 Germans sold 50 trucks to 2 Americans.",
"kif":
"(exists (?Americans ?Germans ?event ?trucks)
  (and
    (forall (?American)
      (=>
        (member ?American ?Americans)
        (member ?American American)))
    (forall (?German)
      (=>
        (member ?German ?Germans)
        (member ?German TeutonicEthnicity)))
    (forall (?truck)
      (=>
        (member ?truck ?trucks)
        (instance ?truck Truck)))
    (instance ?Americans Collection)
    (member-count ?Americans 2)
    (instance ?Germans Collection)
    (member-count ?Germans 3)
    (instance ?event Selling)
    (instance ?trucks Collection)
    (member-count ?trucks 50)
    (destination ?event ?Americans)
    (agent ?event ?Germans)
    (patient ?event ?trucks)))"
},
{"text":"2 boars attack 3 antelopes.",
"kif":
"(exists (?antelopes ?boars ?event)
  (and
    (forall (?antelope)
      (=>
        (member ?antelope ?antelopes)
        (instance ?antelope Antelope)))
    (forall (?boar)
      (=>
        (member ?boar ?boars)
        (instance ?boar Pig)))
    (instance ?antelopes Collection)
    (member-count ?antelopes 3)
    (instance ?boars Collection)
    (member-count ?boars 2)
    (instance ?event Attack)
    (patient ?event ?antelopes)
    (agent ?event ?boars)))"
},
{"text":"3 boars fight 2 boars.",
"kif":
"(exists (?boars1 ?boars2 ?event)
  (and
    (forall (?boar)
      (=>
        (member ?boar ?boars1)
        (instance ?boar Pig)))
    (forall (?boar)
      (=>
        (member ?boar ?boars2)
        (instance ?boar Pig)))
    (instance ?boars1 Collection)
    (member-count ?boars1 3)
    (instance ?boars2 Collection)
    (member-count ?boars2 2)
    (instance ?event ViolentContest)
    (agent ?event ?boars1)
    (patient ?event ?boars2)))"
},
{"text":"Bob visited 3 parks.",
"kif":
"(exists (?event ?parks)
  (and
    (attribute Robert-1 Male)
    (forall (?park)
      (=>
        (member ?park ?parks)
        (instance ?park PublicPark)))
    (instance Robert-1 Human)
    (agent ?event Robert-1)
    (instance ?event Translocation)
    (instance ?parks Collection)
    (member-count ?parks 3)
    (destination ?event ?parks)))"
},
{"text":"3 blue brigades fight 2 red brigades.",
"kif":
"(exists (?brigades1 ?brigades2 ?event)
  (and
    (forall (?brigade)
      (=>
        (member ?brigade ?brigades1)
        (and
          (instance ?brigade Brigade)
          (attribute ?brigade Blue))))
    (forall (?brigade)
      (=>
        (member ?brigade ?brigades2)
        (and
          (instance ?brigade Brigade)
          (attribute ?brigade Red))))
    (instance ?brigades1 Collection)
    (member-count ?brigades1 3)
    (instance ?brigades2 Collection)
    (member-count ?brigades2 2)
    (instance ?event ViolentContest)
    (agent ?event ?brigades1)
    (patient ?event ?brigades2)))"
},
{"text":"The bookstore sells the book in 3 cities.",
"kif":
"(exists (?book ?bookstore ?cities ?event)
  (and
    (forall (?city)
      (=>
        (member ?city ?cities)
        (instance ?city City)))
    (instance ?book Book)
    (instance ?bookstore Corporation)
    (instance ?cities Collection)
    (member-count ?cities 3)
    (instance ?event Selling)
    (patient ?event ?book)
    (agent ?event ?bookstore)
    (destination ?event ?cities)))"
},
{"text":"Do 3 blue brigades fight 5 red brigades?",
"kif":
"(exists (?brigades1 ?brigades2 ?event)
  (and
    (forall (?brigade)
      (=>
        (member ?brigade ?brigades1)
        (and
          (instance ?brigade Brigade)
          (attribute ?brigade Blue))))
    (forall (?brigade)
      (=>
        (member ?brigade ?brigades2)
        (and
          (instance ?brigade Brigade)
          (attribute ?brigade Red))))
    (instance ?brigades1 Collection)
    (member-count ?brigades1 3)
    (instance ?brigades2 Collection)
    (member-count ?brigades2 5)
    (instance ?event ViolentContest)
    (agent ?event ?brigades1)
    (patient ?event ?brigades2)))"
},
{"text":"Do 3 blue brigades and 2 green brigades fight 5 red brigades?",
"kif":
"(exists (?brigades1 ?brigades2 ?brigades3 ?event)
  (and
    (forall (?brigade)
      (=>
        (member ?brigade ?brigades1)
        (and
          (instance ?brigade Brigade)
          (attribute ?brigade Blue))))
    (forall (?brigade)
      (=>
        (member ?brigade ?brigades2)
        (and
          (instance ?brigade Brigade)
          (attribute ?brigade Green))))
    (forall (?brigade)
      (=>
        (member ?brigade ?brigades3)
        (and
          (instance ?brigade Brigade)
          (attribute ?brigade Red))))
    (instance ?brigades1 Collection)
    (member-count ?brigades1 3)
    (instance ?brigades2 Collection)
    (member-count ?brigades2 2)
    (instance ?brigades3 Collection)
    (member-count ?brigades3 5)
    (instance ?event ViolentContest)
    (agent ?event ?brigades1)
    (agent ?event ?brigades2)
    (patient ?event ?brigades3)))"
},
{"text":"Bob earned 5 dollars.",
"kif":
"(exists (?dollars ?event)
  (and
    (attribute Robert-1 Male)
    (forall (?dollar)
      (=>
        (member ?dollar ?dollars)
        (instance ?dollar CurrencyMeasure)))
    (instance Robert-1 Human)
    (instance ?dollars Collection)
    (member-count ?dollars 5)
    (agent ?event Robert-1)
    (instance ?event Getting)
    (patient ?event ?dollars)))"
},
{"text":"5 dollars are identical to 500 cents.",
"kif":
"(exists (?cents ?dollars)
  (and
    (forall (?cent)
      (=>
        (member ?cent ?cents)
        (instance ?cent CurrencyMeasure)))
    (forall (?dollar)
      (=>
        (member ?dollar ?dollars)
        (instance ?dollar CurrencyMeasure)))
    (instance ?cents Collection)
    (member-count ?cents 500)
    (instance ?dollars Collection)
    (member-count ?dollars 5)
    (equal ?dollars ?cents)))"
},
{"text":"5 dollars equal 500 cents.",
"kif":
"(exists (?cents ?dollars)
  (and
    (forall (?cent)
      (=>
        (member ?cent ?cents)
        (instance ?cent CurrencyMeasure)))
    (forall (?dollar)
      (=>
        (member ?dollar ?dollars)
        (instance ?dollar CurrencyMeasure)))
    (instance ?cents Collection)
    (member-count ?cents 500)
    (instance ?dollars Collection)
    (member-count ?dollars 5)
    (equal ?dollars ?cents)))"
},
{"text":"Bob does not like the book.  Jim likes it.",
"kif":
"(exists (?book)
  (and
    (attribute James-1 Male)
    (attribute Robert-1 Male)
    (instance James-1 Human)
    (instance Robert-1 Human)
    (not
      (enjoys Robert-1 ?book))
    (enjoys James-1 ?book)
    (instance ?book Book)))"
},
{"text":"Bob killed the rat.  Jim did not kill it.",
"kif":
"(exists (?event1 ?event2 ?rat)
  (and
    (attribute Robert-1 Male)
    (instance Robert-1 Human)
    (not
      (and
        (attribute James-1 Male)
        (instance James-1 Human)
        (instance ?event1 Killing)
        (agent ?event1 James-1)
        (instance ?rat Object)
        (patient ?event1 ?rat)))
    (agent ?event2 Robert-1)
    (instance ?event2 Killing)
    (instance ?rat Rat)
    (patient ?event2 ?rat)))"
},
{"text":"3 blue brigades did not fight 2 red brigades.",
"kif":
"(not
  (exists (?brigades1 ?brigades2 ?event)
    (and
      (forall (?brigade)
        (=>
          (member ?brigade ?brigades1)
          (and
            (instance ?brigade Brigade)
            (attribute ?brigade Blue))))
      (forall (?brigade)
        (=>
          (member ?brigade ?brigades2)
          (and
            (instance ?brigade Brigade)
            (attribute ?brigade Red))))
      (instance ?brigades1 Collection)
      (member-count ?brigades1 3)
      (instance ?brigades2 Collection)
      (member-count ?brigades2 2)
      (instance ?event ViolentContest)
      (agent ?event ?brigades1)
      (patient ?event ?brigades2))))"
},
{"text":"1 dollar is 100 cents.",
"kif":
"(forall (?dollar)
  (=>
    (instance ?dollar CurrencyMeasure)
    (and
      (forall (?cent)
        (=>
          (member ?cent ?dollar)
          (instance ?cent CurrencyMeasure)))
      (instance ?dollar Collection)
      (member-count ?dollar 100))))"
},
{"text":"The 7 books are the bonus.",
"kif":
"(exists (?bonus ?books)
  (and
    (forall (?book)
      (=>
        (member ?book ?books)
        (instance ?book Book)))
    (attribute ?bonus SubjectiveAssessmentAttribute)
    (instance ?books Collection)
    (member-count ?books 7)
    (equal ?books ?bonus)))"
},
{"text":"Dogs are mammals.",
"kif":
"(forall (?dog)
  (=>
    (instance ?dog Canine)
    (instance ?dog Mammal)))"
},
{"text":"Dogs bark.",
"kif":
"(forall (?dog)
  (exists (?event)
    (and
      (instance ?dog Canine)
      (instance ?event Communication)
      (agent ?event ?dog))))"
},
{"text":"All dogs bark.",
"kif":
"(forall (?dog)
  (exists (?event)
    (and
      (instance ?dog Canine)
      (instance ?event Communication)
      (agent ?event ?dog))))"
},
{"text":"Some dogs bark.",
"kif":
"(exists (?dog ?event)
  (and
    (instance ?dog Canine)
    (instance ?event Communication)
    (agent ?event ?dog)))"
},
{"text":"The dogs run.",
"kif":
"(exists (?dogs ?event)
  (and
    (forall (?dog)
      (=>
        (member ?dog ?dogs)
        (instance ?dog Canine)))
    (instance ?dogs Collection)
    (instance ?event Walking)
    (agent ?event ?dogs)))"
},
{"text":"Bob has 1 cat.",
"kif":
"(exists (?cat)
  (and
    (attribute Robert-1 Male)
    (instance Robert-1 Human)
    (instance ?cat Feline)
    (possesses Robert-1 ?cat)))"
},
{"text":"Bob reads a book and writes a letter.",
"kif":
"(exists (?book ?event ?letter)
  (and
    (attribute Robert-1 Male)
    (instance Robert-1 Human)
    (instance ?book Book)
    (agent ?event Robert-1)
    (instance ?event Reading)
    (authors Robert-1 ?letter)
    (instance ?letter Letter)
    (patient ?event ?book)))"
},
{"text":"Bob bought a book and rented a car and a boat.",
"kif":
"(exists (?boat ?book ?car ?event1 ?event2)
  (and
    (attribute Robert-1 Male)
    (instance Robert-1 Human)
    (instance ?boat WaterVehicle)
    (instance ?book Book)
    (instance ?car Automobile)
    (agent ?event1 Robert-1)
    (instance ?event1 Buying)
    (agent ?event2 Robert-1)
    (instance ?event2 Renting)
    (patient ?event2 ?boat)
    (patient ?event1 ?book)
    (patient ?event2 ?car)))"
},
{"text":"Bob cut the meat, boiled the carrot and watered the flower.",
"kif":
"(exists (?carrot ?event2 ?event1 ?event3 ?flower ?meat)
  (and
    (attribute Robert-1 Male)
    (instance Robert-1 Human)
    (instance ?carrot FruitOrVegetable)
    (agent ?event2 Robert-1)
    (instance ?event2 Cutting)
    (agent ?event1 Robert-1)
    (instance ?event1 Boiling)
    (agent ?event3 Robert-1)
    (instance ?event3 Wetting)
    (instance ?flower FloweringPlant)
    (instance ?meat Meat)
    (patient ?event1 ?carrot)
    (patient ?event2 ?meat)
    (patient ?event3 ?flower)))"
},
{"text":"Bob rented a bicycle and a car and went to the park.",
"kif":
"(exists (?bicycle ?car ?event1 ?event2 ?park)
  (and
    (attribute Robert-1 Male)
    (instance Robert-1 Human)
    (instance ?bicycle Bicycle)
    (instance ?car Automobile)
    (agent ?event1 Robert-1)
    (instance ?event1 Renting)
    (agent ?event2 Robert-1)
    (instance ?event2 Transportation)
    (instance ?park PublicPark)
    (patient ?event1 ?bicycle)
    (patient ?event1 ?car)
    (destination ?event2 ?park)))"
},
{"text":"Bob sits and eats a fish.",
"kif":
"(exists (?event1 ?event2 ?fish)
  (and
    (attribute Robert-1 Male)
    (instance Robert-1 Human)
    (agent ?event1 Robert-1)
    (instance ?event1 SittingDown)
    (agent ?event2 Robert-1)
    (instance ?event2 Eating)
    (instance ?fish Fish)
    (patient ?event2 ?fish)))"
},
{"text":"Bob eats a fish and sits.",
"kif":
"(exists (?event2 ?event1 ?fish)
  (and
    (attribute Robert-1 Male)
    (instance Robert-1 Human)
    (agent ?event2 Robert-1)
    (instance ?event2 Eating)
    (agent ?event1 Robert-1)
    (instance ?event1 SittingDown)
    (instance ?fish Fish)
    (patient ?event2 ?fish)))"
},
{"text":"Bob eats a fish and reads a book.",
"kif":
"(exists (?book ?event2 ?event1 ?fish)
  (and
    (attribute Robert-1 Male)
    (instance Robert-1 Human)
    (instance ?book Book)
    (agent ?event2 Robert-1)
    (instance ?event2 Eating)
    (agent ?event1 Robert-1)
    (instance ?event1 Reading)
    (instance ?fish Fish)
    (patient ?event1 ?book)
    (patient ?event2 ?fish)))"
},
{"text":"Bob sells a book to Jim and buys Mary a scarf.",
"kif":
"(exists (?book ?event1 ?event2 ?scarf)
  (and
    (attribute James-1 Male)
    (attribute Mary-1 Female)
    (attribute Robert-1 Male)
    (instance James-1 Human)
    (instance Mary-1 Human)
    (instance Robert-1 Human)
    (instance ?book Book)
    (agent ?event1 Robert-1)
    (destination ?event1 James-1)
    (instance ?event1 Selling)
    (agent ?event2 Robert-1)
    (destination ?event2 Mary-1)
    (instance ?event2 Buying)
    (instance ?scarf Clothing)
    (patient ?event1 ?book)
    (patient ?event2 ?scarf)))"
},
{"text":"Bob walks, talks and eats a pie.",
"kif":
"(exists (?event1 ?event2 ?event3 ?pie)
  (and
    (attribute Robert-1 Male)
    (instance Robert-1 Human)
    (agent ?event1 Robert-1)
    (instance ?event1 Walking)
    (agent ?event2 Robert-1)
    (instance ?event2 Speaking)
    (agent ?event3 Robert-1)
    (instance ?event3 Eating)
    (instance ?pie Food)
    (patient ?event3 ?pie)))"
},
{"text":"An arm of Tom is injured.",
"kif":
"(exists (?agent ?event ?arm)
  (and
    (attribute Tom-1 Male)
    (instance Tom-1 Human)
    (instance ?agent Agent)
    (instance ?arm Arm)
    (part ?arm Tom-1)
    (instance ?event Injuring)
    (agent ?event ?agent)
    (patient ?event ?arm)))"
},
{"text":"The party is on Monday.",
"kif":
"(exists (?Monday ?party)
  (and
    (instance ?Monday Monday)
    (instance ?party SocialParty)
    (overlapsTemporally
      (WhenFn ?party) ?Monday)))"
},
{"text":"Birds eat insects.",
"kif":
"(forall (?bird)
  (exists (?event ?insect)
    (and
      (instance ?bird Bird)
      (instance ?event Eating)
      (instance ?insect Insect)
      (agent ?event ?bird)
      (patient ?event ?insect))))"
},
{"text":"Bob is the youngest teller.",
"kif":
"(and
  (attribute Robert-1 Male)
  (attribute Robert-1 Position)
  (forall (?X)
    (=>
      (and
        (attribute ?X Position)
        (not
          (equal ?X Robert-1)))
      (and
        (greaterThan ?val2 ?val1)
        (age Robert-1 ?val1)
        (age ?X ?val2))))
  (instance Robert-1 Human))"
},
{"text":"Bill is younger than Tom.",
"kif":
"(and
  (attribute Tom-1 Male)
  (attribute William-1 Male)
  (instance Tom-1 Human)
  (instance William-1 Human)
  (age William-1 ?val1)
  (age Tom-1 ?val2)
  (greaterThan ?val2 ?val1))"
},
{"text":"Mississippi is the longest river.",
"kif":
"(and
  (forall (?X)
    (=>
      (and
        (instance ?X River)
        (not
          (equal ?X Mississippi)))
      (and
        (greaterThan ?val1 ?val2)
        (length Mississippi ?val1)
        (length ?X ?val2))))
  (instance Mississippi River))"
},
{"text":"Is the book more expensive than the toy?",
"kif":
"(exists (?book ?toy)
  (and
    (instance ?book Book)
    (instance ?toy RecreationOrExerciseDevice)
    (monetaryValue ?book ?val1)
    (monetaryValue ?toy ?val2)
    (greaterThan ?val1 ?val2)))"
},
{"text":"Who is the youngest soldier?",
"kif":
"(and
  (forall (?X)
    (=>
      (and
        (attribute ?X Soldier)
        (not
          (equal ?X ?who)))
      (and
        (greaterThan ?val2 ?val1)
        (age ?who ?val1)
        (age ?X ?val2))))
  (attribute ?who Soldier)
  (instance ?who Human))"
},
{"text":"Who is the tallest man?",
"kif":
"(and
  (forall (?X)
    (=>
      (and
        (instance ?X Man)
        (not
          (equal ?X ?who)))
      (and
        (greaterThan ?val1 ?val2)
        (height ?who ?val1)
        (height ?X ?val2))))
  (instance ?who Man))"
},
{"text":"Everest is the tallest mountain.",
"kif":
"(and
  (forall (?X)
    (=>
      (and
        (instance ?X Mountain)
        (not
          (equal ?X Everest)))
      (and
        (greaterThan ?val1 ?val2)
        (elevation Everest ?val1)
        (elevation ?X ?val2))))
  (instance Everest Mountain))"
},
{"text":"Bob's birthday is on the Labor Day.",
"kif":
"(exists (?Labor_Day ?birthday)
  (and
    (attribute Robert-1 Male)
    (instance Robert-1 Human)
    (instance ?Labor_Day Monday)
    (instance ?birthday Day)
    (possesses Robert-1 ?birthday)
    (overlapsTemporally ?birthday ?Labor_Day)))"
},
{"text":"Bob's birthday is on September 4, 1960.",
"kif":
"(exists (?birthday)
  (and
    (attribute Robert-1 Male)
    (instance Robert-1 Human)
    (instance ?birthday Day)
    (overlapsTemporally ?birthday
      (DayFn 4
        (MonthFn September
          (YearFn 1960))))
    (possesses Robert-1 ?birthday)))"
},
{"text":"Bob went to the park before noon.",
"kif":
"(exists (?event ?noon ?park)
  (and
    (attribute Robert-1 Male)
    (instance Robert-1 Human)
    (lessThan
      (BeginFn
        (WhenFn ?event))
      (BeginFn ?noon))
    (agent ?event Robert-1)
    (instance ?event Transportation)
    (instance ?noon TimePosition)
    (instance ?park PublicPark)
    (destination ?event ?park)))"
},
{"text":"Bob was in the park before noon.",
"kif":
"(exists (?noon ?park)
  (and
    (attribute Robert-1 Male)
    (instance Robert-1 Human)
    (lessThan
      (BeginFn
        (WhenFn
          (located Robert-1 ?park)))
      (BeginFn ?noon))
    (instance ?noon TimePosition)
    (instance ?park PublicPark)))"
},
{"text":"Bob went to New York City on the Independence Day.",
"kif":
"(exists (?Independence_Day ?event)
  (and
    (attribute Robert-1 Male)
    (instance NewYorkCityNewYork City)
    (instance Robert-1 Human)
    (instance ?Independence_Day Day)
    (overlapsTemporally
      (WhenFn ?event) ?Independence_Day)
    (agent ?event Robert-1)
    (destination ?event NewYorkCityNewYork)
    (instance ?event Transportation)))"
},
{"text":"Bob was in New York City on the Independence Day.",
"kif":
"(exists (?Independence_Day)
  (and
    (attribute Robert-1 Male)
    (instance NewYorkCityNewYork City)
    (instance Robert-1 Human)
    (instance ?Independence_Day Day)
    (overlapsTemporally
      (WhenFn
        (located Robert-1 NewYorkCityNewYork)) ?Independence_Day)))"
},
{"text":"Bob will go to New York City after Friday.",
"kif":
"(exists (?Friday ?event)
  (and
    (attribute Robert-1 Male)
    (greaterThan
      (EndFn
        (WhenFn ?event))
      (EndFn ?Friday))
    (instance NewYorkCityNewYork City)
    (instance Robert-1 Human)
    (instance ?Friday Friday)
    (agent ?event Robert-1)
    (destination ?event NewYorkCityNewYork)
    (instance ?event Transportation)))"
},
{"text":"Bob will go to New York City during the spring.",
"kif":
"(exists (?event ?spring)
  (and
    (attribute Robert-1 Male)
    (instance NewYorkCityNewYork City)
    (instance Robert-1 Human)
    (agent ?event Robert-1)
    (destination ?event NewYorkCityNewYork)
    (instance ?event Transportation)
    (instance ?spring SpringSeason)
    (overlapsTemporally
      (WhenFn ?event) ?spring)))"
},
{"text":"Bob will not go to Yellowstone National Park in the winter.",
"kif":
"(not
  (exists (?event ?winter)
    (and
      (attribute Robert-1 Male)
      (instance Robert-1 Human)
      (instance Yellowstone_National_Park PublicPark)
      (agent ?event Robert-1)
      (destination ?event Yellowstone_National_Park)
      (instance ?event Transportation)
      (instance ?winter WinterSeason)
      (overlapsTemporally
        (WhenFn ?event) ?winter))))"
},
{"text":"Bob was a teacher before 1997.",
"kif":
"(exists (?teacher)
  (and
    (attribute Robert-1 Male)
    (instance Robert-1 Human)
    (lessThan
      (BeginFn
        (WhenFn
          (and
            (equal Robert-1 ?teacher)
            (attribute ?teacher Teacher))))
      (BeginFn
        (YearFn 1997)))))"
},
{"text":"Bob visited Boston on January 1, 2001.",
"kif":
"(exists (?event)
  (and
    (attribute Robert-1 Male)
    (instance Robert-1 Human)
    (overlapsTemporally
      (WhenFn ?event)
      (DayFn 1
        (MonthFn January
          (YearFn 2001))))
    (agent ?event Robert-1)
    (instance ?event Translocation)
    (destination ?event BostonMassachusetts)))"
},
{"text":"Bob went to New York City after 2001.",
"kif":
"(exists (?event)
  (and
    (attribute Robert-1 Male)
    (greaterThan
      (EndFn
        (WhenFn ?event))
      (EndFn
        (YearFn 2001)))
    (instance NewYorkCityNewYork City)
    (instance Robert-1 Human)
    (agent ?event Robert-1)
    (destination ?event NewYorkCityNewYork)
    (instance ?event Transportation)))"
},
{"text":"Bob went to New York City before the great 1931.",
"kif":
"(exists (?event)
  (and
    (attribute
      (YearFn 1931) SubjectiveAssessmentAttribute)
    (attribute Robert-1 Male)
    (instance NewYorkCityNewYork City)
    (instance Robert-1 Human)
    (lessThan
      (BeginFn
        (WhenFn ?event))
      (BeginFn
        (YearFn 1931)))
    (agent ?event Robert-1)
    (destination ?event NewYorkCityNewYork)
    (instance ?event Transportation)))"
},
{"text":"Bob went to Honolulu before December 1941.",
"kif":
"(exists (?event)
  (and
    (attribute Robert-1 Male)
    (instance Honolulu City)
    (instance Robert-1 Human)
    (lessThan
      (BeginFn
        (WhenFn ?event))
      (BeginFn
        (MonthFn December
          (YearFn 1941))))
    (agent ?event Robert-1)
    (destination ?event Honolulu)
    (instance ?event Transportation)))"
},
{"text":"The meeting is on Monday.",
"kif":
"(exists (?Monday ?meeting)
  (and
    (instance ?Monday Monday)
    (overlapsTemporally
      (WhenFn ?meeting) ?Monday)
    (instance ?meeting FormalMeeting)))"
},
{"text":"The meeting will be on January 18, 2008.",
"kif":
"(exists (?meeting)
  (and
    (overlapsTemporally
      (WhenFn ?meeting)
      (DayFn 18
        (MonthFn January
          (YearFn 2008))))
    (instance ?meeting FormalMeeting)))"
},
{"text":"Bob went to the bank at 8 AM.",
"kif":
"(exists (?bank ?event)
  (and
    (attribute Robert-1 Male)
    (instance Robert-1 Human)
    (overlapsTemporally
      (WhenFn ?event)
      (HourFn 8))
    (instance ?bank Bank-FinancialOrganization)
    (agent ?event Robert-1)
    (instance ?event Transportation)
    (destination ?event ?bank)))"
},
{"text":"Bob went to the bank at 8:30:45 AM.",
"kif":
"(exists (?bank ?event)
  (and
    (attribute Robert-1 Male)
    (instance Robert-1 Human)
    (overlapsTemporally
      (WhenFn ?event)
      (SecondFn 45
        (MinuteFn 30
          (HourFn 8))))
    (instance ?bank Bank-FinancialOrganization)
    (agent ?event Robert-1)
    (instance ?event Transportation)
    (destination ?event ?bank)))"
},
{"text":"The meeting is on 8:30 PM January 18, 2008.",
"kif":
"(exists (?meeting)
  (and
    (overlapsTemporally
      (WhenFn ?meeting)
      (MinuteFn 30
        (HourFn 20
          (DayFn 18
            (MonthFn January
              (YearFn 2008))))))
    (instance ?meeting FormalMeeting)))"
},
{"text":"The pilotless aircraft fired a missile at the target at 2:30:15 PM March 22, 1993.",
"kif":
"(exists (?event ?missile ?pilotless_aircraft ?target)
  (and
    (overlapsTemporally
      (WhenFn ?event)
      (SecondFn 15
        (MinuteFn 30
          (HourFn 14
            (DayFn 22
              (MonthFn March
                (YearFn 1993)))))))
    (instance ?event Shooting)
    (instance ?missile Missile)
    (instance ?pilotless_aircraft Device)
    (instance ?target Device)
    (patient ?event ?missile)
    (agent ?event ?pilotless_aircraft)
    (destination ?event ?target)))"
},
{"text":"Bob liked January 1, 2000.",
"kif":
"(and
  (attribute Robert-1 Male)
  (enjoys Robert-1
    (DayFn 1
      (MonthFn January
        (YearFn 2000))))
  (instance Robert-1 Human))"
},
{"text":"Did Bob go to Honolulu after 1955?",
"kif":
"(exists (?event)
  (and
    (attribute Robert-1 Male)
    (greaterThan
      (EndFn
        (WhenFn ?event))
      (EndFn
        (YearFn 1955)))
    (instance Honolulu City)
    (instance Robert-1 Human)
    (agent ?event Robert-1)
    (destination ?event Honolulu)
    (instance ?event Transportation)))"
},
{"text":"1996 is a leap year.",
"kif":
"(instance
  (YearFn 1996) LeapYear)"
},
{"text":"The year 2008 is a leap year.",
"kif":
"(instance
  (YearFn 2008) LeapYear)"
},
{"text":"The 1st of January 2008 is a Tuesday.",
"kif":
"(instance
  (DayFn 1
    (MonthFn January
      (YearFn 2008))) Tuesday)"
},
{"text":"The 1st day of January 2008 is a Tuesday.",
"kif":
"(instance
  (DayFn 1
    (MonthFn January
      (YearFn 2008))) Tuesday)"
},
{"text":"The Monday, 21st of January 2008 is a holiday.",
"kif":
"(and
  (instance
    (DayFn 21
      (MonthFn January
        (YearFn 2008))) Holiday)
  (instance
    (DayFn 21
      (MonthFn January
        (YearFn 2008))) Monday))"
},
{"text":"Bob bought a book on Tuesday, 22nd of January 2008.",
"kif":
"(exists (?book ?event)
  (and
    (attribute Robert-1 Male)
    (instance
      (DayFn 22
        (MonthFn January
          (YearFn 2008))) Tuesday)
    (instance Robert-1 Human)
    (overlapsTemporally
      (WhenFn ?event)
      (DayFn 22
        (MonthFn January
          (YearFn 2008))))
    (instance ?book Book)
    (agent ?event Robert-1)
    (instance ?event Buying)
    (patient ?event ?book)))"
},
{"text":"Bob received the mail after the Thanksgiving Day, 22nd of November 2007.",
"kif":
"(exists (?event ?mail)
  (and
    (attribute Robert-1 Male)
    (greaterThan
      (EndFn
        (WhenFn ?event))
      (EndFn
        (DayFn 22
          (MonthFn November
            (YearFn 2007)))))
    (instance Robert-1 Human)
    (agent ?event Robert-1)
    (instance ?event Getting)
    (instance ?mail ContentBearingObject)
    (patient ?event ?mail)))"
},
{"text":"The meeting is on 8:30 PM January 18, 2008.",
"kif":
"(exists (?meeting)
  (and
    (overlapsTemporally
      (WhenFn ?meeting)
      (MinuteFn 30
        (HourFn 20
          (DayFn 18
            (MonthFn January
              (YearFn 2008))))))
    (instance ?meeting FormalMeeting)))"
},
{"text":"The meeting is on 8:30 PM the 18th of January, 2008.",
"kif":
"(exists (?meeting)
  (and
    (overlapsTemporally
      (WhenFn ?meeting)
      (MinuteFn 30
        (HourFn 20
          (DayFn 18
            (MonthFn January
              (YearFn 2008))))))
    (instance ?meeting FormalMeeting)))"
},
{"text":"The meeting is on 8:30 PM 1/18/2008.",
"kif":
"(exists (?meeting)
  (and
    (overlapsTemporally
      (WhenFn ?meeting)
      (MinuteFn 30
        (HourFn 20
          (DayFn 18
            (MonthFn January
              (YearFn 2008))))))
    (instance ?meeting FormalMeeting)))"
},
{"text":"The first strike started at 1 PM on Thursday the 25th of January, 1945.",
"kif":
"(exists (?event ?first_strike)
  (and
    (instance
      (DayFn 25
        (MonthFn January
          (YearFn 1945))) Thursday)
    (overlapsTemporally
      (WhenFn ?event)
      (HourFn 13
        (DayFn 25
          (MonthFn January
            (YearFn 1945)))))
    (instance ?event Process)
    (instance ?first_strike Attack)
    (patient ?event ?first_strike)))"
},
{"text":"The first strike started at 1:30:10 PM on Thursday the 25th of January, 1945.",
"kif":
"(exists (?event ?first_strike)
  (and
    (instance
      (DayFn 25
        (MonthFn January
          (YearFn 1945))) Thursday)
    (overlapsTemporally
      (WhenFn ?event)
      (SecondFn 10
        (MinuteFn 30
          (HourFn 13
            (DayFn 25
              (MonthFn January
                (YearFn 1945)))))))
    (instance ?event Process)
    (instance ?first_strike Attack)
    (patient ?event ?first_strike)))"
},
{"text":"The meeting was at 1 PM on Thursday the 25th of January, 1945.",
"kif":
"(exists (?meeting)
  (and
    (instance
      (DayFn 25
        (MonthFn January
          (YearFn 1945))) Thursday)
    (overlapsTemporally
      (WhenFn ?meeting)
      (HourFn 13
        (DayFn 25
          (MonthFn January
            (YearFn 1945)))))
    (instance ?meeting FormalMeeting)))"
},
{"text":"The meeting will be at 1 PM on Thursday the 25th of January.",
"kif":
"(exists (?meeting)
  (and
    (instance
      (DayFn 25
        (MonthFn January)) Thursday)
    (overlapsTemporally
      (WhenFn ?meeting)
      (HourFn 13
        (DayFn 25
          (MonthFn January))))
    (instance ?meeting FormalMeeting)))"
},
{"text":"The meeting will be on January 25.",
"kif":
"(exists (?meeting)
  (and
    (overlapsTemporally
      (WhenFn ?meeting)
      (MonthFn January
        (YearFn 25)))
    (instance ?meeting FormalMeeting)))"
},
{"text":"The meeting is on 2008, a leap year.",
"kif":
"(exists (?meeting)
  (and
    (instance
      (YearFn 2008) LeapYear)
    (overlapsTemporally
      (WhenFn ?meeting)
      (YearFn 2008))
    (instance ?meeting FormalMeeting)))"
},
{"text":"The meeting will be on January 25, Thursday.",
"kif":
"(exists (?meeting)
  (and
    (instance
      (MonthFn January
        (YearFn 25)) Thursday)
    (overlapsTemporally
      (WhenFn ?meeting)
      (MonthFn January
        (YearFn 25)))
    (instance ?meeting FormalMeeting)))"
},
{"text":"The Christmas Day of 2008 is a Thursday.",
"kif":
"(exists (?Christmas_Day)
  (and
    (instance ?Christmas_Day Thursday)
    (temporalPart ?Christmas_Day
      (YearFn 2008))))"
},
{"text":"The winter of 2008 is short.",
"kif":
"(exists (?winter)
  (and
    (attribute ?winter Short)
    (instance ?winter WinterSeason)
    (temporalPart ?winter
      (YearFn 2008))))"
},
{"text":"The winter of year 2008 is short.",
"kif":
"(exists (?winter)
  (and
    (attribute ?winter Short)
    (instance ?winter WinterSeason)
    (temporalPart ?winter
      (YearFn 2008))))"
},
{"text":"Bob enjoys January, 2008 in the New York City.",
"kif":
"(exists (?event)
  (and
    (attribute Robert-1 Male)
    (instance NewYorkCityNewYork City)
    (instance Robert-1 Human)
    (agent ?event Robert-1)
    (destination ?event NewYorkCityNewYork)
    (instance ?event IntentionalPsychologicalProcess)
    (patient ?event
      (MonthFn January
        (YearFn 2008)))))"
},
{"text":"Bob enjoys the January of 2008 in the New York City.",
"kif":
"(exists (?event)
  (and
    (attribute Robert-1 Male)
    (instance NewYorkCityNewYork City)
    (instance Robert-1 Human)
    (agent ?event Robert-1)
    (destination ?event NewYorkCityNewYork)
    (instance ?event IntentionalPsychologicalProcess)
    (patient ?event
      (MonthFn January
        (YearFn 2008)))))"
},
{"text":"Bob went to the shop on the midnight of January 31, 2008.",
"kif":
"(exists (?event ?midnight ?shop)
  (and
    (attribute Robert-1 Male)
    (instance Robert-1 Human)
    (agent ?event Robert-1)
    (instance ?event Transportation)
    (instance ?midnight TimePoint)
    (overlapsTemporally
      (WhenFn ?event) ?midnight)
    (temporalPart ?midnight
      (DayFn 31
        (MonthFn January
          (YearFn 2008))))
    (instance ?shop RetailStore)
    (destination ?event ?shop)))"
},
{"text":"Bob went to the shop on the midnight of the 31st of January, 2008.",
"kif":
"(exists (?event ?midnight ?shop)
  (and
    (attribute Robert-1 Male)
    (instance Robert-1 Human)
    (agent ?event Robert-1)
    (instance ?event Transportation)
    (instance ?midnight TimePoint)
    (overlapsTemporally
      (WhenFn ?event) ?midnight)
    (temporalPart ?midnight
      (DayFn 31
        (MonthFn January
          (YearFn 2008))))
    (instance ?shop RetailStore)
    (destination ?event ?shop)))"
},
{"text":"Bob went to the shop on the midnight of 1/31/2008.",
"kif":
"(exists (?event ?midnight ?shop)
  (and
    (attribute Robert-1 Male)
    (instance Robert-1 Human)
    (agent ?event Robert-1)
    (instance ?event Transportation)
    (instance ?midnight TimePoint)
    (overlapsTemporally
      (WhenFn ?event) ?midnight)
    (temporalPart ?midnight
      (DayFn 31
        (MonthFn January
          (YearFn 2008))))
    (instance ?shop RetailStore)
    (destination ?event ?shop)))"
},
{"text":"Bob went to the shop on a weekend of January 2008.",
"kif":
"(exists (?event ?shop ?weekend)
  (and
    (attribute Robert-1 Male)
    (instance Robert-1 Human)
    (agent ?event Robert-1)
    (instance ?event Transportation)
    (instance ?shop RetailStore)
    (instance ?weekend Weekend)
    (overlapsTemporally
      (WhenFn ?event) ?weekend)
    (temporalPart ?weekend
      (MonthFn January
        (YearFn 2008)))
    (destination ?event ?shop)))"
},
{"text":"Mary went to the park on a Sunday of January 2008.",
"kif":
"(exists (?Sunday ?event ?park)
  (and
    (attribute Mary-1 Female)
    (instance Mary-1 Human)
    (instance ?Sunday Sunday)
    (overlapsTemporally
      (WhenFn ?event) ?Sunday)
    (temporalPart ?Sunday
      (MonthFn January
        (YearFn 2008)))
    (agent ?event Mary-1)
    (instance ?event Transportation)
    (instance ?park PublicPark)
    (destination ?event ?park)))"
},
{"text":"Mary was in the New York City during the week of January 25, 2008.",
"kif":
"(exists (?week)
  (and
    (attribute Mary-1 Female)
    (instance Mary-1 Human)
    (instance NewYorkCityNewYork City)
    (instance ?week Week)
    (overlapsTemporally
      (WhenFn
        (located Mary-1 NewYorkCityNewYork)) ?week)
    (temporalPart
      (DayFn 25
        (MonthFn January
          (YearFn 2008))) ?week)))"
},
{"text":"The bird flies south in the winter.",
"kif":
"(exists (?bird ?event ?winter)
  (and
    (instance ?bird Bird)
    (direction ?event South)
    (instance ?event Flying)
    (instance ?winter WinterSeason)
    (overlapsTemporally
      (WhenFn ?event) ?winter)
    (agent ?event ?bird)))"
},
{"text":"Bob moves north in 2005.",
"kif":
"(exists (?event)
  (and
    (attribute Robert-1 Male)
    (instance Robert-1 Human)
    (overlapsTemporally
      (WhenFn ?event)
      (YearFn 2005))
    (agent ?event Robert-1)
    (direction ?event North)
    (instance ?event Transportation)))"
},
{"text":"The convoy moves northeast by north.",
"kif":
"(exists (?convoy ?event)
  (and
    (instance ?convoy Convoy)
    (direction ?event DirectionalAttribute)
    (instance ?event Transportation)
    (agent ?event ?convoy)))"
},
{"text":"Bob drives up the street.",
"kif":
"(exists (?event ?street)
  (and
    (attribute Robert-1 Male)
    (instance Robert-1 Human)
    (agent ?event Robert-1)
    (instance ?event Transportation)
    (instance ?street Roadway)
    (path ?event ?street)))"
},
{"text":"Bob drives up the hill.",
"kif":
"(exists (?event ?hill)
  (and
    (attribute Robert-1 Male)
    (instance Robert-1 Human)
    (agent ?event Robert-1)
    (instance ?event Transportation)
    (instance ?hill Hill)
    (patient ?event ?hill)))"
},
{"text":"The troop moves southwest.",
"kif":
"(exists (?event ?troop)
  (and
    (direction ?event Southwest)
    (instance ?event Transportation)
    (attribute ?troop Soldier)
    (agent ?event ?troop)))"
},
{"text":"A book is on the floor.",
"kif":
"(exists (?book ?floor)
  (and
    (instance ?book Book)
    (instance ?floor Floor)
    (orientation ?book ?floor On)))"
},
{"text":"A book is under the desk.",
"kif":
"(exists (?book ?desk)
  (and
    (instance ?book Book)
    (instance ?desk Desk)
    (orientation ?book ?desk Below)))"
},
{"text":"The boat floats on the water.",
"kif":
"(exists (?boat ?event ?water)
  (and
    (exists (?location)
      (and
        (located ?event ?location)
        (orientation ?location ?water On)))
    (instance ?boat WaterVehicle)
    (instance ?event Swimming)
    (instance ?water Water)
    (patient ?event ?boat)))"
},
{"text":"A bird flies on the cloud.",
"kif":
"(exists (?bird ?cloud ?event)
  (and
    (exists (?location)
      (and
        (located ?event ?location)
        (orientation ?location ?cloud On)))
    (instance ?bird Bird)
    (instance ?cloud Cloud)
    (instance ?event Flying)
    (agent ?event ?bird)))"
},
{"text":"A bird flies over the cloud.",
"kif":
"(exists (?bird ?cloud ?event)
  (and
    (exists (?location)
      (and
        (located ?event ?location)
        (orientation ?location ?cloud Above)))
    (instance ?bird Bird)
    (instance ?cloud Cloud)
    (instance ?event Flying)
    (agent ?event ?bird)))"
},
{"text":"Bob sung a song under the oak tree.",
"kif":
"(exists (?event ?oak_tree ?song)
  (and
    (attribute Robert-1 Male)
    (exists (?location)
      (and
        (located ?event ?location)
        (orientation ?location ?oak_tree Below)))
    (instance Robert-1 Human)
    (agent ?event Robert-1)
    (instance ?event Singing)
    (instance ?oak_tree BotanicalTree)
    (instance ?song MusicalComposition)
    (patient ?event ?song)))"
},
{"text":"A fish swims under the coral reef.",
"kif":
"(exists (?coral_reef ?event ?fish)
  (and
    (exists (?location)
      (and
        (located ?event ?location)
        (orientation ?location ?coral_reef Below)))
    (instance ?coral_reef Reef)
    (instance ?event Swimming)
    (instance ?fish Fish)
    (agent ?event ?fish)))"
},
{"text":"A fish is under the coral reef.",
"kif":
"(exists (?coral_reef ?fish)
  (and
    (instance ?coral_reef Reef)
    (instance ?fish Fish)
    (orientation ?fish ?coral_reef Below)))"
},
{"text":"A fish swims under the coral reef and eats a worm around a rock.",
"kif":
"(exists (?coral_reef ?event1 ?event2 ?fish ?rock ?worm)
  (and
    (exists (?location)
      (and
        (located ?event1 ?location)
        (orientation ?location ?coral_reef Below)))
    (exists (?location)
      (and
        (located ?event2 ?location)
        (orientation ?location ?rock Near)))
    (instance ?coral_reef Reef)
    (instance ?event1 Swimming)
    (instance ?event2 Eating)
    (instance ?fish Fish)
    (instance ?rock Rock)
    (instance ?worm Worm)
    (agent ?event1 ?fish)
    (agent ?event2 ?fish)
    (patient ?event2 ?worm)))"
},
{"text":"Bob wrote a poem atop the hill.",
"kif":
"(exists (?event ?hill ?poem)
  (and
    (attribute Robert-1 Male)
    (exists (?location)
      (and
        (located ?event ?location)
        (orientation ?location ?hill On)))
    (instance Robert-1 Human)
    (agent ?event Robert-1)
    (instance ?event Writing)
    (instance ?hill Hill)
    (authors Robert-1 ?poem)
    (instance ?poem FictionalText)
    (patient ?event ?poem)))"
},
{"text":"3 tanks move atop the hill.",
"kif":
"(exists (?event ?hill ?tanks)
  (and
    (exists (?location)
      (and
        (destination ?event ?location)
        (orientation ?location ?hill On)))
    (forall (?tank)
      (=>
        (member ?tank ?tanks)
        (instance ?tank MilitaryTank)))
    (instance ?event Transportation)
    (instance ?hill Hill)
    (instance ?tanks Collection)
    (member-count ?tanks 3)
    (patient ?event ?tanks)))"
},
{"text":"3 tanks fight atop the hill.",
"kif":
"(exists (?event ?hill ?tanks)
  (and
    (exists (?location)
      (and
        (located ?event ?location)
        (orientation ?location ?hill On)))
    (forall (?tank)
      (=>
        (member ?tank ?tanks)
        (instance ?tank MilitaryTank)))
    (instance ?event ViolentContest)
    (instance ?hill Hill)
    (instance ?tanks Collection)
    (member-count ?tanks 3)
    (patient ?event ?tanks)))"
},
{"text":"An apple falls under the bench.",
"kif":
"(exists (?apple ?bench ?event)
  (and
    (exists (?location)
      (and
        (destination ?event ?location)
        (orientation ?location ?bench Below)))
    (instance ?apple FruitOrVegetable)
    (instance ?bench Seat)
    (instance ?event MotionDownward)
    (patient ?event ?apple)))"
},
{"text":"An apple is under the tree branch.",
"kif":
"(exists (?apple ?tree_branch)
  (and
    (instance ?apple FruitOrVegetable)
    (instance ?tree_branch BodyPart)
    (orientation ?apple ?tree_branch Below)))"
},
{"text":"An apple ripens under the tree branch.",
"kif":
"(exists (?apple ?event ?tree_branch)
  (and
    (exists (?location)
      (and
        (located ?event ?location)
        (orientation ?location ?tree_branch Below)))
    (instance ?apple FruitOrVegetable)
    (instance ?event Growth)
    (instance ?tree_branch BodyPart)
    (patient ?event ?apple)))"
},
{"text":"There is a book.",
"kif":
"(exists (?book)
  (instance ?book Book))"
},
{"text":"There are 3 books.",
"kif":
"(exists (?books)
  (and
    (forall (?book)
      (=>
        (member ?book ?books)
        (instance ?book Book)))
    (instance ?books Collection)
    (member-count ?books 3)))"
},
{"text":"There is a pen on the desk.",
"kif":
"(exists (?desk ?pen)
  (and
    (instance ?desk Desk)
    (instance ?pen WritingDevice)
    (orientation ?pen ?desk On)))"
},
{"text":"There are 5 books on the desk.",
"kif":
"(exists (?books ?desk)
  (and
    (forall (?book)
      (=>
        (member ?book ?books)
        (instance ?book Book)))
    (instance ?books Collection)
    (member-count ?books 5)
    (instance ?desk Desk)
    (orientation ?books ?desk On)))"
},
{"text":"There is a meeting at 3 PM.",
"kif":
"(exists (?meeting)
  (and
    (overlapsTemporally
      (WhenFn ?meeting)
      (HourFn 15))
    (instance ?meeting FormalMeeting)))"
},
{"text":"There is a meeting on 9 AM in the lab.",
"kif":
"(exists (?lab ?meeting)
  (and
    (overlapsTemporally
      (WhenFn ?meeting)
      (HourFn 9))
    (instance ?lab Laboratory)
    (instance ?meeting FormalMeeting)
    (located ?meeting ?lab)))"
},
{"text":"The books are on the desk.",
"kif":
"(exists (?books ?desk)
  (and
    (forall (?book)
      (=>
        (member ?book ?books)
        (instance ?book Book)))
    (instance ?books Collection)
    (instance ?desk Desk)
    (orientation ?books ?desk On)))"
},
{"text":"A pile of books are on the desk.",
"kif":
"(exists (?books ?desk)
  (and
    (forall (?book)
      (=>
        (member ?book ?books)
        (instance ?book Book)))
    (instance ?books Collection)
    (instance ?desk Desk)
    (orientation ?books ?desk On)))"
},
{"text":"There is a pile of books.",
"kif":
"(exists (?books)
  (and
    (forall (?book)
      (=>
        (member ?book ?books)
        (instance ?book Book)))
    (instance ?books Collection)))"
},
{"text":"There is a pile of books on the desk.",
"kif":
"(exists (?books ?desk)
  (and
    (forall (?book)
      (=>
        (member ?book ?books)
        (instance ?book Book)))
    (instance ?books Collection)
    (instance ?desk Desk)
    (orientation ?books ?desk On)))"
},
{"text":"Bob bought many books and several pens.",
"kif":
"(exists (?books ?event ?pens)
  (and
    (attribute Robert-1 Male)
    (forall (?book)
      (=>
        (member ?book ?books)
        (instance ?book Book)))
    (forall (?pen)
      (=>
        (member ?pen ?pens)
        (instance ?pen WritingDevice)))
    (instance Robert-1 Human)
    (instance ?books Collection)
    (agent ?event Robert-1)
    (instance ?event Buying)
    (instance ?pens Collection)
    (patient ?event ?books)
    (patient ?event ?pens)))"
},
{"text":"On the desk is a book.",
"kif":
"(exists (?book ?desk)
  (and
    (instance ?book Book)
    (instance ?desk Desk)
    (orientation ?book ?desk On)))"
},
{"text":"On the desk is a pile of books.",
"kif":
"(exists (?books ?desk)
  (and
    (forall (?book)
      (=>
        (member ?book ?books)
        (instance ?book Book)))
    (instance ?books Collection)
    (instance ?desk Desk)
    (orientation ?books ?desk On)))"
},
{"text":"Under the bed is a carpet.",
"kif":
"(exists (?bed ?carpet)
  (and
    (instance ?bed Bed)
    (instance ?carpet Clothing)
    (orientation ?carpet ?bed Below)))"
},
{"text":"Bob is around an oak tree.  A boy is under it.",
"kif":
"(exists (?boy ?oak_tree)
  (and
    (attribute Robert-1 Male)
    (instance Robert-1 Human)
    (attribute ?boy Male)
    (instance ?boy Human)
    (instance ?boy NotFullyFormed)
    (instance ?oak_tree BotanicalTree)
    (orientation Robert-1 ?oak_tree Near)
    (orientation ?boy ?oak_tree Below)))"
},
{"text":"Bob is around an oak tree.  Under it is a boy.",
"kif":
"(exists (?boy ?oak_tree)
  (and
    (attribute Robert-1 Male)
    (instance Robert-1 Human)
    (attribute ?boy Male)
    (instance ?boy Human)
    (instance ?boy NotFullyFormed)
    (instance ?oak_tree BotanicalTree)
    (orientation Robert-1 ?oak_tree Near)
    (orientation ?boy ?oak_tree Below)))"
},
{"text":"Bob is around an oak tree.  Under it is a bench.",
"kif":
"(exists (?bench ?oak_tree)
  (and
    (attribute Robert-1 Male)
    (instance Robert-1 Human)
    (instance ?bench Seat)
    (instance ?oak_tree BotanicalTree)
    (orientation Robert-1 ?oak_tree Near)
    (orientation ?bench ?oak_tree Below)))"
},
{"text":"Under the cloud is an oak tree.  Under it is a bench.",
"kif":
"(exists (?bench ?cloud ?oak_tree)
  (and
    (instance ?bench Seat)
    (instance ?cloud Cloud)
    (instance ?oak_tree BotanicalTree)
    (orientation ?bench ?oak_tree Below)
    (orientation ?oak_tree ?cloud Below)))"
},
{"text":"Bob has a dog. Does he likes it?",
"kif":
"(exists (?dog)
  (and
    (attribute Robert-1 Male)
    (instance Robert-1 Human)
    (enjoys Robert-1 ?dog)
    (instance ?dog Canine)
    (possesses Robert-1 ?dog)))"
},
{"text":"Did Bob buy a bike? He did not like his car.",
"kif":
"(exists (?bike ?car ?event)
  (and
    (attribute Robert-1 Male)
    (instance Robert-1 Human)
    (not
      (enjoys Robert-1 ?car))
    (instance ?bike LandVehicle)
    (instance ?bike PassengerVehicle)
    (instance ?bike PoweredVehicle)
    (instance ?car Automobile)
    (possesses Robert-1 ?car)
    (agent ?event Robert-1)
    (instance ?event Buying)
    (patient ?event ?bike)))"
},
{"text":"There are 2 books and 3 pens on the desk.",
"kif":
"(exists (?books ?desk ?pens)
  (and
    (forall (?book)
      (=>
        (member ?book ?books)
        (instance ?book Book)))
    (forall (?pen)
      (=>
        (member ?pen ?pens)
        (instance ?pen WritingDevice)))
    (instance ?books Collection)
    (member-count ?books 2)
    (instance ?desk Desk)
    (instance ?pens Collection)
    (member-count ?pens 3)
    (orientation ?books ?desk On)
    (orientation ?pens ?desk On)))"
},
{"text":"3 books and 2 pens are on the desk.",
"kif":
"(exists (?books ?desk ?pens)
  (and
    (forall (?book)
      (=>
        (member ?book ?books)
        (instance ?book Book)))
    (forall (?pen)
      (=>
        (member ?pen ?pens)
        (instance ?pen WritingDevice)))
    (instance ?books Collection)
    (member-count ?books 3)
    (instance ?desk Desk)
    (instance ?pens Collection)
    (member-count ?pens 2)
    (orientation ?books ?desk On)
    (orientation ?pens ?desk On)))"
},
{"text":"A dog and a cat are under the desk.",
"kif":
"(exists (?cat ?desk ?dog)
  (and
    (instance ?cat Feline)
    (instance ?desk Desk)
    (instance ?dog Canine)
    (orientation ?cat ?desk Below)
    (orientation ?dog ?desk Below)))"
},
{"text":"Bob and Mary live atop a hill.",
"kif":
"(exists (?hill)
  (and
    (attribute Mary-1 Female)
    (attribute Robert-1 Male)
    (exists (?location)
      (and
        (inhabits Mary-1 ?location)
        (orientation ?location ?hill Above)))
    (exists (?location)
      (and
        (inhabits Robert-1 ?location)
        (orientation ?location ?hill Above)))
    (instance Mary-1 Human)
    (instance Robert-1 Human)
    (instance ?hill Hill)))"
},
{"text":"Bob eats and drinks on the desk.",
"kif":
"(exists (?desk ?event1 ?event2)
  (and
    (attribute Robert-1 Male)
    (exists (?location)
      (and
        (located ?event2 ?location)
        (orientation ?location ?desk On)))
    (instance Robert-1 Human)
    (instance ?desk Desk)
    (agent ?event1 Robert-1)
    (instance ?event1 Eating)
    (agent ?event2 Robert-1)
    (instance ?event2 Drinking)))"
},
{"text":"Under the desk are a dog and a cat.",
"kif":
"(exists (?cat ?desk ?dog)
  (and
    (instance ?cat Feline)
    (instance ?desk Desk)
    (instance ?dog Canine)
    (orientation ?cat ?desk Below)
    (orientation ?dog ?desk Below)))"
},
{"text":"Under the desk are a dog, a cat and a rabbit.",
"kif":
"(exists (?cat ?desk ?dog ?rabbit)
  (and
    (instance ?cat Feline)
    (instance ?desk Desk)
    (instance ?dog Canine)
    (instance ?rabbit Rabbit)
    (orientation ?cat ?desk Below)
    (orientation ?dog ?desk Below)
    (orientation ?rabbit ?desk Below)))"
},
{"text":"Under the desk are a dog, a cat, a rabbit and a pig.",
"kif":
"(exists (?cat ?desk ?dog ?pig ?rabbit)
  (and
    (instance ?cat Feline)
    (instance ?desk Desk)
    (instance ?dog Canine)
    (instance ?pig Pig)
    (instance ?rabbit Rabbit)
    (orientation ?cat ?desk Below)
    (orientation ?dog ?desk Below)
    (orientation ?pig ?desk Below)
    (orientation ?rabbit ?desk Below)))"
},
{"text":"Is there a meeting at 3 PM in the lab?",
"kif":
"(exists (?lab ?meeting)
  (and
    (overlapsTemporally
      (WhenFn ?meeting)
      (HourFn 15))
    (instance ?lab Laboratory)
    (instance ?meeting FormalMeeting)
    (located ?meeting ?lab)))"
},
{"text":"Are there a book and a pen on the desk?",
"kif":
"(exists (?book ?desk ?pen)
  (and
    (instance ?book Book)
    (instance ?desk Desk)
    (instance ?pen WritingDevice)
    (orientation ?book ?desk On)
    (orientation ?pen ?desk On)))"
},
{"text":"Were there an apple tree, an orange tree and a peach tree in the garden?",
"kif":
"(exists (?apple_tree ?garden ?orange_tree ?peach_tree)
  (and
    (instance ?apple_tree FloweringPlant)
    (instance ?garden CultivatedLandArea)
    (instance ?orange_tree FloweringPlant)
    (instance ?peach_tree FloweringPlant)
    (located ?apple_tree ?garden)
    (located ?orange_tree ?garden)
    (located ?peach_tree ?garden)))"
},
{"text":"Are there an elephant, a monkey, a lion and a tiger in the circus?",
"kif":
"(exists (?circus ?elephant ?lion ?monkey ?tiger)
  (and
    (instance ?circus Group)
    (instance ?elephant Elephant)
    (instance ?lion Feline)
    (instance ?monkey Monkey)
    (instance ?tiger Feline)
    (located ?elephant ?circus)
    (located ?lion ?circus)
    (located ?monkey ?circus)
    (located ?tiger ?circus)))"
},
{"text":"Will there be a meeting at 3 PM in the lab?",
"kif":
"(exists (?lab ?meeting)
  (and
    (overlapsTemporally
      (WhenFn ?meeting)
      (HourFn 15))
    (instance ?lab Laboratory)
    (instance ?meeting FormalMeeting)
    (located ?meeting ?lab)))"
},
{"text":"Will not there be a meeting at 3 PM in the lab?",
"kif":
"(exists (?lab ?meeting)
  (and
    (instance ?lab Laboratory)
    (not
      (and
        (located ?meeting ?lab)
        (overlapsTemporally
          (WhenFn ?meeting)
          (HourFn 15))))
    (instance ?meeting FormalMeeting)))"
},
{"text":"Will there be a car and a bike in the garage?",
"kif":
"(exists (?bike ?car ?garage)
  (and
    (instance ?bike LandVehicle)
    (instance ?bike PassengerVehicle)
    (instance ?bike PoweredVehicle)
    (instance ?car Automobile)
    (instance ?garage Garage)
    (located ?bike ?garage)
    (located ?car ?garage)))"
},
{"text":"Shall there be a book, a picture and a pen on the shelf?",
"kif":
"(exists (?book ?pen ?picture ?shelf)
  (and
    (instance ?book Book)
    (instance ?pen WritingDevice)
    (instance ?picture PaintedPicture)
    (instance ?shelf Shelf)
    (orientation ?book ?shelf On)
    (orientation ?pen ?shelf On)
    (orientation ?picture ?shelf On)))"
},
{"text":"Shall there be a computer, a desk, a chair and a blackboard in the library?",
"kif":
"(exists (?blackboard ?chair ?computer ?desk ?library)
  (and
    (instance ?blackboard Device)
    (instance ?chair Chair)
    (instance ?computer Computer)
    (instance ?desk Desk)
    (instance ?library Room)
    (located ?blackboard ?library)
    (located ?chair ?library)
    (located ?computer ?library)
    (located ?desk ?library)))"
},
{"text":"On the bottom is a book, then a pen.",
"kif":
"(exists (?book ?pen)
  (and
    (instance ?book Book)
    (instance ?pen WritingDevice)
    (orientation ?pen ?book On)))"
},
{"text":"At the top is a photo, then a flag.",
"kif":
"(exists (?flag ?photo)
  (and
    (instance ?flag Flag)
    (instance ?photo Photograph)
    (orientation ?flag ?photo Below)))"
},
{"text":"At the right is Bob, then Mary.",
"kif":
"(and
  (attribute Mary-1 Female)
  (attribute Robert-1 Male)
  (instance Mary-1 Human)
  (instance Robert-1 Human)
  (orientation Mary-1 Robert-1 Left))"
},
{"text":"On the North is a beach, then the city.",
"kif":
"(exists (?beach ?city)
  (and
    (instance ?beach ShoreArea)
    (instance ?city City)
    (orientation ?city ?beach South)))"
},
{"text":"There are 10 books under the desk and on the floor.",
"kif":
"(exists (?books ?desk ?floor)
  (and
    (forall (?book)
      (=>
        (member ?book ?books)
        (instance ?book Book)))
    (instance ?books Collection)
    (member-count ?books 10)
    (instance ?desk Desk)
    (instance ?floor Floor)
    (orientation ?books ?desk Below)
    (orientation ?books ?floor On)))"
},
{"text":"There is a blue sky over the mountain and over the sea.",
"kif":
"(exists (?blue_sky ?mountain ?sea)
  (and
    (instance ?blue_sky AtmosphericRegion)
    (instance ?mountain Mountain)
    (instance ?sea Sea)
    (orientation ?blue_sky ?mountain Above)
    (orientation ?blue_sky ?sea Above)))"
},
{"text":"On the bottom is a book, then a photo, then a flag.",
"kif":
"(exists (?book ?flag ?photo)
  (and
    (instance ?book Book)
    (instance ?flag Flag)
    (instance ?photo Photograph)
    (orientation ?photo ?book On)
    (orientation ?flag ?photo On)))"
},
{"text":"On the bottom is a book, then a photo, then a flag, then a pen.",
"kif":
"(exists (?book ?flag ?pen ?photo)
  (and
    (instance ?book Book)
    (instance ?flag Flag)
    (instance ?pen WritingDevice)
    (instance ?photo Photograph)
    (orientation ?photo ?book On)
    (orientation ?pen ?flag On)
    (orientation ?flag ?photo On)))"
},
{"text":"At the top is a flower, then a photo, then a book, then a typewriter.",
"kif":
"(exists (?book ?flower ?photo ?typewriter)
  (and
    (instance ?book Book)
    (instance ?flower FloweringPlant)
    (instance ?photo Photograph)
    (instance ?typewriter Device)
    (orientation ?book ?photo Below)
    (orientation ?typewriter ?book Below)
    (orientation ?photo ?flower Below)))"
},
{"text":"From the right is Bob, then Mary, then Jim, then Tom, then Susan.",
"kif":
"(and
  (attribute James-1 Male)
  (attribute Mary-1 Female)
  (attribute Robert-1 Male)
  (attribute Susan-1 Female)
  (attribute Tom-1 Male)
  (instance James-1 Human)
  (instance Mary-1 Human)
  (instance Robert-1 Human)
  (instance Susan-1 Human)
  (instance Tom-1 Human)
  (orientation James-1 Mary-1 Left)
  (orientation Mary-1 Robert-1 Left)
  (orientation Susan-1 Tom-1 Left)
  (orientation Tom-1 James-1 Left))"
},
{"text":"From the North is a lake, then a river, then a mountain, then a prairie, then the city.",
"kif":
"(exists (?city ?lake ?mountain ?prairie ?river)
  (and
    (instance ?city City)
    (instance ?lake Lake)
    (instance ?mountain Mountain)
    (instance ?prairie LandArea)
    (instance ?river River)
    (orientation ?city ?prairie South)
    (orientation ?river ?lake South)
    (orientation ?prairie ?mountain South)
    (orientation ?mountain ?river South)))"
},
{"text":"There is a pile of bricks.  On the bottom is a red brick, then a yellow brick, then a blue brick, then a white brick.",
"kif":
"(exists (?brick2 ?brick3 ?brick4 ?brick5 ?bricks)
  (and
    (forall (?brick1)
      (=>
        (member ?brick1 ?bricks)
        (instance ?brick1 Brick)))
    (attribute ?brick2 White)
    (attribute ?brick3 Blue)
    (attribute ?brick4 Yellow)
    (attribute ?brick5 Red)
    (instance ?bricks Collection)
    (orientation ?brick2 ?brick3 On)
    (member ?brick2 ?bricks)
    (orientation ?brick3 ?brick4 On)
    (member ?brick3 ?bricks)
    (orientation ?brick4 ?brick5 On)
    (member ?brick4 ?bricks)
    (member ?brick5 ?bricks)))"
},
{"text":"There is a pile of books. At the top is a red book, then a yellow book.",
"kif":
"(exists (?book2 ?book3 ?books)
  (and
    (forall (?book1)
      (=>
        (member ?book1 ?books)
        (instance ?book1 Book)))
    (attribute ?book2 Yellow)
    (attribute ?book3 Red)
    (instance ?books Collection)
    (orientation ?book2 ?book3 Below)
    (member ?book2 ?books)
    (member ?book3 ?books)))"
},
{"text":"There are 3 blocks. On the bottom is a red block, then a yellow block, then a blue block.",
"kif":
"(exists (?block2 ?block3 ?block4 ?blocks)
  (and
    (forall (?block1)
      (=>
        (member ?block1 ?blocks)
        (instance ?block1 BoardOrBlock)))
    (attribute ?block2 Blue)
    (attribute ?block3 Yellow)
    (attribute ?block4 Red)
    (instance ?blocks Collection)
    (member-count ?blocks 3)
    (orientation ?block2 ?block3 On)
    (member ?block2 ?blocks)
    (orientation ?block3 ?block4 On)
    (member ?block3 ?blocks)
    (member ?block4 ?blocks)))"
},
{"text":"Bob reads his book where Mary reads her novel.",
"kif":
"(exists (?book ?event1 ?event2 ?novel ?place)
  (and
    (attribute Mary-1 Female)
    (attribute Robert-1 Male)
    (instance Mary-1 Human)
    (instance Robert-1 Human)
    (instance ?book Book)
    (possesses Robert-1 ?book)
    (agent ?event1 Robert-1)
    (instance ?event1 Reading)
    (agent ?event2 Mary-1)
    (instance ?event2 Reading)
    (instance ?novel Novel)
    (possesses Mary-1 ?novel)
    (instance ?place Region)
    (patient ?event1 ?book)
    (destination ?event1 ?place)
    (patient ?event2 ?novel)
    (destination ?event2 ?place)))"
},
{"text":"The troop attacked the enemy where it landed.",
"kif":
"(exists (?enemy ?event1 ?event2 ?place ?troop)
  (and
    (instance ?enemy MilitaryUnit)
    (instance ?event2 IntentionalProcess)
    (instance ?event1 Attack)
    (instance ?place Region)
    (attribute ?troop Soldier)
    (patient ?event1 ?enemy)
    (destination ?event2 ?place)
    (patient ?event2 ?place)
    (destination ?event1 ?place)
    (agent ?event1 ?troop)))"
},
{"text":"Bob runs where Mary walks in the morning.",
"kif":
"(exists (?event1 ?event2 ?morning ?place)
  (and
    (attribute Mary-1 Female)
    (attribute Robert-1 Male)
    (instance Mary-1 Human)
    (instance Robert-1 Human)
    (agent ?event1 Robert-1)
    (instance ?event1 Walking)
    (agent ?event2 Mary-1)
    (instance ?event2 Walking)
    (instance ?morning Morning)
    (overlapsTemporally
      (WhenFn ?event2) ?morning)
    (instance ?place Region)
    (destination ?event1 ?place)
    (destination ?event2 ?place)))"
},
{"text":"The plane attacked the enemy where there was a missile defense system.",
"kif":
"(exists (?enemy ?event ?missile_defense_system ?place ?plane)
  (and
    (instance ?enemy MilitaryUnit)
    (instance ?event Attack)
    (instance ?missile_defense_system Device)
    (instance ?place Region)
    (instance ?plane Airplane)
    (patient ?event ?enemy)
    (destination ?event ?place)
    (agent ?event ?plane)
    (located ?missile_defense_system ?place)))"
},
{"text":"The boy feeds his cows where there is grass.",
"kif":
"(exists (?boy ?cows ?event ?grass ?place)
  (and
    (attribute ?boy Male)
    (instance ?boy Human)
    (instance ?boy NotFullyFormed)
    (instance ?cows Cow)
    (instance ?event Giving)
    (instance ?grass Food)
    (instance ?place Region)
    (possesses ?boy ?cows)
    (agent ?event ?boy)
    (patient ?event ?cows)
    (destination ?event ?place)
    (located ?grass ?place)))"
},
{"text":"Bob went to where Mary went to.",
"kif":
"(exists (?event1 ?event2 ?place)
  (and
    (attribute Mary-1 Female)
    (attribute Robert-1 Male)
    (instance Mary-1 Human)
    (instance Robert-1 Human)
    (agent ?event1 Robert-1)
    (instance ?event1 Transportation)
    (agent ?event2 Mary-1)
    (instance ?event2 Transportation)
    (instance ?place Region)
    (destination ?event1 ?place)
    (destination ?event2 ?place)))"
},
{"text":"Bob came from where Mary went to.",
"kif":
"(exists (?event1 ?event2 ?place)
  (and
    (attribute Mary-1 Female)
    (attribute Robert-1 Male)
    (instance Mary-1 Human)
    (instance Robert-1 Human)
    (agent ?event1 Robert-1)
    (instance ?event1 BodyMotion)
    (agent ?event2 Mary-1)
    (instance ?event2 Transportation)
    (instance ?place Region)
    (origin ?event1 ?place)
    (destination ?event2 ?place)))"
},
{"text":"Bob came from where Mary bought the book.",
"kif":
"(exists (?book ?event1 ?event2 ?place)
  (and
    (attribute Mary-1 Female)
    (attribute Robert-1 Male)
    (instance Mary-1 Human)
    (instance Robert-1 Human)
    (instance ?book Book)
    (agent ?event1 Robert-1)
    (instance ?event1 BodyMotion)
    (agent ?event2 Mary-1)
    (instance ?event2 Buying)
    (instance ?place Region)
    (patient ?event2 ?book)
    (origin ?event1 ?place)
    (destination ?event2 ?place)))"
},
{"text":"Bob bought the book where Mary went to.",
"kif":
"(exists (?book ?event1 ?event2 ?place)
  (and
    (attribute Mary-1 Female)
    (attribute Robert-1 Male)
    (instance Mary-1 Human)
    (instance Robert-1 Human)
    (instance ?book Book)
    (agent ?event1 Robert-1)
    (instance ?event1 Buying)
    (agent ?event2 Mary-1)
    (instance ?event2 Transportation)
    (instance ?place Region)
    (patient ?event1 ?book)
    (destination ?event1 ?place)
    (destination ?event2 ?place)))"
},
{"text":"Bob walked around where Mary lost her key.",
"kif":
"(exists (?event1 ?event2 ?key ?place)
  (and
    (attribute Mary-1 Female)
    (attribute Robert-1 Male)
    (exists (?location)
      (and
        (located ?event1 ?location)
        (orientation ?location ?place Near)))
    (instance Mary-1 Human)
    (instance Robert-1 Human)
    (agent ?event1 Robert-1)
    (instance ?event1 Walking)
    (agent ?event2 Mary-1)
    (instance ?event2 Process)
    (instance ?key Key)
    (possesses Mary-1 ?key)
    (instance ?place Region)
    (patient ?event2 ?key)
    (destination ?event2 ?place)))"
},
{"text":"Bob looked around where Mary lost her key.",
"kif":
"(exists (?event1 ?event2 ?key ?place)
  (and
    (attribute Mary-1 Female)
    (attribute Robert-1 Male)
    (exists (?location)
      (and
        (located ?event1 ?location)
        (orientation ?location ?place Near)))
    (instance Mary-1 Human)
    (instance Robert-1 Human)
    (experiencer ?event1 Robert-1)
    (instance ?event1 Looking)
    (agent ?event2 Mary-1)
    (instance ?event2 Process)
    (instance ?key Key)
    (possesses Mary-1 ?key)
    (instance ?place Region)
    (patient ?event2 ?key)
    (destination ?event2 ?place)))"
},
{"text":"There is a cloud above where the tree grows.",
"kif":
"(exists (?cloud ?event ?place ?tree)
  (and
    (instance ?cloud Cloud)
    (instance ?event Process)
    (instance ?place Region)
    (instance ?tree Plant)
    (orientation ?cloud ?place Above)
    (destination ?event ?place)
    (agent ?event ?tree)))"
},
{"text":"The bird flies over where the oak tree grows.",
"kif":
"(exists (?bird ?event1 ?event2 ?oak_tree ?place)
  (and
    (exists (?location)
      (and
        (located ?event1 ?location)
        (orientation ?location ?place Above)))
    (instance ?bird Bird)
    (instance ?event1 Flying)
    (instance ?event2 Process)
    (instance ?oak_tree BotanicalTree)
    (instance ?place Region)
    (agent ?event1 ?bird)
    (agent ?event2 ?oak_tree)
    (destination ?event2 ?place)))"
},
{"text":"The fish swims under where the coral reef grows.",
"kif":
"(exists (?coral_reef ?event1 ?event2 ?fish ?place)
  (and
    (exists (?location)
      (and
        (located ?event2 ?location)
        (orientation ?location ?place Below)))
    (instance ?coral_reef Reef)
    (instance ?event1 Process)
    (instance ?event2 Swimming)
    (instance ?fish Fish)
    (instance ?place Region)
    (destination ?event1 ?coral_reef)
    (patient ?event1 ?coral_reef)
    (agent ?event2 ?fish)))"
},
{"text":"Bob swims below where Jim swims.",
"kif":
"(exists (?event1 ?event2 ?place)
  (and
    (attribute James-1 Male)
    (attribute Robert-1 Male)
    (exists (?location)
      (and
        (located ?event1 ?location)
        (orientation ?location ?place Below)))
    (instance James-1 Human)
    (instance Robert-1 Human)
    (agent ?event1 Robert-1)
    (instance ?event1 Swimming)
    (agent ?event2 James-1)
    (instance ?event2 Swimming)
    (instance ?place Region)
    (destination ?event2 ?place)))"
},
{"text":"The war was in 1900.",
"kif":
"(exists (?war)
  (and
    (overlapsTemporally
      (WhenFn ?war)
      (YearFn 1900))
    (instance ?war War)))"
},
{"text":"A card was inserted by Bob.",
"kif":
"(exists (?card ?event)
  (and
    (attribute Robert-1 Male)
    (instance Robert-1 Human)
    (instance ?card BankCard)
    (agent ?event Robert-1)
    (instance ?event Putting)
    (patient ?event ?card)))"
},
{"text":"Rome was built by the slaves.",
"kif":
"(exists (?event ?slaves)
  (and
    (forall (?slave)
      (=>
        (member ?slave ?slaves)
        (instance ?slave HumanSlave)))
    (instance Rome City)
    (instance ?event Making)
    (patient ?event Rome)
    (instance ?slaves Collection)
    (agent ?event ?slaves)))"
},
{"text":"The infant was not carried by the mother.",
"kif":
"(not
  (exists (?event ?infant ?mother)
    (and
      (instance ?event Transportation)
      (attribute ?infant NonFullyFormed)
      (instance ?infant Human)
      (patient ?event ?infant)
      (agent ?event ?mother))))"
},
{"text":"The road will not be paved by the gardener.",
"kif":
"(not
  (exists (?event ?gardener ?road)
    (and
      (instance ?event Covering)
      (instance ?gardener Human)
      (instance ?road Roadway)
      (agent ?event ?gardener)
      (path ?event ?road))))"
},
{"text":"The road was paved.",
"kif":
"(exists (?agent ?event ?road)
  (and
    (instance ?agent Agent)
    (instance ?event Covering)
    (instance ?road Roadway)
    (agent ?event ?agent)
    (path ?event ?road)))"
},
{"text":"The city was built.",
"kif":
"(exists (?agent ?city ?event)
  (and
    (instance ?agent Agent)
    (instance ?city City)
    (instance ?event Making)
    (agent ?event ?agent)
    (patient ?event ?city)))"
},
{"text":"The history was made.",
"kif":
"(exists (?agent ?event ?history)
  (and
    (instance ?agent Agent)
    (instance ?event Process)
    (instance ?history PastFn)
    (agent ?event ?agent)
    (patient ?event ?history)))"
},
{"text":"The telephone was created by Bell.",
"kif":
"(exists (?event ?telephone)
  (and
    (instance Bell Human)
    (agent ?event Bell)
    (instance ?event Process)
    (instance ?telephone Telephone)
    (patient ?event ?telephone)))"
},
{"text":"The card that is inserted by Bob is red.",
"kif":
"(exists (?card ?event)
  (and
    (attribute Robert-1 Male)
    (instance Robert-1 Human)
    (attribute ?card Red)
    (instance ?card BankCard)
    (agent ?event Robert-1)
    (instance ?event Putting)
    (patient ?event ?card)))"
},
{"text":"The car that was damaged is red.",
"kif":
"(exists (?agent ?car ?event)
  (and
    (instance ?agent Agent)
    (attribute ?car Red)
    (instance ?car Automobile)
    (instance ?event Damaging)
    (agent ?event ?agent)
    (patient ?event ?car)))"
},
{"text":"The tiger that was shot by Bob killed a boy.",
"kif":
"(exists (?boy ?event1 ?event2 ?tiger)
  (and
    (attribute Robert-1 Male)
    (instance Robert-1 Human)
    (attribute ?boy Male)
    (instance ?boy Human)
    (instance ?boy NotFullyFormed)
    (agent ?event1 Robert-1)
    (instance ?event1 Shooting)
    (instance ?event2 Killing)
    (instance ?tiger Feline)
    (patient ?event2 ?boy)
    (patient ?event1 ?tiger)
    (agent ?event2 ?tiger)))"
},
{"text":"Bob gave Mary a book that was written by Bob's father.",
"kif":
"(exists (?book ?event ?father)
  (and
    (attribute Mary-1 Female)
    (attribute Robert-1 Male)
    (instance Mary-1 Human)
    (instance Robert-1 Human)
    (instance ?book Book)
    (agent ?event Robert-1)
    (destination ?event Mary-1)
    (instance ?event Giving)
    (father ?father Robert-1)
    (patient ?event ?book)
    (authors ?father ?book)))"
},
{"text":"The boy that was hit by a car plays in the park.",
"kif":
"(exists (?boy ?car ?event1 ?event2 ?park)
  (and
    (attribute ?boy Male)
    (instance ?boy Human)
    (instance ?boy NotFullyFormed)
    (instance ?car Automobile)
    (instance ?event1 Impelling)
    (instance ?event2 Game)
    (instance ?park PublicPark)
    (patient ?event1 ?boy)
    (agent ?event2 ?boy)
    (agent ?event1 ?car)
    (destination ?event2 ?park)))"
},
{"text":"Iliad is an epic poem that was written by Homer.",
"kif":
"(and
  (authors Homer Iliad)
  (instance Homer Human)
  (instance Iliad NarrativeText))"
},
{"text":"The boy who was hit is protected.",
"kif":
"(exists (?agent1 ?agent2 ?boy ?event ?state)
  (and
    (instance ?agent1 Agent)
    (instance ?agent2 Agent)
    (attribute ?boy Male)
    (instance ?boy Human)
    (instance ?boy NotFullyFormed)
    (instance ?event Impelling)
    (instance ?state Maintaining)
    (agent ?event ?agent1)
    (agent ?state ?agent2)
    (patient ?event ?boy)
    (patient ?state ?boy)))"
},
{"text":"The car that was damaged is abandoned.",
"kif":
"(exists (?agent1 ?agent2 ?car ?event1 ?event2)
  (and
    (instance ?agent1 Agent)
    (instance ?agent2 Agent)
    (instance ?car Automobile)
    (instance ?event1 Damaging)
    (instance ?event2 UnilateralGiving)
    (agent ?event1 ?agent1)
    (agent ?event2 ?agent2)
    (patient ?event1 ?car)
    (patient ?event2 ?car)))"
},
{"text":"A card was sent to Mary by Bob.",
"kif":
"(exists (?card ?event)
  (and
    (attribute Mary-1 Female)
    (attribute Robert-1 Male)
    (instance Mary-1 Human)
    (instance Robert-1 Human)
    (instance ?card BankCard)
    (agent ?event Robert-1)
    (destination ?event Mary-1)
    (instance ?event Directing)
    (patient ?event ?card)))"
},
{"text":"A card was sent Mary by Bob.",
"kif":
"(exists (?card ?event)
  (and
    (attribute Mary-1 Female)
    (attribute Robert-1 Male)
    (instance Mary-1 Human)
    (instance Robert-1 Human)
    (instance ?card BankCard)
    (agent ?event Robert-1)
    (destination ?event Mary-1)
    (instance ?event Directing)
    (patient ?event ?card)))"
},
{"text":"A card was sent to Mary.",
"kif":
"(exists (?agent ?card ?event)
  (and
    (attribute Mary-1 Female)
    (instance Mary-1 Human)
    (instance ?agent Agent)
    (instance ?card BankCard)
    (destination ?event Mary-1)
    (instance ?event Directing)
    (agent ?event ?agent)
    (patient ?event ?card)))"
},
{"text":"A card was sent Mary.",
"kif":
"(exists (?agent ?card ?event)
  (and
    (attribute Mary-1 Female)
    (instance Mary-1 Human)
    (instance ?agent Agent)
    (instance ?card BankCard)
    (destination ?event Mary-1)
    (instance ?event Directing)
    (agent ?event ?agent)
    (patient ?event ?card)))"
},
{"text":"Mary was sent a card to by Bob.",
"kif":
"(exists (?card ?event)
  (and
    (attribute Mary-1 Female)
    (attribute Robert-1 Male)
    (instance Mary-1 Human)
    (instance Robert-1 Human)
    (instance ?card BankCard)
    (agent ?event Robert-1)
    (destination ?event Mary-1)
    (instance ?event Directing)
    (patient ?event ?card)))"
},
{"text":"Mary was sent a card to.",
"kif":
"(exists (?agent ?card ?event)
  (and
    (attribute Mary-1 Female)
    (instance Mary-1 Human)
    (instance ?agent Agent)
    (instance ?card BankCard)
    (destination ?event Mary-1)
    (instance ?event Directing)
    (agent ?event ?agent)
    (patient ?event ?card)))"
},
{"text":"The message which was sent to Mary by Bob is important.",
"kif":
"(exists (?event ?message)
  (and
    (attribute Mary-1 Female)
    (attribute Robert-1 Male)
    (instance Mary-1 Human)
    (instance Robert-1 Human)
    (agent ?event Robert-1)
    (destination ?event Mary-1)
    (instance ?event Directing)
    (attribute ?message SubjectiveAssessmentAttribute)
    (instance ?message Text)
    (patient ?event ?message)))"
},
{"text":"The message which was sent Mary by Bob is important.",
"kif":
"(exists (?event ?message)
  (and
    (attribute Mary-1 Female)
    (attribute Robert-1 Male)
    (instance Mary-1 Human)
    (instance Robert-1 Human)
    (agent ?event Robert-1)
    (destination ?event Mary-1)
    (instance ?event Directing)
    (attribute ?message SubjectiveAssessmentAttribute)
    (instance ?message Text)
    (patient ?event ?message)))"
},
{"text":"The message which was sent to Mary is important.",
"kif":
"(exists (?agent ?event ?message)
  (and
    (attribute Mary-1 Female)
    (instance Mary-1 Human)
    (instance ?agent Agent)
    (destination ?event Mary-1)
    (instance ?event Directing)
    (attribute ?message SubjectiveAssessmentAttribute)
    (instance ?message Text)
    (agent ?event ?agent)
    (patient ?event ?message)))"
},
{"text":"The message which was sent Mary is important.",
"kif":
"(exists (?agent ?event ?message)
  (and
    (attribute Mary-1 Female)
    (instance Mary-1 Human)
    (instance ?agent Agent)
    (destination ?event Mary-1)
    (instance ?event Directing)
    (attribute ?message SubjectiveAssessmentAttribute)
    (instance ?message Text)
    (agent ?event ?agent)
    (patient ?event ?message)))"
},
{"text":"Mary who was sent a message to by Bob reads a book.",
"kif":
"(exists (?book ?event1 ?event2 ?message)
  (and
    (attribute Mary-1 Female)
    (attribute Robert-1 Male)
    (instance Mary-1 Human)
    (instance Robert-1 Human)
    (instance ?book Book)
    (agent ?event1 Mary-1)
    (instance ?event1 Reading)
    (agent ?event2 Robert-1)
    (destination ?event2 Mary-1)
    (instance ?event2 Directing)
    (instance ?message Text)
    (patient ?event1 ?book)
    (patient ?event2 ?message)))"
},
{"text":"Mary who was sent a message to reads a book.",
"kif":
"(exists (?agent ?book ?event1 ?event2 ?message)
  (and
    (attribute Mary-1 Female)
    (instance Mary-1 Human)
    (instance ?agent Agent)
    (instance ?book Book)
    (agent ?event1 Mary-1)
    (instance ?event1 Reading)
    (destination ?event2 Mary-1)
    (instance ?event2 Directing)
    (instance ?message Text)
    (agent ?event2 ?agent)
    (patient ?event1 ?book)
    (patient ?event2 ?message)))"
},
{"text":"A saw is a tool that cuts things.",
"kif":
"(forall (?saw)
  (exists (?event ?thing)
    (=>
      (instance ?saw Device)
      (and
        (instance ?event Cutting)
        (instance ?saw Device)
        (instance ?thing Artifact)
        (agent ?event ?saw)
        (patient ?event ?thing)))))"
},
{"text":"A vat is a large tub that holds liquids.",
"kif":
"(forall (?vat)
  (exists (?event ?liquid)
    (=>
      (instance ?vat Artifact)
      (and
        (instance ?event Keeping)
        (attribute ?liquid Liquid)
        (attribute ?vat Large)
        (instance ?vat BathingDevice)
        (patient ?event ?liquid)
        (agent ?event ?vat)))))"
},
{"text":"Bottles containing water are red.",
"kif":
"(forall (?bottle ?water)
  (=>
    (and
      (instance ?bottle Bottle)
      (instance ?water Water)
      (contains ?bottle ?water))
    (and
      (attribute ?bottle Red)
      (instance ?bottle Bottle))))"
},
{"text":"Bottles that contain water are red.",
"kif":
"(forall (?bottle ?water)
  (=>
    (and
      (instance ?bottle Bottle)
      (instance ?water Water)
      (contains ?bottle ?water))
    (and
      (attribute ?bottle Red)
      (instance ?bottle Bottle))))"
},
{"text":"Documents containing information about weapons of mass destruction are top secret.",
"kif":
"(forall (?document ?weapon_of_mass_destruction)
  (=>
    (and
      (exists (?Proposition)
        (and
          (containsInformation ?document ?Proposition)
          (refers ?Proposition ?weapon_of_mass_destruction)))
      (instance ?document FactualText)
      (instance ?weapon_of_mass_destruction WeaponOfMassDestruction))
    (and
      (attribute ?document USTopSecret)
      (instance ?document FactualText))))"
},
{"text":"Documents containing information about the intelligence activities are top secret.",
"kif":
"(forall (?document ?intelligence_activities)
  (=>
    (and
      (exists (?Proposition)
        (and
          (containsInformation ?document ?Proposition)
          (refers ?Proposition ?intelligence_activities)))
      (forall (?intelligence_activity)
        (=>
          (member ?intelligence_activity ?intelligence_activities)
          (instance ?intelligence_activity IntelligenceActivities)))
      (instance ?document FactualText)
      (instance ?intelligence_activities Collection))
    (and
      (attribute ?document USTopSecret)
      (instance ?document FactualText))))"
},
{"text":"The SIO classified the document X as secret.",
"kif":
"(exists (?SIO ?X ?event)
  (and
    (holdsDuring
      (EndFn
        (WhenFn ?event))
      (attribute ?X USSecret))
    (instance ?SIO SeniorIntelligenceOfficer)
    (instance ?X FactualText)
    (instance ?event Classifying)
    (agent ?event ?SIO)
    (patient ?event ?X)))"
},
{"text":"The document Y was classified by the classification authority as top secret.",
"kif":
"(exists (?Y ?classification_authority ?event)
  (and
    (holdsDuring
      (EndFn
        (WhenFn ?event))
      (attribute ?Y USTopSecret))
    (instance ?Y FactualText)
    (instance ?classification_authority ClassificationAuthority)
    (instance ?event Classifying)
    (patient ?event ?Y)
    (agent ?event ?classification_authority)))"
},
{"text":"The book was classified as top secret by the committee.",
"kif":
"(exists (?book ?committee ?event)
  (and
    (holdsDuring
      (EndFn
        (WhenFn ?event))
      (attribute ?book USTopSecret))
    (instance ?book Book)
    (instance ?committee Commission)
    (instance ?event Classifying)
    (patient ?event ?book)
    (agent ?event ?committee)))"
},
{"text":"The book was classified by the committee as top secret.",
"kif":
"(exists (?book ?committee ?event)
  (and
    (holdsDuring
      (EndFn
        (WhenFn ?event))
      (attribute ?book USTopSecret))
    (instance ?book Book)
    (instance ?committee Commission)
    (instance ?event Classifying)
    (patient ?event ?book)
    (agent ?event ?committee)))"
},
{"text":"Documents containing information about weapons of mass destruction are classified as top secret.",
"kif":
"(forall (?document ?weapon_of_mass_destruction)
  (=>
    (and
      (exists (?Proposition)
        (and
          (containsInformation ?document ?Proposition)
          (refers ?Proposition ?weapon_of_mass_destruction)))
      (instance ?document FactualText)
      (instance ?weapon_of_mass_destruction WeaponOfMassDestruction))
    (exists (?agent ?event)
      (and
        (holdsDuring
          (EndFn
            (WhenFn ?event))
          (attribute ?document USTopSecret))
        (instance ?agent Agent)
        (instance ?document FactualText)
        (instance ?event Classifying)
        (agent ?event ?agent)
        (patient ?event ?document)))))"
},
{"text":"Documents containing information about weapons of mass destruction are classified top secret.",
"kif":
"(forall (?document ?weapon_of_mass_destruction)
  (=>
    (and
      (exists (?Proposition)
        (and
          (containsInformation ?document ?Proposition)
          (refers ?Proposition ?weapon_of_mass_destruction)))
      (instance ?document FactualText)
      (instance ?weapon_of_mass_destruction WeaponOfMassDestruction))
    (exists (?agent ?event)
      (and
        (holdsDuring
          (EndFn
            (WhenFn ?event))
          (attribute ?document USTopSecret))
        (instance ?agent Agent)
        (instance ?document FactualText)
        (instance ?event Classifying)
        (agent ?event ?agent)
        (patient ?event ?document)))))"
},
{"text":"Documents containing information about the production of weapons of mass destruction are classified as top secret.",
"kif":
"(forall (?document ?production ?weapon_of_mass_destruction)
  (=>
    (and
      (exists (?Process)
        (and
          (instance ?Process ?production)
          (patient ?Process ?weapon_of_mass_destruction)))
      (exists (?Proposition)
        (and
          (containsInformation ?document ?Proposition)
          (refers ?Proposition ?production)))
      (instance ?document FactualText)
      (instance ?production Creation)
      (instance ?weapon_of_mass_destruction WeaponOfMassDestruction))
    (exists (?agent ?event)
      (and
        (holdsDuring
          (EndFn
            (WhenFn ?event))
          (attribute ?document USTopSecret))
        (instance ?agent Agent)
        (instance ?document FactualText)
        (instance ?event Classifying)
        (agent ?event ?agent)
        (patient ?event ?document)))))"
},
{"text":"Documents containing information about the development of weapons of mass destruction are top secret.",
"kif":
"(forall (?development ?document ?weapon_of_mass_destruction)
  (=>
    (and
      (exists (?Process)
        (and
          (instance ?Process ?development)
          (patient ?Process ?weapon_of_mass_destruction)))
      (exists (?Proposition)
        (and
          (containsInformation ?document ?Proposition)
          (refers ?Proposition ?development)))
      (instance ?development Creation)
      (instance ?document FactualText)
      (instance ?weapon_of_mass_destruction WeaponOfMassDestruction))
    (and
      (attribute ?document USTopSecret)
      (instance ?document FactualText))))"
},
{"text":"Documents containing information about the proliferation of weapons of mass destruction are top secret.",
"kif":
"(forall (?document ?proliferation ?weapon_of_mass_destruction)
  (=>
    (and
      (exists (?Process)
        (and
          (instance ?Process ?proliferation)
          (patient ?Process ?weapon_of_mass_destruction)))
      (exists (?Proposition)
        (and
          (containsInformation ?document ?Proposition)
          (refers ?Proposition ?proliferation)))
      (instance ?document FactualText)
      (instance ?proliferation Growth)
      (instance ?weapon_of_mass_destruction WeaponOfMassDestruction))
    (and
      (attribute ?document USTopSecret)
      (instance ?document FactualText))))"
},
{"text":"Documents containing information about the deployment of weapons of mass destruction are top secret.",
"kif":
"(forall (?deployment ?document ?weapon_of_mass_destruction)
  (=>
    (and
      (exists (?Process)
        (and
          (instance ?Process ?deployment)
          (patient ?Process ?weapon_of_mass_destruction)))
      (exists (?Proposition)
        (and
          (containsInformation ?document ?Proposition)
          (refers ?Proposition ?deployment)))
      (instance ?deployment Putting)
      (instance ?document FactualText)
      (instance ?weapon_of_mass_destruction WeaponOfMassDestruction))
    (and
      (attribute ?document USTopSecret)
      (instance ?document FactualText))))"
},
{"text":"Documents containing information about the storage of weapons of mass destruction are top secret.",
"kif":
"(forall (?document ?storage ?weapon_of_mass_destruction)
  (=>
    (and
      (exists (?Process)
        (and
          (instance ?Process ?storage)
          (patient ?Process ?weapon_of_mass_destruction)))
      (exists (?Proposition)
        (and
          (containsInformation ?document ?Proposition)
          (refers ?Proposition ?storage)))
      (instance ?document FactualText)
      (instance ?storage Keeping)
      (instance ?weapon_of_mass_destruction WeaponOfMassDestruction))
    (and
      (attribute ?document USTopSecret)
      (instance ?document FactualText))))"
},
{"text":"The document, X, containing information about the storage of weapons of mass destruction is top secret.",
"kif":
"(exists (?X ?storage ?weapon_of_mass_destruction)
  (and
    (exists (?Process)
      (and
        (instance ?Process ?storage)
        (patient ?Process ?weapon_of_mass_destruction)))
    (exists (?Proposition)
      (and
        (containsInformation ?X ?Proposition)
        (refers ?Proposition ?storage)))
    (attribute ?X USTopSecret)
    (instance ?X FactualText)
    (instance ?storage Keeping)
    (instance ?weapon_of_mass_destruction WeaponOfMassDestruction)))"
},
{"text":"The document containing information about the storage of weapons of mass destruction is classified as top secret.",
"kif":
"(exists (?agent ?document ?event ?storage ?weapon_of_mass_destruction)
  (and
    (exists (?Process)
      (and
        (instance ?Process ?storage)
        (patient ?Process ?weapon_of_mass_destruction)))
    (exists (?Proposition)
      (and
        (containsInformation ?document ?Proposition)
        (refers ?Proposition ?storage)))
    (holdsDuring
      (EndFn
        (WhenFn ?event))
      (attribute ?document USTopSecret))
    (instance ?agent Agent)
    (instance ?document FactualText)
    (instance ?event Classifying)
    (instance ?storage Keeping)
    (instance ?weapon_of_mass_destruction WeaponOfMassDestruction)
    (agent ?event ?agent)
    (patient ?event ?document)))"
},
{"text":"The old red dog is hungry.",
"kif":
"(exists (?dog)
  (and
    (attribute ?dog Hungry)
    (attribute ?dog Old)
    (attribute ?dog Red)
    (instance ?dog Canine)))"
},
{"text":"The oldest red dog is hungry.",
"kif":
"(exists (?dog)
  (and
    (forall (?X)
      (=>
        (and
          (instance ?X Canine)
          (not
            (equal ?X ?dog)))
        (and
          (greaterThan ?val1 ?val2)
          (age ?dog ?val1)
          (age ?X ?val2))))
    (attribute ?dog Hungry)
    (attribute ?dog Red)
    (instance ?dog Canine)))"
},
{"text":"The oldest red dog goes to the park.",
"kif":
"(exists (?dog ?event ?park)
  (and
    (forall (?X)
      (=>
        (and
          (instance ?X Canine)
          (not
            (equal ?X ?dog)))
        (and
          (greaterThan ?val1 ?val2)
          (age ?dog ?val1)
          (age ?X ?val2))))
    (attribute ?dog Red)
    (instance ?dog Canine)
    (instance ?event Transportation)
    (instance ?park PublicPark)
    (agent ?event ?dog)
    (destination ?event ?park)))"
},
{"text":"An old, tall, hungry and thirsty man went to the shop.",
"kif":
"(exists (?event ?man ?shop)
  (and
    (instance ?event Transportation)
    (attribute ?man Hungry)
    (attribute ?man Old)
    (attribute ?man Tall)
    (attribute ?man Thirsty)
    (instance ?man Man)
    (instance ?shop RetailStore)
    (agent ?event ?man)
    (destination ?event ?shop)))"
},
{"text":"The old and unimportant documents are unclassified.",
"kif":
"(exists (?documents)
  (and
    (forall (?document)
      (=>
        (member ?document ?documents)
        (and
          (instance ?document FactualText)
          (attribute ?document SubjectiveAssessmentAttribute)
          (attribute ?document Old))))
    (attribute ?documents USUnclassified)
    (instance ?documents Collection)))"
},
{"text":"The new and long document, X, will be classified as top secret.",
"kif":
"(exists (?X ?agent ?event)
  (and
    (holdsDuring
      (EndFn
        (WhenFn ?event))
      (attribute ?X USTopSecret))
    (attribute ?X Long)
    (attribute ?X New)
    (instance ?X FactualText)
    (instance ?agent Agent)
    (instance ?event Classifying)
    (patient ?event ?X)
    (agent ?event ?agent)))"
},
{"text":"The new document is classified as For Official Use Only by the SIO.",
"kif":
"(exists (?SIO ?document ?event)
  (and
    (holdsDuring
      (EndFn
        (WhenFn ?event))
      (attribute ?document USFOUOClassification))
    (instance ?SIO SeniorIntelligenceOfficer)
    (attribute ?document New)
    (instance ?document FactualText)
    (instance ?event Classifying)
    (agent ?event ?SIO)
    (patient ?event ?document)))"
},
{"text":"Documents containing the secret about the development of nuclear weapons are top secret.",
"kif":
"(forall (?development ?document ?nuclear_weapon)
  (=>
    (and
      (exists (?Process)
        (and
          (instance ?Process ?development)
          (patient ?Process ?nuclear_weapon)))
      (exists (?Proposition)
        (and
          (containsInformation ?document ?Proposition)
          (refers ?Proposition ?development)))
      (instance ?development Creation)
      (instance ?document FactualText)
      (instance ?nuclear_weapon Weapon))
    (and
      (attribute ?document USTopSecret)
      (instance ?document FactualText))))"
},
{"text":"Documents containing the secret of the intelligence activities are top secret.",
"kif":
"(forall (?document ?intelligence_activities)
  (=>
    (and
      (exists (?Proposition)
        (and
          (containsInformation ?document ?Proposition)
          (refers ?Proposition ?intelligence_activities)))
      (forall (?intelligence_activity)
        (=>
          (member ?intelligence_activity ?intelligence_activities)
          (instance ?intelligence_activity IntelligenceActivities)))
      (instance ?document FactualText)
      (instance ?intelligence_activities Collection))
    (and
      (attribute ?document USTopSecret)
      (instance ?document FactualText))))"
},
{"text":"Documents containing the secret of the production of Vollum1B are classified as top secret.",
"kif":
"(forall (?document ?production)
  (=>
    (and
      (exists (?Process)
        (and
          (instance ?Process ?production)
          (patient ?Process Vollum1B)))
      (exists (?Proposition)
        (and
          (containsInformation ?document ?Proposition)
          (refers ?Proposition ?production)))
      (instance Vollum1B AerosolizedBacillusAnthracis)
      (instance ?document FactualText)
      (instance ?production Creation))
    (exists (?agent ?event)
      (and
        (holdsDuring
          (EndFn
            (WhenFn ?event))
          (attribute ?document USTopSecret))
        (instance ?agent Agent)
        (instance ?document FactualText)
        (instance ?event Classifying)
        (agent ?event ?agent)
        (patient ?event ?document)))))"
},
{"text":"Documents containing information about the proliferation of nuclear weapons are top secret.",
"kif":
"(forall (?document ?nuclear_weapon ?proliferation)
  (=>
    (and
      (exists (?Process)
        (and
          (instance ?Process ?proliferation)
          (patient ?Process ?nuclear_weapon)))
      (exists (?Proposition)
        (and
          (containsInformation ?document ?Proposition)
          (refers ?Proposition ?proliferation)))
      (instance ?document FactualText)
      (instance ?nuclear_weapon Weapon)
      (instance ?proliferation Growth))
    (and
      (attribute ?document USTopSecret)
      (instance ?document FactualText))))"
},
{"text":"Bob did not classify the document X.",
"kif":
"(not
  (exists (?X ?event)
    (and
      (attribute Robert-1 Male)
      (instance Robert-1 Human)
      (instance ?X FactualText)
      (agent ?event Robert-1)
      (instance ?event Classifying)
      (patient ?event ?X))))"
},
{"text":"The document is unclassified before 2001.",
"kif":
"(exists (?document)
  (and
    (lessThan
      (BeginFn
        (WhenFn
          (attribute ?document USUnclassified)))
      (BeginFn
        (YearFn 2001)))
    (instance ?document FactualText)))"
},
{"text":"The document was classified as top secret before 2001.",
"kif":
"(exists (?agent ?document ?event)
  (and
    (holdsDuring
      (EndFn
        (WhenFn ?event))
      (attribute ?document USTopSecret))
    (lessThan
      (BeginFn
        (WhenFn
          (attribute ?document USTopSecret)))
      (BeginFn
        (YearFn 2001)))
    (instance ?agent Agent)
    (instance ?document FactualText)
    (instance ?event Classifying)
    (agent ?event ?agent)
    (patient ?event ?document)))"
},
{"text":"The document was not classified as top secret before 2001.",
"kif":
"(not
  (exists (?agent ?document ?event)
    (and
      (holdsDuring
        (EndFn
          (WhenFn ?event))
        (attribute ?document USTopSecret))
      (lessThan
        (BeginFn
          (WhenFn
            (attribute ?document USTopSecret)))
        (BeginFn
          (YearFn 2001)))
      (instance ?agent Agent)
      (instance ?document FactualText)
      (instance ?event Classifying)
      (agent ?event ?agent)
      (patient ?event ?document))))"
},
{"text":"The new document, X, contains information about the deployment of military materials. It is classified as secret by the classification authority.",
"kif":
"(exists (?X ?classification_authority ?deployment ?event ?military_material)
  (and
    (exists (?Process)
      (and
        (instance ?Process ?deployment)
        (patient ?Process ?military_material)))
    (exists (?Proposition)
      (and
        (containsInformation ?X ?Proposition)
        (refers ?Proposition ?deployment)))
    (holdsDuring
      (EndFn
        (WhenFn ?event))
      (attribute ?X USSecret))
    (attribute ?X New)
    (instance ?X FactualText)
    (instance ?classification_authority ClassificationAuthority)
    (instance ?deployment Putting)
    (instance ?event Classifying)
    (instance ?military_material MilitaryMaterial)
    (patient ?event ?X)
    (agent ?event ?classification_authority)))"
},
{"text":"The document X contains information about the production of Vollum1B. What is X's security classification level?",
"kif":
"(exists (?X ?production)
  (and
    (exists (?Process)
      (and
        (instance ?Process ?production)
        (patient ?Process Vollum1B)))
    (exists (?Proposition)
      (and
        (containsInformation ?X ?Proposition)
        (refers ?Proposition ?production)))
    (instance Vollum1B AerosolizedBacillusAnthracis)
    (instance X PositiveInteger)
    (instance ?X FactualText)
    (instance ?production Creation)
    (attribute X ?what)
    (instance ?what SecurityClassificationLevel)))"
},
{"text":"The document X contains information about the military material. What is the security classification level of the document X?",
"kif":
"(exists (?X ?military_material)
  (and
    (exists (?Proposition)
      (and
        (containsInformation ?X ?Proposition)
        (refers ?Proposition ?military_material)))
    (instance ?X FactualText)
    (instance ?military_material MilitaryMaterial)
    (instance ?what SecurityClassificationLevel)
    (attribute ?X ?what)))"
},
{"text":"Bob bought a book.  Who is the author of the book?",
"kif":
"(exists (?book ?event)
  (and
    (attribute Robert-1 Male)
    (instance Robert-1 Human)
    (instance ?book Book)
    (agent ?event Robert-1)
    (instance ?event Buying)
    (instance ?who Human)
    (patient ?event ?book)
    (authors ?who ?book)))"
},
{"text":"The document X is unclassified.  Who classified it?",
"kif":
"(exists (?X ?event)
  (and
    (attribute ?X USUnclassified)
    (instance ?X FactualText)
    (instance ?event Classifying)
    (instance ?who Human)
    (patient ?event ?X)
    (agent ?event ?who)))"
},
{"text":"The document X contains information about the military material. What is its security classification level?",
"kif":
"(exists (?X ?military_material)
  (and
    (exists (?Proposition)
      (and
        (containsInformation ?X ?Proposition)
        (refers ?Proposition ?military_material)))
    (instance ?X FactualText)
    (instance ?military_material MilitaryMaterial)
    (instance ?what SecurityClassificationLevel)
    (attribute ?X ?what)))"
},
{"text":"The document X contains information about the production of Vollum1B. What is the document's security classification level?",
"kif":
"(exists (?X ?production)
  (and
    (exists (?Process)
      (and
        (instance ?Process ?production)
        (patient ?Process Vollum1B)))
    (exists (?Proposition)
      (and
        (containsInformation ?X ?Proposition)
        (refers ?Proposition ?production)))
    (instance Vollum1B AerosolizedBacillusAnthracis)
    (instance ?X FactualText)
    (instance ?production Creation)
    (instance ?what SecurityClassificationLevel)
    (attribute ?X ?what)))"
},
{"text":"Bob wrote a document. What is its security classification level?",
"kif":
"(exists (?document)
  (and
    (attribute Robert-1 Male)
    (instance Robert-1 Human)
    (authors Robert-1 ?document)
    (instance ?document FactualText)
    (instance ?what SecurityClassificationLevel)
    (attribute ?document ?what)))"
},
{"text":"Is the document top secret?",
"kif":
"(exists (?document)
  (and
    (attribute ?document USTopSecret)
    (instance ?document FactualText)))"
},
{"text":"Is the document X unclassified?",
"kif":
"(exists (?X)
  (and
    (attribute ?X USUnclassified)
    (instance ?X FactualText)))"
},
{"text":"Did Bob classify the document as top secret?",
"kif":
"(exists (?document ?event)
  (and
    (attribute Robert-1 Male)
    (holdsDuring
      (EndFn
        (WhenFn ?event))
      (attribute ?document USTopSecret))
    (instance Robert-1 Human)
    (instance ?document FactualText)
    (agent ?event Robert-1)
    (instance ?event Classifying)
    (patient ?event ?document)))"
},
{"text":"Was the document X classified as top secret by the SIO?",
"kif":
"(exists (?SIO ?X ?event)
  (and
    (holdsDuring
      (EndFn
        (WhenFn ?event))
      (attribute ?X USTopSecret))
    (instance ?SIO SeniorIntelligenceOfficer)
    (instance ?X FactualText)
    (instance ?event Classifying)
    (agent ?event ?SIO)
    (patient ?event ?X)))"
},
{"text":"Was the document X classified by the SIO as top secret?",
"kif":
"(exists (?SIO ?X ?event)
  (and
    (holdsDuring
      (EndFn
        (WhenFn ?event))
      (attribute ?X USTopSecret))
    (instance ?SIO SeniorIntelligenceOfficer)
    (instance ?X FactualText)
    (instance ?event Classifying)
    (agent ?event ?SIO)
    (patient ?event ?X)))"
},
{"text":"Is the book written by Bob?",
"kif":
"(exists (?book)
  (and
    (attribute Robert-1 Male)
    (instance Robert-1 Human)
    (authors Robert-1 ?book)
    (instance ?book Book)))"
},
{"text":"Shall the novel be written?",
"kif":
"(exists (?agent ?novel)
  (and
    (instance ?agent Agent)
    (instance ?novel Novel)
    (authors ?agent ?novel)))"
},
{"text":"Shall the document X be classified as top secret?",
"kif":
"(exists (?X ?agent ?event)
  (and
    (holdsDuring
      (EndFn
        (WhenFn ?event))
      (attribute ?X USTopSecret))
    (instance ?X FactualText)
    (instance ?agent Agent)
    (instance ?event Classifying)
    (patient ?event ?X)
    (agent ?event ?agent)))"
},
{"text":"Is there a meeting?",
"kif":
"(exists (?meeting)
  (instance ?meeting FormalMeeting))"
},
{"text":"Is there a book in the library?",
"kif":
"(exists (?book ?library)
  (and
    (instance ?book Book)
    (instance ?library Room)
    (located ?book ?library)))"
},
{"text":"Is the document unclassified before 2001?",
"kif":
"(exists (?document)
  (and
    (lessThan
      (BeginFn
        (WhenFn
          (attribute ?document USUnclassified)))
      (BeginFn
        (YearFn 2001)))
    (instance ?document FactualText)))"
},
{"text":"Who classified the document X as top secret?",
"kif":
"(exists (?X ?event)
  (and
    (holdsDuring
      (EndFn
        (WhenFn ?event))
      (attribute ?X USTopSecret))
    (instance ?X FactualText)
    (instance ?event Classifying)
    (instance ?who Human)
    (patient ?event ?X)
    (agent ?event ?who)))"
},
{"text":"Who classified the document?",
"kif":
"(exists (?document ?event)
  (and
    (instance ?document FactualText)
    (instance ?event Classifying)
    (instance ?who Human)
    (patient ?event ?document)
    (agent ?event ?who)))"
},
{"text":"Who did not classify the document X?",
"kif":
"(not
  (exists (?X ?event)
    (and
      (instance ?X FactualText)
      (instance ?event Classifying)
      (instance ?who Human)
      (patient ?event ?X)
      (agent ?event ?who))))"
},
{"text":"Who wrote Iliad?",
"kif":
"(and
  (instance Iliad Text)
  (authors ?who Iliad)
  (instance ?who Human))"
},
{"text":"Who wrote the book that Bob read?",
"kif":
"(exists (?book ?event)
  (and
    (attribute Robert-1 Male)
    (instance Robert-1 Human)
    (instance ?book Book)
    (agent ?event Robert-1)
    (instance ?event Reading)
    (instance ?who Human)
    (patient ?event ?book)
    (authors ?who ?book)))"
},
{"text":"What is the security classification level of the document?",
"kif":
"(exists (?document)
  (and
    (instance ?document FactualText)
    (instance ?what SecurityClassificationLevel)
    (attribute ?document ?what)))"
},
{"text":"What is the security classification level of the document X?",
"kif":
"(exists (?X)
  (and
    (instance ?X FactualText)
    (instance ?what SecurityClassificationLevel)
    (attribute ?X ?what)))"
},
{"text":"What are the security classification level of the document X and the document Y?",
"kif":
"(exists (?X ?Y)
  (and
    (instance ?X FactualText)
    (instance ?Y FactualText)
    (instance ?what1 SecurityClassificationLevel)
    (instance ?what2 SecurityClassificationLevel)
    (attribute ?X ?what1)
    (attribute ?Y ?what2)))"
},
{"text":"What are the security classification levels of the document X, the book Y and the letter Z?",
"kif":
"(exists (?X ?Y ?Z)
  (and
    (instance ?X FactualText)
    (instance ?Y Book)
    (instance ?Z Letter)
    (instance ?what1 SecurityClassificationLevel)
    (instance ?what2 SecurityClassificationLevel)
    (instance ?what3 SecurityClassificationLevel)
    (attribute ?X ?what1)
    (attribute ?Y ?what2)
    (attribute ?Z ?what3)))"
},
{"text":"What are the security classification levels of the document A, the book B, the report C and the letter D?",
"kif":
"(exists (?A ?B ?C ?D)
  (and
    (instance ?A FactualText)
    (instance ?B Book)
    (instance ?C Report)
    (instance ?D Letter)
    (instance ?what1 SecurityClassificationLevel)
    (instance ?what2 SecurityClassificationLevel)
    (instance ?what3 SecurityClassificationLevel)
    (instance ?what4 SecurityClassificationLevel)
    (attribute ?A ?what1)
    (attribute ?B ?what2)
    (attribute ?C ?what3)
    (attribute ?D ?what4)))"
},
{"text":"What did Bob classify as top secret?",
"kif":
"(exists (?event)
  (and
    (attribute Robert-1 Male)
    (holdsDuring
      (EndFn
        (WhenFn ?event))
      (attribute ?what USTopSecret))
    (instance Robert-1 Human)
    (agent ?event Robert-1)
    (instance ?event Classifying)
    (patient ?event ?what)))"
},
{"text":"What did Bob classify the document X as?",
"kif":
"(exists (?X ?event)
  (and
    (attribute Robert-1 Male)
    (holdsDuring
      (EndFn
        (WhenFn ?event))
      (attribute ?X ?what))
    (instance Robert-1 Human)
    (instance ?X FactualText)
    (agent ?event Robert-1)
    (instance ?event Classifying)
    (instance ?what SecurityClassificationLevel)
    (patient ?event ?X)))"
},
{"text":"What is the document X classified as?",
"kif":
"(exists (?X ?agent ?event)
  (and
    (holdsDuring
      (EndFn
        (WhenFn ?event))
      (attribute ?X ?what))
    (instance ?X FactualText)
    (instance ?agent Agent)
    (instance ?event Classifying)
    (instance ?what SecurityClassificationLevel)
    (patient ?event ?X)
    (agent ?event ?agent)))"
},
{"text":"What is not the document X's security classification level?",
"kif":
"(exists (?X)
  (and
    (instance ?X FactualText)
    (instance ?what SecurityClassificationLevel)
    (not
      (attribute ?X ?what))))"
},
{"text":"What was the security classification level of the document X before 2001?",
"kif":
"(exists (?X)
  (and
    (lessThan
      (BeginFn
        (WhenFn
          (attribute ?X ?what)))
      (BeginFn
        (YearFn 2001)))
    (instance ?X FactualText)
    (instance ?what SecurityClassificationLevel)))"
},
{"text":"What was the document X's security classification level after 2001?",
"kif":
"(exists (?X)
  (and
    (greaterThan
      (EndFn
        (WhenFn
          (attribute ?X ?what)))
      (EndFn
        (YearFn 2001)))
    (instance ?X FactualText)
    (instance ?what SecurityClassificationLevel)))"
},
{"text":"What was the document X's security classification level during 2001?",
"kif":
"(exists (?X)
  (and
    (overlapsTemporally
      (WhenFn
        (attribute ?X ?what))
      (YearFn 2001))
    (instance ?X FactualText)
    (instance ?what SecurityClassificationLevel)))"
},
{"text":"What was the document X classified as by the classification authority before 1990?",
"kif":
"(exists (?X ?classification_authority ?event)
  (and
    (holdsDuring
      (EndFn
        (WhenFn ?event))
      (attribute ?X ?what))
    (lessThan
      (BeginFn
        (WhenFn
          (attribute ?X ?what)))
      (BeginFn
        (YearFn 1990)))
    (instance ?X FactualText)
    (instance ?classification_authority ClassificationAuthority)
    (instance ?event Classifying)
    (instance ?what SecurityClassificationLevel)
    (patient ?event ?X)
    (agent ?event ?classification_authority)))"
},
{"text":"Since when did the classification authority classify the document as secret?",
"kif":
"(exists (?classification_authority ?document ?event)
  (and
    (holdsDuring
      (EndFn
        (WhenFn ?event))
      (attribute ?document USSecret))
    (instance ?classification_authority ClassificationAuthority)
    (instance ?document FactualText)
    (instance ?event Classifying)
    (equal
      (BeginFn
        (WhenFn
          (attribute ?document USSecret))) ?since_when)
    (agent ?event ?classification_authority)
    (patient ?event ?document)))"
},
{"text":"Since when was the document X classified as secret?",
"kif":
"(exists (?X ?agent ?event)
  (and
    (holdsDuring
      (EndFn
        (WhenFn ?event))
      (attribute ?X USSecret))
    (instance ?X FactualText)
    (instance ?agent Agent)
    (instance ?event Classifying)
    (equal
      (BeginFn
        (WhenFn
          (attribute ?X USSecret))) ?since_when)
    (patient ?event ?X)
    (agent ?event ?agent)))"
},
{"text":"Since when was the document classified as secret?",
"kif":
"(exists (?agent ?document ?event)
  (and
    (holdsDuring
      (EndFn
        (WhenFn ?event))
      (attribute ?document USSecret))
    (instance ?agent Agent)
    (instance ?document FactualText)
    (instance ?event Classifying)
    (equal
      (BeginFn
        (WhenFn
          (attribute ?document USSecret))) ?since_when)
    (agent ?event ?agent)
    (patient ?event ?document)))"
},
{"text":"Which document is top secret?",
"kif":
"(and
  (attribute ?document USTopSecret)
  (instance ?document FactualText))"
},
{"text":"Which customer enters the card?",
"kif":
"(exists (?card ?event ?salesperson)
  (and
    (instance ?card BankCard)
    (instance ?customer CognitiveAgent)
    (instance ?event Motion)
    (instance ?salesperson CognitiveAgent)
    (patient ?event ?card)
    (agent ?event ?customer)
    (customer ?customer ?salesperson)))"
},
{"text":"Which card does Bob enter?",
"kif":
"(exists (?event)
  (and
    (attribute Robert-1 Male)
    (instance Robert-1 Human)
    (agent ?event Robert-1)
    (instance ?event Motion)
    (patient ?event ?card)))"
},
{"text":"Which document did Bob classify as top secret?",
"kif":
"(exists (?event)
  (and
    (attribute Robert-1 Male)
    (holdsDuring
      (EndFn
        (WhenFn ?event))
      (attribute ?document USTopSecret))
    (instance Robert-1 Human)
    (agent ?event Robert-1)
    (instance ?event Classifying)
    (patient ?event ?document)))"
},
{"text":"Which document was classified as top secret by the SIO?",
"kif":
"(exists (?SIO ?event)
  (and
    (holdsDuring
      (EndFn
        (WhenFn ?event))
      (attribute ?document USTopSecret))
    (instance ?SIO SeniorIntelligenceOfficer)
    (instance ?document FactualText)
    (instance ?event Classifying)
    (agent ?event ?SIO)
    (patient ?event ?document)))"
},
{"text":"Which card is valid?",
"kif":
"(and
  (attribute ?card Valid)
  (instance ?card BankCard))"
},
{"text":"Which card is inserted?",
"kif":
"(exists (?agent ?event)
  (and
    (instance ?agent Agent)
    (instance ?card BankCard)
    (instance ?event Putting)
    (agent ?event ?agent)
    (patient ?event ?card)))"
},
{"text":"Which document was classified as secret?",
"kif":
"(exists (?agent ?event)
  (and
    (holdsDuring
      (EndFn
        (WhenFn ?event))
      (attribute ?document USSecret))
    (instance ?agent Agent)
    (instance ?document FactualText)
    (instance ?event Classifying)
    (agent ?event ?agent)
    (patient ?event ?document)))"
},
{"text":"Which document was sent to Mary?",
"kif":
"(exists (?agent ?event)
  (and
    (attribute Mary-1 Female)
    (instance Mary-1 Human)
    (instance ?agent Agent)
    (instance ?document FactualText)
    (destination ?event Mary-1)
    (instance ?event Directing)
    (agent ?event ?agent)
    (patient ?event ?document)))"
},
{"text":"Which security classification level did Bob classify the document X as?",
"kif":
"(exists (?X ?event)
  (and
    (attribute Robert-1 Male)
    (holdsDuring
      (EndFn
        (WhenFn ?event))
      (attribute ?X ?security_classification_level))
    (instance Robert-1 Human)
    (instance ?X FactualText)
    (agent ?event Robert-1)
    (instance ?event Classifying)
    (instance ?security_classification_level SecurityClassificationLevel)
    (patient ?event ?X)))"
},
{"text":"When was the document classified as secret?",
"kif":
"(exists (?agent ?document ?event)
  (and
    (holdsDuring
      (EndFn
        (WhenFn ?event))
      (attribute ?document USSecret))
    (instance ?agent Agent)
    (instance ?document FactualText)
    (instance ?event Classifying)
    (equal
      (BeginFn
        (WhenFn
          (attribute ?document USSecret))) ?when)
    (agent ?event ?agent)
    (patient ?event ?document)))"
},
{"text":"When was the document not classified as secret?",
"kif":
"(not
  (exists (?agent ?document ?event)
    (and
      (holdsDuring
        (EndFn
          (WhenFn ?event))
        (attribute ?document USSecret))
      (instance ?agent Agent)
      (instance ?document FactualText)
      (instance ?event Classifying)
      (equal
        (BeginFn
          (WhenFn
            (attribute ?document USSecret))) ?when)
      (agent ?event ?agent)
      (patient ?event ?document))))"
},
{"text":"When did Bob write the book?",
"kif":
"(exists (?book)
  (and
    (attribute Robert-1 Male)
    (instance Robert-1 Human)
    (authors Robert-1 ?book)
    (instance ?book Book)
    (equal
      (BeginFn
        (WhenFn
          (authors Robert-1 ?book))) ?when)))"
},
{"text":"Until when was the document not classified as top secret?",
"kif":
"(not
  (exists (?agent ?document ?event)
    (and
      (holdsDuring
        (EndFn
          (WhenFn ?event))
        (attribute ?document USTopSecret))
      (instance ?agent Agent)
      (instance ?document FactualText)
      (instance ?event Classifying)
      (equal
        (EndFn
          (WhenFn
            (attribute ?document USTopSecret))) ?until_when)
      (agent ?event ?agent)
      (patient ?event ?document))))"
},
{"text":"How long did Bob write the book?",
"kif":
"(exists (?book)
  (and
    (attribute Robert-1 Male)
    (instance Robert-1 Human)
    (authors Robert-1 ?book)
    (instance ?book Book)
    (duration
      (WhenFn
        (authors Robert-1 ?book)) ?how_long)))"
},
{"text":"How long is the meeting?",
"kif":
"(exists (?meeting)
  (and
    (duration
      (WhenFn ?meeting) ?how_long)
    (instance ?meeting FormalMeeting)))"
},
{"text":"How long is the document unclassified?",
"kif":
"(exists (?document)
  (and
    (attribute ?document USUnclassified)
    (instance ?document FactualText)
    (duration
      (WhenFn
        (attribute ?document USUnclassified)) ?how_long)))"
},
{"text":"How long is the wound red?",
"kif":
"(exists (?wound)
  (and
    (duration
      (WhenFn
        (attribute ?wound Red)) ?how_long)
    (attribute ?wound Red)
    (instance ?wound Injuring)))"
},
{"text":"How long was the document X classified as top secret?",
"kif":
"(exists (?X ?agent ?event)
  (and
    (holdsDuring
      (EndFn
        (WhenFn ?event))
      (attribute ?X USTopSecret))
    (instance ?X FactualText)
    (instance ?agent Agent)
    (instance ?event Classifying)
    (duration
      (WhenFn
        (attribute ?X USTopSecret)) ?how_long)
    (patient ?event ?X)
    (agent ?event ?agent)))"
},
{"text":"By whom was the document X classified as top secret?",
"kif":
"(exists (?X ?event)
  (and
    (holdsDuring
      (EndFn
        (WhenFn ?event))
      (attribute ?X USTopSecret))
    (instance ?X FactualText)
    (instance ?event Classifying)
    (instance ?whom Human)
    (patient ?event ?X)
    (agent ?event ?whom)))"
},
{"text":"By whom was a card sent to Mary?",
"kif":
"(exists (?card ?event)
  (and
    (attribute Mary-1 Female)
    (instance Mary-1 Human)
    (instance ?card BankCard)
    (destination ?event Mary-1)
    (instance ?event Directing)
    (instance ?whom Human)
    (patient ?event ?card)
    (agent ?event ?whom)))"
},
{"text":"By whom was Mary sent a card to?",
"kif":
"(exists (?card ?event)
  (and
    (attribute Mary-1 Female)
    (instance Mary-1 Human)
    (instance ?card BankCard)
    (destination ?event Mary-1)
    (instance ?event Directing)
    (instance ?whom Human)
    (patient ?event ?card)
    (agent ?event ?whom)))"
},
{"text":"By what government agency was the document X classified as secret?",
"kif":
"(exists (?X ?event)
  (and
    (holdsDuring
      (EndFn
        (WhenFn ?event))
      (attribute ?X USSecret))
    (instance ?X FactualText)
    (instance ?event Classifying)
    (instance ?government_agency PoliticalOrganization)
    (patient ?event ?X)
    (agent ?event ?government_agency)))"
},
{"text":"By which classification authority was the document X classified as top secret?",
"kif":
"(exists (?X ?event)
  (and
    (holdsDuring
      (EndFn
        (WhenFn ?event))
      (attribute ?X USTopSecret))
    (instance ?X FactualText)
    (instance ?classification_authority ClassificationAuthority)
    (instance ?event Classifying)
    (patient ?event ?X)
    (agent ?event ?classification_authority)))"
},
{"text":"Where was the document classified as secret?",
"kif":
"(exists (?agent ?document ?event)
  (and
    (holdsDuring
      (EndFn
        (WhenFn ?event))
      (attribute ?document USSecret))
    (instance ?agent Agent)
    (instance ?document FactualText)
    (instance ?event Classifying)
    (agent ?event ?agent)
    (patient ?event ?document)
    (located ?event ?where)))"
},
{"text":"John's brother is Bill.",
"kif":
"(exists (?John-1 ?Bill-5) 
  (and 
    (brother ?John-1 ?Bill-5)
    (attribute ?John-1 Male)
    (instance ?John-1 Human)
    (attribute ?Bill-5 Male)
    (instance ?Bill-5 Human)))"
},
{"text":"Who is John's brother?",
"kif":
"(and 
  (brother John-3 ?WH)
  (instance John-3 Human))"
},
{"text":"John's brother is who?",
"kif":
"(and 
  (brother John-3 ?WH)
  (instance John-3 Human))"
},
{"text":"John is the brother of who?",
"kif":
"(and 
  (brother John-3 ?WH)
  (instance John-3 Human))"
},
{"text":"Who is John the brother of?",
"kif":
"(and 
  (brother John-3 ?WH)
  (instance John-3 Human))"
},
{"text":"John kicks the cart.",
"kif":
"(exists (?John-1 ?cart-4 ?kicks-2) 
  (and 
    (agent ?kicks-2 ?John-1)
    (attribute ?John-1 Male)
    (instance ?kicks-2 Kicking)
    (patient ?kicks-2 ?cart-4)
    (instance ?John-1 Human)
    (instance ?cart-4 Wagon)))"
},
{"text":"John takes a walk.",
"kif":
"(and 
  (agent walk-4 John-1)
  (instance John-1 Human)
  (instance walk-4 Walking))"
},
{"text":"John took a walk",
"kif":
"(and 
  (agent walk-4 John-1)
  (instance John-1 Human)
  (earlier
    (WhenFn walk-4) Now)
  (instance walk-4 Walking))"
},
{"text":"John will take a walk.",
"kif":
"(and 
  (agent walk-5 John-1)
  (instance John-1 Human)
  (earlier Now
    (WhenFn walk-5))
  (instance walk-5 Walking))"
},
{"text":"John has taken a walk.",
"kif":
"(and 
  (agent walk-4 John-1)
  (instance John-1 Human)
  (earlier
    (WhenFn walk-4) Now)
  (instance walk-4 Walking))"
},
{"text":"John takes a drink of water.",
"kif":
"(and 
  (agent drink-4 John-1)
  (patient drink-4 water-6)
  (instance John-1 Human)
  (instance water-6 Water)
  (instance drink-4 Drinking))"
},
{"text":"John made the car invisible.",
"kif":
""
},
{"text":"John made it to the concert on time.",
"kif":
""
},
{"text":"John made a decision.",
"kif":
"(exists (?decision-4 ?John-1) 
   (and 
     (agent ?decision-4 ?John-1)
     (attribute ?John-1 Male)
     (instance ?John-1 Human)
     (earlier
       (WhenFn ?decision-4) Now)
     (instance ?decision-4 Deciding)))"
},
{"text":"John made his case for hiring.",
"kif":
""
},
{"text":"John made it happen.",
"kif":
"(exists (?John-1 ?made-2 ?it-3 ?happen-4) 
   (and 
     (agent ?it-3 ?John-1)
     (attribute ?John-1 Male)
     (instance ?it-3 Process)
     (instance ?John-1 Human)))"
},
{"text":"John's drinking is fast.",
"kif":
"(exists (?John-1 ?drinking-3) 
   (and 
     (attribute ?John-1 Male)
     (instance ?drinking-3 Drinking)
     (manner ?drinking-3 Quick)
     (instance ?John-1 Human)))"
},
{"text":"dogs are mammals.",
"kif":" (subclass Canine Mammal)"
},
{"text":"dogs are small",
"kif":
"(=>
  (instance ?X Canine)
  (attribute ?X Small))
"
},
{"text":"dogs cannot fly",
"kif":
"(=>
  (instance ?X Canine)
  (not
    (capability Flying agent ?X)))"
},
{"text":"dogs live in dog houses",
"kif":
"(=>
  (instance ?D Canine)
  (exists (?H)
    (and
      (instance ?H House)
      (inhabits ?D ?H))))"
},
{"text":"A box can hold things",
"kif":
"(=>
  (instance ?X Box)
  (capability Keeping instrument ?X))"
},
{"text":"A flag is for displaying in public the political group of the owner of the flag",
"kif":""
},
{"text":"A goldfish is a type of carp that makes a nice pet",
"kif":"(subclass Goldfish Carp)
(=>
  (and
    (instance ?G Goldfish)
    (possesses ?A ?G))
  (wants ?A ?G))"
},
{"text":"A lawn is a place outside where grass grows",
"kif":
"(=>
   (instance ?L Lawn)
   (exists (?G)
     (and
       (located ?L ?P)
       (attribute ?P Outside)
       (instance ?G Grass)
       (located ?G ?L)))"
},
{"text":"A nightgown is a long, loose garment worn to bed",
"kif":"(subclass Nightgown Clothing)
(=>
  (instance ?N Nightgown)
  (and
    (attribute ?N Long)
    (attribute ?N Loose)))"
},

{"text":"A roach is an insect",
"kif":"(subclass Roach Insect)"
},

{"text":"A unicycle is a vehicle with one wheel that is moved by pedals",
"kif":"(subclass Unicycle Vehicle)
(=>
  (instance ?U Unicycle)
  (exists (?W)
    (and
      (instance ?W Wheel)
      (part ?W ?U)
      (not
        (exists (?OW)
          (and
            (instance ?OW Wheel)
            (not 
              (equals ?W ?OW))
            (part ?OW ?U)))))))
"
},

{"text":"A wheel is a circular object that rotates around its center",
"kif":
"(=>
  (instance ?W Wheel)
  (attribute ?W Circle))
(=>
  (instance ?W Wheel)
  (capability Rotating patient ?W))
"
},

{"text":"Ants are social insects",
"kif":
"(=>
  (instance ?A AntInsect)
  (capability SocialInteraction agent ?A))"
},

{"text":"At night the sun is not visible",
"kif":
"(=>
  (instance ?N NightTime)
  (not
    (exists (?S)
      (and
        (instance ?S Seeing)
        (patient ?S Sol)))))"
},

{"text":"Coral reefs are warm, clear, shallow ocean habitats that are rich in life",
"kif":
"(=>
  (and
    (instance ?C CoralReef)
    (instance ?W WaterArea)
    (orientation ?W ?C Near))
  (located ?W LittoralZone))
    "
},

{"text":"George washington was the first president of the united states",
"kif":
"(not
  (exists (?L)
    (and
      (holdsDuring ?T (leader UnitedStates GeorgeWashington))
      (holdsDuring ?T2 (leader UnitedStates ?L))
      (earlier ?T2 ?T))))"
},

{"text":"Jelly is a spread made from fruit juice",
"kif":"(subclass Jelly Spread)
(ingredient (JuiceOfFn FruitOrVegetable) Jelly)"
},

{"text":"Lava is hot",
"kif":
"(=>
  (instance ?X Lava)
  (attribute ?X HotTemperature))"
},

{"text":"No block of plastic has ever held public office",
"kif":""
},

{"text":"People have skeletons, and so do many animals",
"kif":""
},

{"text":"Plants can be found in a graveyard",
"kif":""
},

{"text":"Some people climb mountains just because they're there",
"kif":""
},

{"text":"Static electricity can give you a mild shock when you touch metal objects during dry weather",
"kif":""
},

{"text":"The dove is a bird that represents peace",
"kif":""
},

{"text":"The great pyramids are in egypt",
"kif":""
},

{"text":"The labrador retriever is an intelligent and even-tempered dog",
"kif":""
},

{"text":"The person whose birthday it is usually blows out the candle",
"kif":""
},

{"text":"The successor of a number is a number",
"kif":""
},

{"text":"To fix something is to repair it",
"kif":""
},

{"text":"Whelks are ocean animals with a hard, spiral shell",
"kif":""
},

{"text":"Moxy Fruvous comes from canada",
"kif":""
},

{"text":"A boy is a young man",
"kif":""
},

{"text":"A flashlight helps you find your way in the dark",
"kif":""
},

{"text":"A globe is a small model of the earth",
"kif":""
},

{"text":"A lemon is a sour, yellow fruit",
"kif":""
},

{"text":"A nickel is a u.s",
"kif":""
},

{"text":"A road is a wide path made for travelling",
"kif":""
},

{"text":"A uniform is a special outfit worn by members of a group",
"kif":""
},

{"text":"A whale is a mammal that looks like an enormous fish",
"kif":""
},

{"text":"Antelopes are graceful mammals with beautiful horns",
"kif":""
},

{"text":"At night, when the sun goes down, you can see stars in the sky",
"kif":""
},

{"text":"Coral is a tiny ocean animal that lives in colonies",
"kif":""
},

{"text":"Gerbils are small rodents that some people keep as pets",
"kif":""
},

{"text":"Jays are beautiful, noisy birds",
"kif":""
},

{"text":"Large-eyed primates from southeast asia",
"kif":""
},

{"text":"No cat understands long-term investment strategy",
"kif":""
},

{"text":"People have lifestyles",
"kif":""
},

{"text":"Plants grow in a garden",
"kif":""
},

{"text":"Some people carry their lunch in a lunch box",
"kif":""
},
{"text":"Stegosaurus was a plant-eating dinosaur that had armored plates along its back",
"kif":""
},
{"text":"Is there a train from Paris to Lyon?",
"kif":
"(and
  (origin ?X ParisFrance)
  (destination ?X LyonFrance)
  (instance ?X Transportation)
  (instrument ?X ?T)
  (instance ?T Train))"
},
{"text":"I want to leave early in the morning.",
"kif":
"(desires I-me
  (exists (?L)
    (and
      (instance ?M Morning)
      (during
        (BeginFn (WhenFn ?L))
        ?M)
      (origin ?X ParisFrance)
      (destination ?X LyonFrance)
      (instance ?X Transportation)
      (instrument ?X ?T)
      (objectTransferred ?X I-me)
      (instance ?T Train))))"
},
{"text":"Is it a fast train?",
"kif":
"(and
   (origin ?X ParisFrance)
   (destination ?X LyonFrance)
   (instance ?X Transportation)
   (instrument ?X ?T)
   (attribute ?T Fast)
   (instance ?T Train))"
},
{"text":"Can I pay with US Dollar or EURO only ?",
"kif":
"(and
   (or
     (validPaymentType (MeasureFn USDollar ?X) ?S ?P)
     (validPaymentType (MeasureFn EuroDollar ?X) ?S ?P))
   (objectTransferred ?P ?TIC)
   (instance ?TIC Ticket)
   (refers ?TIC ?X)
   (origin ?X ParisFrance)
   (destination ?X LyonFrance)
   (instance ?X Transportation)
   (instrument ?X ?T)
   (attribute ?T Fast)
   (instance ?T Train))"
}
]
